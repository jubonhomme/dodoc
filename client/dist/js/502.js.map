{"version":3,"file":"js/502.js","mappings":"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","sources":["webpack://app/./src/adc-core/fields/DisplayOnMap.vue?bf79","webpack://app/./node_modules/ol/events/EventType.js","webpack://app/./node_modules/ol/Disposable.js","webpack://app/./node_modules/ol/events/Event.js","webpack://app/./node_modules/ol/array.js","webpack://app/./node_modules/ol/functions.js","webpack://app/./node_modules/ol/obj.js","webpack://app/./node_modules/ol/events/Target.js","webpack://app/./node_modules/ol/TileState.js","webpack://app/./node_modules/ol/util.js","webpack://app/./node_modules/ol/easing.js","webpack://app/./node_modules/ol/Tile.js","webpack://app/./node_modules/ol/has.js","webpack://app/./node_modules/ol/dom.js","webpack://app/./node_modules/ol/events.js","webpack://app/./node_modules/ol/Image.js","webpack://app/./node_modules/ol/ImageTile.js","webpack://app/./node_modules/ol/reproj/common.js","webpack://app/./node_modules/ol/extent/Relationship.js","webpack://app/./node_modules/ol/extent.js","webpack://app/./node_modules/ol/proj/Units.js","webpack://app/./node_modules/ol/proj/Projection.js","webpack://app/./node_modules/ol/proj/epsg3857.js","webpack://app/./node_modules/ol/proj/epsg4326.js","webpack://app/./node_modules/ol/proj/projections.js","webpack://app/./node_modules/ol/proj/transforms.js","webpack://app/./node_modules/ol/coordinate.js","webpack://app/./node_modules/ol/math.js","webpack://app/./node_modules/ol/sphere.js","webpack://app/./node_modules/ol/console.js","webpack://app/./node_modules/ol/proj.js","webpack://app/./node_modules/ol/reproj/Triangulation.js","webpack://app/./node_modules/ol/reproj.js","webpack://app/./node_modules/ol/reproj/Tile.js","webpack://app/./node_modules/ol/asserts.js","webpack://app/./node_modules/ol/structs/LRUCache.js","webpack://app/./node_modules/ol/tilecoord.js","webpack://app/./node_modules/ol/TileCache.js","webpack://app/./node_modules/ol/source/TileEventType.js","webpack://app/./node_modules/ol/ObjectEventType.js","webpack://app/./node_modules/ol/Observable.js","webpack://app/./node_modules/ol/Object.js","webpack://app/./node_modules/ol/source/Source.js","webpack://app/./node_modules/ol/TileRange.js","webpack://app/./node_modules/ol/tilegrid/common.js","webpack://app/./node_modules/ol/geom/flat/segments.js","webpack://app/./node_modules/ol/geom/flat/contains.js","webpack://app/./node_modules/ol/geom/flat/intersectsextent.js","webpack://app/./node_modules/ol/size.js","webpack://app/./node_modules/ol/tilegrid/TileGrid.js","webpack://app/./node_modules/ol/tilegrid.js","webpack://app/./node_modules/ol/source/Tile.js","webpack://app/./node_modules/ol/tileurlfunction.js","webpack://app/./node_modules/ol/source/UrlTile.js","webpack://app/./node_modules/ol/source/TileImage.js","webpack://app/./node_modules/ol/source/XYZ.js","webpack://app/./node_modules/ol/source/OSM.js","webpack://app/./node_modules/ol/CollectionEventType.js","webpack://app/./node_modules/ol/Collection.js","webpack://app/./node_modules/ol/transform.js","webpack://app/./node_modules/ol/color.js","webpack://app/./node_modules/ol/style/IconImageCache.js","webpack://app/./node_modules/ol/layer/Property.js","webpack://app/./node_modules/ol/layer/Base.js","webpack://app/./node_modules/ol/render/EventType.js","webpack://app/./node_modules/ol/ViewHint.js","webpack://app/./node_modules/ol/ViewProperty.js","webpack://app/./node_modules/ol/centerconstraint.js","webpack://app/./node_modules/ol/resolutionconstraint.js","webpack://app/./node_modules/ol/rotationconstraint.js","webpack://app/./node_modules/ol/geom/flat/transform.js","webpack://app/./node_modules/ol/geom/Geometry.js","webpack://app/./node_modules/ol/geom/SimpleGeometry.js","webpack://app/./node_modules/ol/geom/flat/closest.js","webpack://app/./node_modules/ol/geom/flat/deflate.js","webpack://app/./node_modules/ol/geom/flat/simplify.js","webpack://app/./node_modules/ol/geom/flat/inflate.js","webpack://app/./node_modules/ol/geom/flat/area.js","webpack://app/./node_modules/ol/geom/LinearRing.js","webpack://app/./node_modules/ol/geom/Point.js","webpack://app/./node_modules/ol/geom/flat/interiorpoint.js","webpack://app/./node_modules/ol/geom/flat/reverse.js","webpack://app/./node_modules/ol/geom/flat/orient.js","webpack://app/./node_modules/ol/geom/Polygon.js","webpack://app/./node_modules/ol/View.js","webpack://app/./node_modules/ol/layer/Layer.js","webpack://app/./node_modules/ol/renderer/Map.js","webpack://app/./node_modules/ol/render/Event.js","webpack://app/./node_modules/ol/css.js","webpack://app/./node_modules/ol/render/canvas.js","webpack://app/./node_modules/ol/renderer/Composite.js","webpack://app/./node_modules/ol/layer/Group.js","webpack://app/./node_modules/ol/MapEvent.js","webpack://app/./node_modules/ol/MapBrowserEvent.js","webpack://app/./node_modules/ol/MapBrowserEventType.js","webpack://app/./node_modules/ol/pointer/EventType.js","webpack://app/./node_modules/ol/MapBrowserEventHandler.js","webpack://app/./node_modules/ol/MapEventType.js","webpack://app/./node_modules/ol/MapProperty.js","webpack://app/./node_modules/ol/structs/PriorityQueue.js","webpack://app/./node_modules/ol/TileQueue.js","webpack://app/./node_modules/ol/control/Control.js","webpack://app/./node_modules/ol/control/Attribution.js","webpack://app/./node_modules/ol/control/Rotate.js","webpack://app/./node_modules/ol/control/Zoom.js","webpack://app/./node_modules/ol/control/defaults.js","webpack://app/./node_modules/ol/interaction/Property.js","webpack://app/./node_modules/ol/interaction/Interaction.js","webpack://app/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://app/./node_modules/ol/interaction/Pointer.js","webpack://app/./node_modules/ol/events/condition.js","webpack://app/./node_modules/ol/interaction/DragPan.js","webpack://app/./node_modules/ol/interaction/DragRotate.js","webpack://app/./node_modules/ol/render/Box.js","webpack://app/./node_modules/ol/interaction/DragBox.js","webpack://app/./node_modules/ol/interaction/DragZoom.js","webpack://app/./node_modules/ol/events/Key.js","webpack://app/./node_modules/ol/interaction/KeyboardPan.js","webpack://app/./node_modules/ol/interaction/KeyboardZoom.js","webpack://app/./node_modules/ol/Kinetic.js","webpack://app/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://app/./node_modules/ol/interaction/PinchRotate.js","webpack://app/./node_modules/ol/interaction/PinchZoom.js","webpack://app/./node_modules/ol/interaction/defaults.js","webpack://app/./node_modules/ol/Map.js","webpack://app/./node_modules/ol/Feature.js","webpack://app/./node_modules/ol/layer/TileProperty.js","webpack://app/./node_modules/ol/layer/BaseTile.js","webpack://app/./node_modules/ol/ImageState.js","webpack://app/./node_modules/ol/renderer/Layer.js","webpack://app/./node_modules/ol/renderer/canvas/Layer.js","webpack://app/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://app/./node_modules/ol/layer/Tile.js","webpack://app/./node_modules/ol/style/Image.js","webpack://app/./node_modules/ol/colorlike.js","webpack://app/./node_modules/ol/style/RegularShape.js","webpack://app/./node_modules/ol/style/Circle.js","webpack://app/./node_modules/ol/style/Fill.js","webpack://app/./node_modules/ol/style/Stroke.js","webpack://app/./node_modules/ol/style/Style.js","webpack://app/./node_modules/ol/style/IconImage.js","webpack://app/./node_modules/ol/style/Icon.js","webpack://app/./node_modules/ol/style/Text.js","webpack://app/./node_modules/ol/expr/expression.js","webpack://app/./node_modules/ol/expr/cpu.js","webpack://app/./node_modules/ol/render/canvas/style.js","webpack://app/./node_modules/ol/layer/BaseVector.js","webpack://app/./node_modules/ol/render/canvas/Instruction.js","webpack://app/./node_modules/ol/render/VectorContext.js","webpack://app/./node_modules/ol/render/canvas/Builder.js","webpack://app/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://app/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://app/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://app/./node_modules/ol/geom/flat/linechunk.js","webpack://app/./node_modules/ol/geom/flat/straightchunk.js","webpack://app/./node_modules/ol/render/canvas/TextBuilder.js","webpack://app/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://app/./node_modules/ol/geom/flat/textpath.js","webpack://app/./node_modules/ol/geom/flat/length.js","webpack://app/./node_modules/ol/render/canvas/Executor.js","webpack://app/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://app/./node_modules/ol/render/canvas/Immediate.js","webpack://app/./node_modules/ol/render/canvas/hitdetect.js","webpack://app/./node_modules/ol/renderer/vector.js","webpack://app/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://app/./node_modules/ol/layer/Vector.js","webpack://app/./node_modules/ol/structs/RBush.js","webpack://app/./node_modules/ol/source/VectorEventType.js","webpack://app/./node_modules/ol/loadingstrategy.js","webpack://app/./node_modules/ol/featureloader.js","webpack://app/./node_modules/ol/source/Vector.js","webpack://app/src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?2e37","webpack://app/./src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?5d51","webpack://app/./node_modules/ol/ol.css","webpack://app/./node_modules/rbush/rbush.min.js","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?43ec","webpack://app/./node_modules/ol/ol.css?8d4f"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"m_displayOnMap\",class:{\n    'is--small': _vm.is_small,\n  }},[_c('div',{staticClass:\"map\",attrs:{\"id\":\"map\"}}),_c('div',{attrs:{\"id\":\"mouse-position\"}}),(_vm.mouse_coords || _vm.pin_infos || _vm.pin_coord)?_c('div',{staticClass:\"_popup\"},[_c('sl-button',{staticClass:\"_popup--close\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){_vm.pin_coord = false;\n        _vm.pin_infos = false;\n        _vm.mouse_coords = false;}}},[_c('sl-icon',{attrs:{\"name\":\"x-circle\"}})],1),(_vm.mouse_coords)?_c('div',[_c('div',{},[_c('b',[_vm._v(_vm._s(_vm.$t(\"mouse_position\")))])]),_c('span',{staticClass:\"complementaryText\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"latitude\"))+\" = \")]),_vm._v(\" \"+_vm._s(_vm.mouse_coords[1])+\"° \"),_c('span',{staticClass:\"complementaryText\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"longitude\"))+\" = \")]),_vm._v(\" \"+_vm._s(_vm.mouse_coords[0])+\"° \"),(_vm.$listeners.newPosition)?_c('div',{},[_c('sl-button',{attrs:{\"size\":\"small\",\"type\":\"success\",\"pill\":\"\"},on:{\"click\":function($event){_vm.$emit('newPosition', {\n              longitude: _vm.mouse_coords[0],\n              latitude: _vm.mouse_coords[1],\n            });\n            _vm.mouse_coords = false;}}},[_vm._v(\" \"+_vm._s(_vm.$t(\"submit\"))+\" \")])],1):_vm._e()]):_vm._e(),(_vm.pin_coord)?_c('div',[_c('div',[_c('b',[_vm._v(_vm._s(_vm.$t(\"pin_position\")))])]),_c('span',{staticClass:\"complementaryText\"},[_vm._v(_vm._s(_vm.$t(\"latitude\"))+\" = \")]),_vm._v(\" \"+_vm._s(_vm.pin_coord.coordinate.latitude)+\"° \"),_c('span',{staticClass:\"complementaryText\"},[_vm._v(_vm._s(_vm.$t(\"longitude\"))+\" = \")]),_vm._v(\" \"+_vm._s(_vm.pin_coord.coordinate.longitude)+\"° \")]):_vm._e(),(_vm.pin_infos)?_c('div',[_c('div',[_c('b',[_vm._v(_vm._s(_vm.$t(\"pin_infos\")))])]),_c('span',{staticClass:\"complementaryText\"},[_vm._v(_vm._s(_vm.$t(\"index\"))+\" = \")]),_vm._v(\" \"+_vm._s(_vm.pin_infos.index)+\" \"),_c('br'),(_vm.pin_infos.label)?_c('span',{staticClass:\"complementaryText\"},[_vm._v(_vm._s(_vm.$t(\"label\"))+\" = \")]):_vm._e(),_vm._v(\" \"+_vm._s(_vm.pin_infos.label)+\" \")]):_vm._e()],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","<template>\n  <div\n    class=\"m_displayOnMap\"\n    :class=\"{\n      'is--small': is_small,\n    }\"\n  >\n    <div id=\"map\" class=\"map\"></div>\n\n    <div id=\"mouse-position\"></div>\n    <div class=\"_popup\" v-if=\"mouse_coords || pin_infos || pin_coord\">\n      <sl-button\n        class=\"_popup--close\"\n        size=\"small\"\n        @click=\"\n          pin_coord = false;\n          pin_infos = false;\n          mouse_coords = false;\n        \"\n      >\n        <sl-icon name=\"x-circle\" />\n      </sl-button>\n\n      <div v-if=\"mouse_coords\">\n        <div class=\"\">\n          <b>{{ $t(\"mouse_position\") }}</b>\n        </div>\n        <span class=\"complementaryText\"> {{ $t(\"latitude\") }} = </span>\n        {{ mouse_coords[1] }}°\n        <span class=\"complementaryText\"> {{ $t(\"longitude\") }} = </span>\n        {{ mouse_coords[0] }}°\n\n        <div v-if=\"$listeners.newPosition\" class=\"\">\n          <sl-button\n            size=\"small\"\n            type=\"success\"\n            @click=\"\n              $emit('newPosition', {\n                longitude: mouse_coords[0],\n                latitude: mouse_coords[1],\n              });\n              mouse_coords = false;\n            \"\n            pill\n          >\n            {{ $t(\"submit\") }}\n          </sl-button>\n        </div>\n      </div>\n      <div v-if=\"pin_coord\">\n        <div>\n          <b>{{ $t(\"pin_position\") }}</b>\n        </div>\n\n        <span class=\"complementaryText\">{{ $t(\"latitude\") }} = </span>\n        {{ pin_coord.coordinate.latitude }}°\n        <span class=\"complementaryText\">{{ $t(\"longitude\") }} = </span>\n        {{ pin_coord.coordinate.longitude }}°\n      </div>\n      <div v-if=\"pin_infos\">\n        <div>\n          <b>{{ $t(\"pin_infos\") }}</b>\n        </div>\n        <span class=\"complementaryText\">{{ $t(\"index\") }} = </span>\n        {{ pin_infos.index }}\n        <br />\n        <span class=\"complementaryText\" v-if=\"pin_infos.label\"\n          >{{ $t(\"label\") }} =\n        </span>\n        {{ pin_infos.label }}\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport OSM from \"ol/source/OSM.js\";\nimport olMap from \"ol/Map\";\nimport olView from \"ol/View\";\nimport olFeature from \"ol/Feature\";\nimport olPoint from \"ol/geom/Point\";\nimport olTileLayer from \"ol/layer/Tile\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport olSourceVector from \"ol/source/Vector\";\nimport * as olProj from \"ol/proj\";\n// incompatibility error ? https://github.com/jonataswalker/ol-geocoder/issues/270\n// TODO FIX later\n// import Geocoder from \"ol-geocoder\";\n\nimport olStyle from \"ol/style/Style\";\nimport olCircleStyle from \"ol/style/Circle\";\nimport olFill from \"ol/style/Fill\";\nimport olStroke from \"ol/style/Stroke\";\nimport olText from \"ol/style/Text\";\n\nexport default {\n  name: \"DisplayOnMap\",\n  props: {\n    pins: [Boolean, Array],\n    start_coords: {\n      type: [Boolean, Array],\n    },\n    start_zoom: {\n      type: [Boolean, Number],\n      default: 9,\n    },\n    is_small: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  components: {},\n  data() {\n    return {\n      pin_infos: false,\n      pin_coord: false,\n      ol_features: undefined,\n\n      mouse_coords: false,\n\n      map: undefined,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        mouse_position: \"Position de la balise\",\n      },\n    },\n  },\n  created() {\n    this.$eventHub.$on(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$on(\"publication.map.openPin\", this.openPin);\n  },\n  mounted() {\n    setTimeout(() => {\n      this.startMap();\n    }, 500);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$off(\"publication.map.openPin\", this.openPin);\n  },\n  watch: {\n    pins: {\n      handler() {\n        this.startMap();\n        // this.map;\n        // const features = this.createFeaturesFromPins();\n        // this.ol_features = new olSourceVector({\n        //   features,\n        //   wrapX: false,\n        // });\n      },\n      deep: true,\n    },\n  },\n  computed: {},\n  methods: {\n    startMap() {\n      let zoom = this.start_zoom;\n      let center = [5.39057449011251, 43.310173305629576];\n\n      if (this.start_coords) center = this.start_coords;\n      else if (\n        this.pins &&\n        this.pins.length > 0 &&\n        this.pins[0] &&\n        this.pins[0].longitude &&\n        this.pins[0].latitude\n      ) {\n        center = [this.pins[0].longitude, this.pins[0].latitude];\n      }\n\n      // destroy map if exist\n      if (this.map) {\n        zoom = this.map.getView().getZoom();\n        center = this.map.getView().getCenter();\n\n        this.map.setTarget(null);\n        this.map = null;\n      }\n\n      // const { Circle, Fill, Stroke, Style, Text } = ol.style;\n      // const Map = ol.Map;\n      // const Overlay = ol.Overlay;\n      // const View = ol.View;\n      // const { Draw } = ol.interaction;\n      olProj.useGeographic();\n\n      const features = this.createFeaturesFromPins();\n      this.ol_features = new olSourceVector({\n        features,\n        wrapX: false,\n      });\n\n      let mouseFeature = new olFeature({\n        geometry: new olPoint([undefined, undefined]),\n      });\n\n      this.view = new olView({\n        center,\n        zoom,\n      });\n      this.map = new olMap({\n        // controls: defaultControls().extend([mousePositionControl]),\n        target: \"map\",\n        layers: [\n          new olTileLayer({\n            source: new OSM(),\n          }),\n          new olVectorLayer({\n            source: this.ol_features,\n            style: (feature, resolution) =>\n              this.makePointStyle({\n                feature,\n                resolution,\n              }),\n          }),\n          new olVectorLayer({\n            source: new olSourceVector({\n              features: [mouseFeature],\n              wrapX: false,\n            }),\n            style: (feature, resolution) =>\n              this.makePointStyle({\n                feature,\n                resolution,\n                fill_color: \"hsla(207, 78%, 53%, .7)\",\n              }),\n          }),\n        ],\n        view: this.view,\n      });\n\n      // const geocoder = new Geocoder(\"nominatim\", {\n      //   provider: \"osm\",\n      //   //key: '__some_key__',\n      //   lang: \"fr-FR\",\n      //   placeholder: this.$t(\"search_for_a_place\"),\n      //   targetType: \"text-input\",\n      //   limit: 5,\n      //   keepOpen: true,\n      // });\n      // this.map.addControl(geocoder);\n\n      this.map.on(\"click\", (event) => {\n        const feature = this.map.getFeaturesAtPixel(event.pixel)[0];\n\n        this.mouse_coords = false;\n        this.pin_coord = false;\n        this.pin_infos = false;\n\n        if (!feature) {\n          this.mouse_coords = event.coordinate;\n          this.$eventHub.$emit(\"publication.map.click\", this.mouse_coords);\n          mouseFeature\n            .getGeometry()\n            .setCoordinates([event.coordinate[0], event.coordinate[1]]);\n        } else {\n          mouseFeature.getGeometry().setCoordinates([undefined, undefined]);\n\n          const coordinate = feature.getGeometry().getCoordinates();\n          this.$eventHub.$emit(\"publication.map.click\", coordinate);\n\n          this.pin_coord = {};\n          this.$set(this.pin_coord, \"coordinate\", {\n            longitude: coordinate[0],\n            latitude: coordinate[1],\n          });\n\n          this.pin_infos = {};\n          if (feature.get(\"label\"))\n            this.$set(this.pin_infos, \"label\", feature.get(\"label\"));\n          if (feature.get(\"index\"))\n            this.$set(this.pin_infos, \"index\", feature.get(\"index\"));\n          if (feature.get(\"content\"))\n            this.$set(this.pin_infos, \"content\", feature.get(\"content\"));\n        }\n      });\n\n      // function addInteraction() {\n      //   draw = new Draw({\n      //     source: source,\n      //     type: \"Point\",\n      //   });\n      //   this.map.addInteraction(draw);\n      // }\n      // addInteraction();\n    },\n    createFeaturesFromPins() {\n      let features = [];\n      if (this.pins && this.pins.length > 0) {\n        this.pins.map((pin) => {\n          if (!pin || !pin.longitude || !pin.latitude) return;\n\n          let feature_cont = {\n            geometry: new olPoint([pin.longitude, pin.latitude]),\n          };\n          feature_cont.index = pin.index;\n          feature_cont.id = pin.$path;\n          if (pin.label) feature_cont.label = pin.label;\n          if (pin.content) feature_cont.content = pin.content;\n          if (pin.color) feature_cont.fill_color = pin.color;\n          features.push(new olFeature(feature_cont));\n        });\n      }\n      return features;\n    },\n    makePointStyle({\n      feature,\n      resolution,\n      fill_color = \"hsla(36, 96%, 50%, .7)\",\n    }) {\n      // see https://openlayers.org/en/latest/examples/vector-labels.html\n      resolution;\n      let style = {};\n      if (feature.get(\"label\")) {\n        const _fs = {\n          italic: \"normal\",\n          weight: \"600\",\n          size: \"14px\",\n          height: 1.2,\n          family: \"IBM Plex Mono\",\n        };\n\n        style.text = new olText({\n          fill: new olFill({ color: \"#000\" }),\n          stroke: new olStroke({ color: \"#fff\" }),\n          // font: \"bold 48px serif\",\n          font:\n            _fs.italic +\n            \" \" +\n            _fs.weight +\n            \" \" +\n            _fs.size +\n            \"/\" +\n            _fs.height +\n            \" \" +\n            _fs.family,\n          text: \"\" + feature.get(\"label\"),\n          textAlign: \"start\",\n          offsetX: 15,\n        });\n      }\n      if (feature.get(\"fill_color\")) {\n        fill_color = feature.get(\"fill_color\");\n      }\n\n      style.image = new olCircleStyle({\n        radius: 8,\n        fill: new olFill({ color: fill_color }),\n        stroke: new olStroke({ color: \"#232e4a\", width: 2 }),\n      });\n\n      return new olStyle(style);\n    },\n    navigateTo({ center, zoom = this.start_zoom }) {\n      this.view.animate({\n        center,\n        zoom,\n        // duration: 2000,\n      });\n    },\n    openPin(path) {\n      const _pin = this.pins.find((p) => p.path === path);\n      if (!_pin) return;\n\n      const { latitude, longitude } = _pin;\n      this.navigateTo({\n        center: [longitude, latitude],\n      });\n      // TODO highlight pin in map (one at a time)\n    },\n  },\n};\n</script>\n<style src=\"../../../node_modules/ol/ol.css\"></style>\n<style lang=\"scss\" scoped>\n.m_displayOnMap {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: var(--c-gris);\n\n  flex: 1 1 320px;\n\n  &.is--small {\n    width: 600px;\n    max-width: 100%;\n    aspect-ratio: 1;\n    border-radius: 4px;\n    overflow: hidden;\n    .map {\n    }\n  }\n}\n.map {\n  width: 100%;\n  height: 100%;\n}\n._popup {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background: white;\n  border-radius: 2px;\n\n  margin: calc(var(--spacing) / 2);\n  padding: calc(var(--spacing) / 4) calc(var(--spacing) / 2);\n  width: calc(100% - var(--spacing) * 2);\n}\n._popup--close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: calc(var(--spacing) / 2);\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DisplayOnMap.vue?vue&type=template&id=13848f54&scoped=true&\"\nimport script from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"../../../node_modules/ol/ol.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./DisplayOnMap.vue?vue&type=style&index=1&id=13848f54&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"13848f54\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m_displayOnMap[data-v-13848f54]{position:relative;width:100%;height:100%;background-color:var(--c-gris);flex:1 1 320px}.m_displayOnMap.is--small[data-v-13848f54]{width:600px;max-width:100%;aspect-ratio:1;border-radius:4px;overflow:hidden}.map[data-v-13848f54]{width:100%;height:100%}._popup[data-v-13848f54]{position:absolute;bottom:0;left:0;background:#fff;border-radius:2px;margin:calc(var(--spacing)/2);padding:calc(var(--spacing)/4) calc(var(--spacing)/2);width:calc(100% - var(--spacing)*2)}._popup--close[data-v-13848f54]{position:absolute;top:0;right:0;padding:calc(var(--spacing)/2)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":host,:root{--ol-background-color:#fff;--ol-accent-background-color:#f5f5f5;--ol-subtle-background-color:hsla(0,0%,50%,.25);--ol-partial-background-color:hsla(0,0%,100%,.75);--ol-foreground-color:#333;--ol-subtle-foreground-color:#666;--ol-brand-color:#0af}.ol-box{box-sizing:border-box;border-radius:2px;border:1.5px solid var(--ol-background-color);background-color:var(--ol-partial-background-color)}.ol-mouse-position{top:8px;right:8px;position:absolute}.ol-scale-line{background:var(--ol-partial-background-color);border-radius:4px;bottom:8px;left:8px;padding:2px;position:absolute}.ol-scale-line-inner{border:1px solid var(--ol-subtle-foreground-color);border-top:none;color:var(--ol-foreground-color);font-size:10px;text-align:center;margin:1px;will-change:contents,width;transition:all .25s}.ol-scale-bar{position:absolute;bottom:8px;left:8px}.ol-scale-bar-inner{display:flex}.ol-scale-step-marker{width:1px;height:15px;background-color:var(--ol-foreground-color);float:right;z-index:10}.ol-scale-step-text{bottom:-5px;font-size:10px;z-index:11}.ol-scale-step-text,.ol-scale-text{position:absolute;color:var(--ol-foreground-color);text-shadow:-1.5px 0 var(--ol-partial-background-color),0 1.5px var(--ol-partial-background-color),1.5px 0 var(--ol-partial-background-color),0 -1.5px var(--ol-partial-background-color)}.ol-scale-text{font-size:12px;text-align:center;bottom:25px}.ol-scale-singlebar{position:relative;height:10px;z-index:9;box-sizing:border-box;border:1px solid var(--ol-foreground-color)}.ol-scale-singlebar-even{background-color:var(--ol-subtle-foreground-color)}.ol-scale-singlebar-odd{background-color:var(--ol-background-color)}.ol-unsupported{display:none}.ol-unselectable,.ol-viewport{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ol-viewport canvas{all:unset;overflow:hidden}.ol-viewport{touch-action:none}.ol-selectable{-webkit-touch-callout:default;-webkit-user-select:text;-moz-user-select:text;user-select:text}.ol-grabbing{cursor:grabbing}.ol-grab{cursor:move;cursor:grab}.ol-control{position:absolute;background-color:var(--ol-subtle-background-color);border-radius:4px}.ol-zoom{top:.5em;left:.5em}.ol-rotate{top:.5em;right:.5em;transition:opacity .25s linear,visibility 0s linear}.ol-rotate.ol-hidden{opacity:0;visibility:hidden;transition:opacity .25s linear,visibility 0s linear .25s}.ol-zoom-extent{top:4.643em;left:.5em}.ol-full-screen{right:.5em;top:.5em}.ol-control button{display:block;margin:1px;padding:0;color:var(--ol-subtle-foreground-color);font-weight:700;text-decoration:none;font-size:inherit;text-align:center;height:1.375em;width:1.375em;line-height:.4em;background-color:var(--ol-background-color);border:none;border-radius:2px}.ol-control button::-moz-focus-inner{border:none;padding:0}.ol-zoom-extent button{line-height:1.4em}.ol-compass{display:block;font-weight:400;will-change:transform}.ol-touch .ol-control button{font-size:1.5em}.ol-touch .ol-zoom-extent{top:5.5em}.ol-control button:focus,.ol-control button:hover{text-decoration:none;outline:1px solid var(--ol-subtle-foreground-color);color:var(--ol-foreground-color)}.ol-zoom .ol-zoom-in{border-radius:2px 2px 0 0}.ol-zoom .ol-zoom-out{border-radius:0 0 2px 2px}.ol-attribution{text-align:right;bottom:.5em;right:.5em;max-width:calc(100% - 1.3em);display:flex;flex-flow:row-reverse;align-items:center}.ol-attribution a{color:var(--ol-subtle-foreground-color);text-decoration:none}.ol-attribution ul{margin:0;padding:1px .5em;color:var(--ol-foreground-color);text-shadow:0 0 2px var(--ol-background-color);font-size:12px}.ol-attribution li{display:inline;list-style:none}.ol-attribution li:not(:last-child):after{content:\\\" \\\"}.ol-attribution img{max-height:2em;max-width:inherit;vertical-align:middle}.ol-attribution button{flex-shrink:0}.ol-attribution.ol-collapsed ul{display:none}.ol-attribution:not(.ol-collapsed){background:var(--ol-partial-background-color)}.ol-attribution.ol-uncollapsible{bottom:0;right:0;border-radius:4px 0 0}.ol-attribution.ol-uncollapsible img{margin-top:-.2em;max-height:1.6em}.ol-attribution.ol-uncollapsible button{display:none}.ol-zoomslider{top:4.5em;left:.5em;height:200px}.ol-zoomslider button{position:relative;height:10px}.ol-touch .ol-zoomslider{top:5.5em}.ol-overviewmap{left:.5em;bottom:.5em}.ol-overviewmap.ol-uncollapsible{bottom:0;left:0;border-radius:0 4px 0 0}.ol-overviewmap .ol-overviewmap-map,.ol-overviewmap button{display:block}.ol-overviewmap .ol-overviewmap-map{border:1px solid var(--ol-subtle-foreground-color);height:150px;width:150px}.ol-overviewmap:not(.ol-collapsed) button{bottom:0;left:0;position:absolute}.ol-overviewmap.ol-collapsed .ol-overviewmap-map,.ol-overviewmap.ol-uncollapsible button{display:none}.ol-overviewmap:not(.ol-collapsed){background:var(--ol-subtle-background-color)}.ol-overviewmap-box{border:1.5px dotted var(--ol-subtle-foreground-color)}.ol-overviewmap .ol-overviewmap-box:hover{cursor:move}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=style&index=1&id=13848f54&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a55e9884\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[3]!./ol.css?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7dd8b254\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","is_small","attrs","mouse_coords","pin_infos","pin_coord","on","$event","_v","_s","$t","$listeners","$emit","longitude","latitude","_e","coordinate","index","label","staticRenderFns","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","Disposable","constructor","disposed","dispose","disposeInternal","BaseEvent","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","IDLE","LOADING","LOADED","EMPTY","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","easeIn","t","Math","pow","easeOut","inAndOut","linear","Tile","EventTarget","tileCoord","state","options","interimTile","key","transition_","transition","transitionStarts_","interpolate","changed","EventType","release","TileState","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","load","getAlpha","id","time","start","delta","inTransition","endTransition","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","get","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","appendChild","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","src","then","catch","forEach","Promise","resolve","reject","handleLoad","unlisten","handleError","decodeFallback","ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","element","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","ERROR_THRESHOLD","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","minX","min","minY","maxX","max","maxY","createOrUpdate","buffer","value","clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","wrapAndSliceX","isFinite","METERS_PER_UNIT","PI","Projection","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","cache","replace","add","transforms","source","destination","sourceCode","destinationCode","transform","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","scale","getWorldsAway","sourceExtentWidth","clamp","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","r","absValue","j","coef","k","m","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","ceil","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransformFunc","getTransform","transformExtent","userProjection","setUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","getImageData","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","pixelRatio","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","z","getTileSize","renderReprojected","leftToLoad","sourceListenKey","e","unlistenSources_","setTimeout","assert","assertion","errorMessage","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","containsKey","hasOwnProperty","f","entry","value_","key_","newer","older","remove","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","set","setSize","getKeyZXY","fromKey","split","map","Number","hash","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getFullTileRange","TileCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","PROPERTYCHANGE","Observable","onInternal","onceInternal","un","unInternal","revision_","getRevision","len","ol_key","unByKey","ObjectEvent","oldValue","BaseObject","values_","setProperties","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","Source","getProjection","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributions","getAttributionsCollapsible","getResolutions","getView","getWrapX","getInterpolate","refresh","setAttributions","attributionLike","frameState","TileRange","contains","containsTileRange","getSize","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","ret","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","ends","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLinearRing","intersectsLinearRingArray","hasArea","ratio","toSize","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","minZoom","resolutions_","resolutions","origins","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","updateCacheSize","tileCount","useTile","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","h","tileCoordHash","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","ADD","REMOVE","Property","LENGTH","CollectionEvent","Collection","array","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","CollectionEventType","removeAt","setAt","except","create","setFromArray","transform1","transform2","makeScale","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","transformStringDiv","transformString","style","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","s","fromStringInternal_","asArray","g","hasAlpha","substr","startsWith","normalize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","colorString","shared","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","minResolution","className_","className","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createSnapToResolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","transform2D","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","simplify","getType","intersectsExtent","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","getCenterInternal","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","getMapInternal","layerState","layerStatesArray","getLayerGroup","find","layerExtent","inView","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","RenderEventType","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","order","distanceSq","hasFeatureAtCoordinate","hasFeature","getMap","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","offsetHeight","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","globalAlpha","contextInstructions","executeLabelInstructions","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","GroupEvent","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","cont","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","mapId","renderTargets","nextExtent","moveStart","equalsExtent","idle","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","oldSize","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","name","styles","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","ImageState","renderIfReadyAndVisible","loadImage","imageState","pixelContext","createPixelContext","willReadFrequently","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","tileOrigin","viewResolution","viewCenter","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","toTransformString","clips","clipZs","currentClip","zs","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","tileCallback","TileLayer","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","asColorLike","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","CircleStyle","setRadius","Fill","color_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","toFunction","styleFunction","defaultStyles","createDefaultStyle","taintedTestContext","IconImage","hitDetectionImage_","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","cacheKey","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","getIconImage","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","DEFAULT_FILL_COLOR","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","parse","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","expression","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","pointsName","requireNumber","shape","evaluateRadius","circle","Circle","requireColorLike","requireNumberArray","requireSizeLike","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","p","flatOffset","o","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","insert","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","getPixelIndexArray","imageData","idx","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","transformToString","hasRenderListeners","clipped","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","maxEntries","rbush_","RBush_","items_","extents","items","bbox","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","concat","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","format","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","featureChangeKeys","removed","setLoader","props","pins","start_coords","start_zoom","default","components","ol_features","i18n","messages","fr","mouse_position","created","mounted","beforeDestroy","watch","handler","deep","computed","methods","startMap","olProj","fill_color","mouseFeature","createFeaturesFromPins","feature_cont","makePointStyle","italic","_fs","navigateTo","openPin","component","___CSS_LOADER_EXPORT___","module","exports","u","_maxEntries","_minEntries","leaf","_all","toBBox","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","content","__esModule","locals"],"sourceRoot":""}