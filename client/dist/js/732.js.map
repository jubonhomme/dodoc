{"version":3,"file":"js/732.js","mappings":"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","sources":["webpack://app/./src/adc-core/fields/DisplayOnMap.vue?89ee","webpack://app/./node_modules/ol/TileState.js","webpack://app/./node_modules/ol/Tile.js","webpack://app/./node_modules/ol/ImageTile.js","webpack://app/./node_modules/ol/reproj/common.js","webpack://app/./node_modules/ol/reproj/Triangulation.js","webpack://app/./node_modules/ol/reproj.js","webpack://app/./node_modules/ol/reproj/Tile.js","webpack://app/./node_modules/ol/structs/LRUCache.js","webpack://app/./node_modules/ol/tilecoord.js","webpack://app/./node_modules/ol/TileCache.js","webpack://app/./node_modules/ol/source/TileEventType.js","webpack://app/./node_modules/ol/TileRange.js","webpack://app/./node_modules/ol/tilegrid/TileGrid.js","webpack://app/./node_modules/ol/tilegrid.js","webpack://app/./node_modules/ol/source/Tile.js","webpack://app/./node_modules/ol/tileurlfunction.js","webpack://app/./node_modules/ol/source/UrlTile.js","webpack://app/./node_modules/ol/source/TileImage.js","webpack://app/./node_modules/ol/source/XYZ.js","webpack://app/./node_modules/ol/source/OSM.js","webpack://app/./node_modules/ol/uri.js","webpack://app/./node_modules/ol/source/WMTS.js","webpack://app/./node_modules/ol/renderer/Map.js","webpack://app/./node_modules/ol/renderer/Composite.js","webpack://app/./node_modules/ol/layer/Group.js","webpack://app/./node_modules/ol/MapEvent.js","webpack://app/./node_modules/ol/MapBrowserEvent.js","webpack://app/./node_modules/ol/MapBrowserEventType.js","webpack://app/./node_modules/ol/pointer/EventType.js","webpack://app/./node_modules/ol/MapBrowserEventHandler.js","webpack://app/./node_modules/ol/MapProperty.js","webpack://app/./node_modules/ol/structs/PriorityQueue.js","webpack://app/./node_modules/ol/TileQueue.js","webpack://app/./node_modules/ol/control/Attribution.js","webpack://app/./node_modules/ol/control/Rotate.js","webpack://app/./node_modules/ol/control/Zoom.js","webpack://app/./node_modules/ol/control/defaults.js","webpack://app/./node_modules/ol/interaction/Property.js","webpack://app/./node_modules/ol/interaction/Interaction.js","webpack://app/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://app/./node_modules/ol/interaction/Pointer.js","webpack://app/./node_modules/ol/events/condition.js","webpack://app/./node_modules/ol/interaction/DragPan.js","webpack://app/./node_modules/ol/interaction/DragRotate.js","webpack://app/./node_modules/ol/render/Box.js","webpack://app/./node_modules/ol/interaction/DragBox.js","webpack://app/./node_modules/ol/interaction/DragZoom.js","webpack://app/./node_modules/ol/events/Key.js","webpack://app/./node_modules/ol/interaction/KeyboardPan.js","webpack://app/./node_modules/ol/interaction/KeyboardZoom.js","webpack://app/./node_modules/ol/Kinetic.js","webpack://app/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://app/./node_modules/ol/interaction/PinchRotate.js","webpack://app/./node_modules/ol/interaction/PinchZoom.js","webpack://app/./node_modules/ol/interaction/defaults.js","webpack://app/./node_modules/ol/Map.js","webpack://app/./node_modules/ol/geom/flat/interpolate.js","webpack://app/./node_modules/ol/geom/LineString.js","webpack://app/./node_modules/ol/layer/TileProperty.js","webpack://app/./node_modules/ol/layer/BaseTile.js","webpack://app/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://app/./node_modules/ol/layer/Tile.js","webpack://app/./node_modules/ol/tilegrid/WMTS.js","webpack://app/./node_modules/ol/Overlay.js","webpack://app/src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?2e37","webpack://app/./src/adc-core/fields/DisplayOnMap.vue","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?8a95","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?5c8a","webpack://app/./node_modules/ol/ol.css","webpack://app/../konstants/index.js","webpack://app/../src/helpers/mix.js","webpack://app/../src/helpers/dom.js","webpack://app/../src/html.js","webpack://app/../src/helpers/ajax.js","webpack://app/../src/providers/photon.js","webpack://app/../src/providers/osm.js","webpack://app/../src/providers/mapquest.js","webpack://app/../src/providers/bing.js","webpack://app/../src/providers/opencage.js","webpack://app/../src/nominatim.js","webpack://app/../src/base.js","webpack://app/./node_modules/rbush/rbush.min.js","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css?5e9d","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?2117","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?7870","webpack://app/./node_modules/ol/ol.css?8d4f","webpack://app/./node_modules/ol/Collection.js","webpack://app/./node_modules/ol/CollectionEventType.js","webpack://app/./node_modules/ol/Disposable.js","webpack://app/./node_modules/ol/Feature.js","webpack://app/./node_modules/ol/Image.js","webpack://app/./node_modules/ol/ImageState.js","webpack://app/./node_modules/ol/MapEventType.js","webpack://app/./node_modules/ol/Object.js","webpack://app/./node_modules/ol/ObjectEventType.js","webpack://app/./node_modules/ol/Observable.js","webpack://app/./node_modules/ol/ViewProperty.js","webpack://app/./node_modules/ol/centerconstraint.js","webpack://app/./node_modules/ol/resolutionconstraint.js","webpack://app/./node_modules/ol/View.js","webpack://app/./node_modules/ol/ViewHint.js","webpack://app/./node_modules/ol/array.js","webpack://app/./node_modules/ol/asserts.js","webpack://app/./node_modules/ol/color.js","webpack://app/./node_modules/ol/colorlike.js","webpack://app/./node_modules/ol/console.js","webpack://app/./node_modules/ol/control/Control.js","webpack://app/./node_modules/ol/coordinate.js","webpack://app/./node_modules/ol/css.js","webpack://app/./node_modules/ol/dom.js","webpack://app/./node_modules/ol/easing.js","webpack://app/./node_modules/ol/events.js","webpack://app/./node_modules/ol/events/Event.js","webpack://app/./node_modules/ol/events/EventType.js","webpack://app/./node_modules/ol/events/Target.js","webpack://app/./node_modules/ol/extent.js","webpack://app/./node_modules/ol/extent/Relationship.js","webpack://app/./node_modules/ol/functions.js","webpack://app/./node_modules/ol/geom/Point.js","webpack://app/./node_modules/ol/geom/flat/area.js","webpack://app/./node_modules/ol/geom/LinearRing.js","webpack://app/./node_modules/ol/geom/flat/interiorpoint.js","webpack://app/./node_modules/ol/geom/flat/reverse.js","webpack://app/./node_modules/ol/geom/flat/orient.js","webpack://app/./node_modules/ol/geom/Polygon.js","webpack://app/./node_modules/ol/geom/Geometry.js","webpack://app/./node_modules/ol/geom/SimpleGeometry.js","webpack://app/./node_modules/ol/geom/flat/closest.js","webpack://app/./node_modules/ol/geom/flat/contains.js","webpack://app/./node_modules/ol/geom/flat/deflate.js","webpack://app/./node_modules/ol/geom/flat/inflate.js","webpack://app/./node_modules/ol/geom/flat/intersectsextent.js","webpack://app/./node_modules/ol/geom/flat/length.js","webpack://app/./node_modules/ol/geom/flat/segments.js","webpack://app/./node_modules/ol/geom/flat/simplify.js","webpack://app/./node_modules/ol/geom/flat/transform.js","webpack://app/./node_modules/ol/has.js","webpack://app/./node_modules/ol/layer/Base.js","webpack://app/./node_modules/ol/layer/Layer.js","webpack://app/./node_modules/ol/layer/Property.js","webpack://app/./node_modules/ol/expr/expression.js","webpack://app/./node_modules/ol/expr/cpu.js","webpack://app/./node_modules/ol/render/canvas/style.js","webpack://app/./node_modules/ol/layer/BaseVector.js","webpack://app/./node_modules/ol/render/canvas/Instruction.js","webpack://app/./node_modules/ol/render/VectorContext.js","webpack://app/./node_modules/ol/render/canvas/Builder.js","webpack://app/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://app/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://app/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://app/./node_modules/ol/geom/flat/linechunk.js","webpack://app/./node_modules/ol/geom/flat/straightchunk.js","webpack://app/./node_modules/ol/render/canvas/TextBuilder.js","webpack://app/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://app/./node_modules/ol/geom/flat/textpath.js","webpack://app/./node_modules/ol/render/canvas/Executor.js","webpack://app/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://app/./node_modules/ol/render/canvas/Immediate.js","webpack://app/./node_modules/ol/render/canvas/hitdetect.js","webpack://app/./node_modules/ol/renderer/vector.js","webpack://app/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://app/./node_modules/ol/layer/Vector.js","webpack://app/./node_modules/ol/math.js","webpack://app/./node_modules/ol/obj.js","webpack://app/./node_modules/ol/proj/Units.js","webpack://app/./node_modules/ol/proj/Projection.js","webpack://app/./node_modules/ol/proj/epsg3857.js","webpack://app/./node_modules/ol/proj/epsg4326.js","webpack://app/./node_modules/ol/proj/projections.js","webpack://app/./node_modules/ol/proj/transforms.js","webpack://app/./node_modules/ol/sphere.js","webpack://app/./node_modules/ol/proj.js","webpack://app/./node_modules/ol/render/Event.js","webpack://app/./node_modules/ol/render/EventType.js","webpack://app/./node_modules/ol/render/canvas.js","webpack://app/./node_modules/ol/renderer/Layer.js","webpack://app/./node_modules/ol/renderer/canvas/Layer.js","webpack://app/./node_modules/ol/rotationconstraint.js","webpack://app/./node_modules/ol/size.js","webpack://app/./node_modules/ol/source/Source.js","webpack://app/./node_modules/ol/structs/RBush.js","webpack://app/./node_modules/ol/source/VectorEventType.js","webpack://app/./node_modules/ol/loadingstrategy.js","webpack://app/./node_modules/ol/featureloader.js","webpack://app/./node_modules/ol/source/Vector.js","webpack://app/./node_modules/ol/style/Circle.js","webpack://app/./node_modules/ol/style/Fill.js","webpack://app/./node_modules/ol/style/IconImage.js","webpack://app/./node_modules/ol/style/Icon.js","webpack://app/./node_modules/ol/style/IconImageCache.js","webpack://app/./node_modules/ol/style/Image.js","webpack://app/./node_modules/ol/style/RegularShape.js","webpack://app/./node_modules/ol/style/Stroke.js","webpack://app/./node_modules/ol/style/Style.js","webpack://app/./node_modules/ol/style/Text.js","webpack://app/./node_modules/ol/tilegrid/common.js","webpack://app/./node_modules/ol/transform.js","webpack://app/./node_modules/ol/util.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"m_displayOnMap\",class:{\n    'is--small': _vm.is_small,\n  }},[_c('div',{ref:\"map\",staticClass:\"map\"}),_c('div',{ref:\"popUp\",staticClass:\"_popup\"},[_c('div',{key:_vm.clicked_location.latitude + '-' + _vm.clicked_location.longitude},[_c('button',{ref:\"closePopup\",staticClass:\"u-button u-button_icon _popupClose\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closePopup}},[_c('b-icon',{attrs:{\"icon\":\"x-circle\"}})],1),(_vm.popup_message)?_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.popup_message)}}):_vm._e(),(_vm.clicked_location.file)?_c('div',{key:_vm.clicked_location.file.$path,staticClass:\"_pinContent\"},[_c('MediaContent',{attrs:{\"file\":_vm.clicked_location.file,\"is_draggable\":false,\"resolution\":1600,\"context\":'full',\"show_fs_button\":true}})],1):_vm._e(),(\n          !_vm.clicked_location.file && _vm.$slots.hasOwnProperty('popup_message')\n        )?_c('div',{staticClass:\"_popupMessage\"},[_vm._t(\"popup_message\")],2):_vm._e()])]),_c('div',{attrs:{\"id\":\"mouse-position\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","<template>\n  <div\n    class=\"m_displayOnMap\"\n    :class=\"{\n      'is--small': is_small,\n    }\"\n  >\n    <div class=\"map\" ref=\"map\" />\n\n    <div ref=\"popUp\" class=\"_popup\">\n      <div :key=\"clicked_location.latitude + '-' + clicked_location.longitude\">\n        <button\n          type=\"button\"\n          class=\"u-button u-button_icon _popupClose\"\n          ref=\"closePopup\"\n          @click=\"closePopup\"\n        >\n          <b-icon icon=\"x-circle\" />\n        </button>\n        <div v-if=\"popup_message\" v-html=\"popup_message\" />\n\n        <div\n          v-if=\"clicked_location.file\"\n          :key=\"clicked_location.file.$path\"\n          class=\"_pinContent\"\n        >\n          <MediaContent\n            :file=\"clicked_location.file\"\n            :is_draggable=\"false\"\n            :resolution=\"1600\"\n            :context=\"'full'\"\n            :show_fs_button=\"true\"\n          />\n        </div>\n\n        <!-- <div class=\"u-instructions\">\n          <small>\n            <span class=\"complementaryText\"> {{ $t(\"latitude\") }} = </span>\n            {{ clicked_location.latitude }}°\n            <br />\n            <span class=\"complementaryText\"> {{ $t(\"longitude\") }} = </span>\n            {{ clicked_location.longitude }}°\n          </small>\n        </div> -->\n        <div\n          class=\"_popupMessage\"\n          v-if=\"\n            !clicked_location.file && $slots.hasOwnProperty('popup_message')\n          \"\n        >\n          <slot name=\"popup_message\" />\n        </div>\n      </div>\n    </div>\n    <div id=\"mouse-position\" />\n  </div>\n</template>\n<script>\nimport olSourceOSM from \"ol/source/OSM\";\nimport olSourceWMTS from \"ol/source/WMTS\";\nimport olMap from \"ol/Map\";\nimport olView from \"ol/View\";\nimport olFeature from \"ol/Feature\";\nimport olPoint from \"ol/geom/Point\";\nimport olLineString from \"ol/geom/LineString\";\nimport olTileLayer from \"ol/layer/Tile\";\nimport olTileGridWMTS from \"ol/tilegrid/WMTS\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport olSourceVector from \"ol/source/Vector\";\nimport * as olProj from \"ol/proj\";\nimport olOverlay from \"ol/Overlay\";\n\n// incompatibility error ? https://github.com/jonataswalker/ol-geocoder/issues/270\n// TODO FIX later\n\nimport Geocoder from \"ol-geocoder\";\nimport \"ol-geocoder/dist/ol-geocoder.min.css\";\n\nimport olStyle from \"ol/style/Style\";\nimport olCircleStyle from \"ol/style/Circle\";\nimport olFill from \"ol/style/Fill\";\nimport olStroke from \"ol/style/Stroke\";\nimport olText from \"ol/style/Text\";\n\nexport default {\n  name: \"DisplayOnMap\",\n  props: {\n    pins: [Boolean, Array],\n    lines: [Boolean, Object],\n    start_coords: {\n      type: [Boolean, Object],\n    },\n    start_zoom: {\n      type: [Boolean, Number],\n      default: 9,\n    },\n    map_baselayer: {\n      type: String,\n      default: \"OSM\",\n      validator(value) {\n        // The value must match one of these strings\n        return [\"OSM\", \"IGN_MAP\", \"IGN_SAT\"].includes(value);\n      },\n    },\n    is_small: {\n      type: Boolean,\n      default: true,\n    },\n    can_add_media_to_point: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  components: {},\n  data() {\n    return {\n      pin_infos: false,\n      pin_coord: false,\n      overlay: undefined,\n\n      popup_message: undefined,\n      clicked_location: {\n        latitude: undefined,\n        longitude: undefined,\n        file: undefined,\n      },\n\n      pin_features: undefined,\n      mouse_feature: undefined,\n\n      current_zoom: undefined,\n      current_view: undefined,\n\n      min_zoom: 3,\n      max_zoom: 22,\n\n      mouse_coords: false,\n\n      map: undefined,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        mouse_position: \"Position de la balise\",\n        search_for_a_place: \"Rechercher un lieu\",\n      },\n    },\n  },\n  created() {\n    this.$eventHub.$on(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$on(\"publication.map.openPin\", this.openPin);\n  },\n  mounted() {\n    setTimeout(() => {\n      this.startMap();\n    }, 500);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"publication.map.navigateTo\", this.navigateTo);\n    this.$eventHub.$off(\"publication.map.openPin\", this.openPin);\n  },\n  watch: {\n    pins: {\n      handler() {\n        this.startMap();\n      },\n      deep: true,\n    },\n    lines: {\n      handler() {\n        this.startMap();\n      },\n      deep: true,\n    },\n    map_baselayer() {\n      this.startMap();\n    },\n  },\n  computed: {},\n  methods: {\n    startMap() {\n      let zoom =\n        this.constrainVal(this.start_zoom, this.min_zoom, this.max_zoom) || 9;\n      let center = [5.39057449011251, 43.310173305629576];\n\n      if (this.start_coords?.longitude && this.start_coords?.latitude)\n        center = [this.start_coords.longitude, this.start_coords.latitude];\n      else if (\n        this.pins &&\n        this.pins.length > 0 &&\n        this.pins[0] &&\n        this.pins[0].longitude &&\n        this.pins[0].latitude\n      ) {\n        center = [this.pins[0].longitude, this.pins[0].latitude];\n      }\n\n      // destroy map if exist\n      if (this.map) {\n        zoom = this.map.getView().getZoom();\n        center = this.map.getView().getCenter();\n\n        this.map.setTarget(null);\n        this.map = null;\n      }\n\n      olProj.useGeographic();\n\n      this.view = new olView({\n        center,\n        zoom,\n        minZoom: this.min_zoom,\n        maxZoom: this.max_zoom,\n      });\n\n      const source = this.createSource(this.map_baselayer);\n\n      this.map = new olMap({\n        target: this.$refs.map,\n        layers: [\n          new olTileLayer({\n            source,\n          }),\n        ],\n        view: this.view,\n      });\n\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: this.createLineFeaturesFromLines(),\n            wrapX: false,\n          }),\n          style: (feature) => this.makeLineStyle(feature),\n        })\n      );\n\n      this.pin_features = this.createPointFeaturesFromPins();\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: this.pin_features,\n            wrapX: false,\n          }),\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n            }),\n        })\n      );\n\n      /////////////////////////////////////////////////////////////// MOUSE\n      this.mouse_feature = new olFeature({\n        geometry: new olPoint([undefined, undefined]),\n      });\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: [this.mouse_feature],\n            wrapX: false,\n          }),\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n              fill_color: \"hsla(207, 78%, 53%, .7)\",\n            }),\n        })\n      );\n\n      //////////////////////////////////////////////////// SEARCH FIELD\n\n      let lang = \"fr-FR\";\n      if (this.$i18n.locale === \"en\") lang = \"en-US\";\n\n      const geocoder = new Geocoder(\"nominatim\", {\n        provider: \"osm\",\n        //key: '__some_key__',\n        lang,\n        placeholder: this.$t(\"search_for_a_place\"),\n        // targetType: \"text-input\",\n        limit: 5,\n        keepOpen: false,\n        preventDefault: true,\n      });\n      this.map.addControl(geocoder);\n      geocoder.on(\"addresschosen\", (evt) => {\n        // const feature = evt.feature,\n        //   address = evt.address;\n        // content.innerHTML = \"<p>\" + address.formatted + \"</p>\";\n        if (evt.place?.lon && evt.place?.lat) {\n          // const coordinate = [2.214555195288306, 47.1857072668881];\n          this.clicked_location.latitude = +evt.place.lat;\n          this.clicked_location.longitude = +evt.place.lon;\n          const coordinate = [\n            this.clicked_location.longitude,\n            this.clicked_location.latitude,\n          ];\n\n          this.popup_message = evt.address.formatted;\n\n          this.overlay.setPosition(coordinate);\n\n          this.navigateTo({\n            center: [+evt.place.lon, +evt.place.lat],\n          });\n          // this.map.getView().fit(evt.place.bbox);\n        }\n      });\n\n      //////////////////////////////////////////////////// OVERLAYS\n\n      this.overlay = new olOverlay({\n        element: this.$refs.popUp,\n        autoPan: false,\n      });\n      this.map.addOverlay(this.overlay);\n\n      //////////////////////////////////////////////////// SEARCH FIELD\n\n      let feature_selected = null;\n      this.map.on(\"pointermove\", (event) => {\n        if (feature_selected !== null) {\n          feature_selected.setStyle(undefined);\n          feature_selected = null;\n        }\n\n        this.map.forEachFeatureAtPixel(event.pixel, (f) => {\n          feature_selected = f;\n          // const selectStyle = this.makePointStyle({});\n          // selectStyle.getFill().setColor(f.get(\"COLOR\") || \"#eeeeee\");\n          // f.setStyle(selectStyle);\n          // return true;\n        });\n      });\n\n      this.current_zoom = zoom;\n      this.current_view = center;\n      this.map.on(\"moveend\", () => {\n        this.current_zoom = this.roundToDec(this.map.getView().getZoom());\n        this.current_view = this.map.getView().getCenter();\n      });\n\n      this.map.on(\"singleclick\", (event) => {\n        this.closePopup();\n        const feature = this.map.getFeaturesAtPixel(event.pixel)[0];\n        let [longitude, latitude] = event.coordinate;\n        longitude = this.roundToDec(longitude, 6);\n        latitude = this.roundToDec(latitude, 6);\n\n        if (!feature) {\n          this.$emit(\"newPositionClicked\", {\n            longitude,\n            latitude,\n            zoom: this.current_zoom,\n          });\n          this.$eventHub.$emit(\"publication.map.click\", {\n            longitude,\n            latitude,\n          });\n          this.mouse_feature\n            .getGeometry()\n            .setCoordinates([longitude, latitude]);\n\n          this.overlay.setPosition([longitude, latitude]);\n          this.clicked_location.longitude = longitude;\n          this.clicked_location.latitude = latitude;\n        } else {\n          const path = feature.get(\"path\");\n          this.openPin(path);\n        }\n      });\n\n      // function addInteraction() {\n      //   draw = new Draw({\n      //     source: source,\n      //     type: \"Point\",\n      //   });\n      //   this.map.addInteraction(draw);\n      // }\n      // addInteraction();\n    },\n    createSource(type) {\n      if (type === \"OSM\") {\n        return new olSourceOSM({\n          wrapX: false,\n          noWrap: true,\n        });\n      } else if ([\"IGN_SAT\", \"IGN_MAP\"].includes(type)) {\n        const resolutions = [\n          156543.03392804103, 78271.5169640205, 39135.75848201024,\n          19567.879241005125, 9783.939620502562, 4891.969810251281,\n          2445.9849051256406, 1222.9924525628203, 611.4962262814101,\n          305.74811314070485, 152.87405657035254, 76.43702828517625,\n          38.218514142588134, 19.109257071294063, 9.554628535647034,\n          4.777314267823517, 2.3886571339117584, 1.1943285669558792,\n          0.5971642834779396, 0.29858214173896974, 0.14929107086948493,\n          0.07464553543474241,\n        ];\n\n        let layer, format;\n        if (type === \"IGN_MAP\") {\n          layer = \"GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2\";\n          format = \"image/png\";\n        } else if (type === \"IGN_SAT\") {\n          layer = \"ORTHOIMAGERY.ORTHOPHOTOS\";\n          format = \"image/jpeg\";\n        }\n\n        return new olSourceWMTS({\n          url: \"https://wxs.ign.fr/decouverte/geoportail/wmts\",\n          layer,\n          matrixSet: \"PM\",\n          format,\n          style: \"normal\",\n          tileGrid: new olTileGridWMTS({\n            origin: [-20037508, 20037508], // topLeftCorner\n            resolutions, // résolutions\n            matrixIds: [\n              \"0\",\n              \"1\",\n              \"2\",\n              \"3\",\n              \"4\",\n              \"5\",\n              \"6\",\n              \"7\",\n              \"8\",\n              \"9\",\n              \"10\",\n              \"11\",\n              \"12\",\n              \"13\",\n              \"14\",\n              \"15\",\n              \"16\",\n              \"17\",\n              \"18\",\n              \"19\",\n            ], // ids des TileMatrix\n          }),\n          wrapX: false,\n          noWrap: true,\n        });\n      }\n    },\n    createPointFeaturesFromPins() {\n      let features = [];\n      if (this.pins && this.pins.length > 0) {\n        this.pins.map((pin) => {\n          if (!pin || !pin.longitude || !pin.latitude) return;\n\n          let feature_cont = {\n            geometry: new olPoint([pin.longitude, pin.latitude]),\n          };\n          feature_cont.path = pin.path;\n          if (pin.color) feature_cont.fill_color = pin.color;\n          if (pin.file) feature_cont.file = pin.file;\n          features.push(new olFeature(feature_cont));\n        });\n      }\n      return features;\n    },\n    createLineFeaturesFromLines() {\n      let features = [];\n      if (this.lines && Object.keys(this.lines).length > 0) {\n        // const lines = this.pins.reduce((acc, pin) => {\n        //   if (pin.belongs_to_layer) {\n        //   }\n        //   if (pin?.longitude && pin?.latitude)\n        //     acc.push([pin.longitude, pin.latitude]);\n        //   return acc;\n        // }, {});\n        Object.values(this.lines).map(({ color, coordinates }) => {\n          const feature_cont = {\n            geometry: new olLineString(coordinates),\n            name: \"Path\",\n          };\n          feature_cont.stroke_color = color;\n          features.push(new olFeature(feature_cont));\n        });\n      }\n      return features;\n    },\n    makePointStyle({\n      feature,\n      resolution,\n      fill_color = \"hsla(36, 96%, 50%, .7)\",\n    }) {\n      // see https://openlayers.org/en/latest/examples/vector-labels.html\n      resolution;\n      let style = {};\n      if (feature?.get(\"label\")) {\n        const _fs = {\n          italic: \"normal\",\n          weight: \"600\",\n          size: \"14px\",\n          height: 1.2,\n          family: \"IBM Plex Mono\",\n        };\n\n        style.text = new olText({\n          fill: new olFill({ color: \"#000\" }),\n          stroke: new olStroke({ color: \"#fff\" }),\n          // font: \"bold 48px serif\",\n          font:\n            _fs.italic +\n            \" \" +\n            _fs.weight +\n            \" \" +\n            _fs.size +\n            \"/\" +\n            _fs.height +\n            \" \" +\n            _fs.family,\n          text: \"\" + feature.get(\"label\"),\n          textAlign: \"start\",\n          offsetX: 15,\n        });\n      }\n      if (feature?.get(\"fill_color\")) {\n        fill_color = feature.get(\"fill_color\");\n      }\n\n      style.image = new olCircleStyle({\n        radius: 8,\n        fill: new olFill({ color: fill_color }),\n        stroke: new olStroke({ color: \"#232e4a\", width: 2 }),\n      });\n\n      return new olStyle(style);\n    },\n    makeLineStyle(feature) {\n      const style = {\n        stroke: new olStroke({\n          color: feature.get(\"stroke_color\"),\n          width: 3,\n        }),\n      };\n      return new olStyle(style);\n    },\n    navigateTo({ center, zoom = this.current_zoom }) {\n      this.view.animate({\n        center,\n        zoom,\n        // duration: 2000,\n      });\n    },\n    openPin(path) {\n      const _pin_index = this.pins.findIndex((p) => p.path === path);\n      if (_pin_index === -1) return;\n      this.openFeature(_pin_index);\n    },\n    openFeature(index) {\n      const feature = this.pin_features[index];\n      const coordinates = feature.getGeometry().getCoordinates();\n      const f = feature.get(\"file\");\n      this.clicked_location.file = f || undefined;\n\n      this.overlay.setPosition(coordinates);\n      this.clicked_location.longitude = coordinates[0];\n      this.clicked_location.latitude = coordinates[1];\n      this.navigateTo({\n        center: [\n          this.clicked_location.longitude,\n          this.clicked_location.latitude,\n        ],\n      });\n    },\n    closePopup() {\n      this.mouse_feature.getGeometry().setCoordinates([undefined, undefined]);\n\n      this.overlay.setPosition(undefined);\n      if (this.$refs.closePopup) this.$refs.closePopup.blur();\n      this.clicked_location.longitude = undefined;\n      this.clicked_location.latitude = undefined;\n      this.clicked_location.file = undefined;\n      this.popup_message = undefined;\n      return false;\n    },\n  },\n};\n</script>\n<style src=\"../../../node_modules/ol/ol.css\"></style>\n<style lang=\"scss\" scoped>\n.m_displayOnMap {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: var(--c-gris);\n\n  flex: 1 1 320px;\n\n  &.is--small {\n    width: 600px;\n    max-width: 100%;\n    aspect-ratio: 1;\n    border-radius: 4px;\n    overflow: hidden;\n    .map {\n    }\n  }\n}\n.map {\n  width: 100%;\n  height: 100%;\n}\n._popup {\n  position: absolute;\n  bottom: 12px;\n  left: -50px;\n  min-width: 280px;\n\n  background: white;\n\n  border: none;\n  border-radius: var(--panel-radius);\n\n  box-shadow: var(--panel-shadows);\n\n  &:after,\n  &:before {\n    top: 100%;\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  &:after {\n    border-top-color: white;\n    border-width: 10px;\n    left: 48px;\n    margin-left: -10px;\n  }\n  // &:before {\n  //   border-top-color: #cccccc;\n  //   border-width: 11px;\n  //   left: 48px;\n  //   margin-left: -11px;\n  // }\n}\n._popupClose {\n  position: absolute;\n  z-index: 1000;\n  top: 0;\n  right: 0;\n  padding: calc(var(--spacing) / 1);\n}\n\n._pinContent {\n  position: relative;\n  border-radius: var(--panel-radius);\n  overflow: hidden;\n}\n\n._popupMessage {\n  padding: calc(var(--spacing) / 4) calc(var(--spacing) / 2);\n}\n</style>\n<style lang=\"scss\">\n.ol-geocoder .gcd-gl-btn {\n  height: 1.375em;\n  width: 1.375em;\n}\n.ol-geocoder .gcd-gl-input {\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DisplayOnMap.vue?vue&type=template&id=dc80dff0&scoped=true&\"\nimport script from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"../../../node_modules/ol/ol.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./DisplayOnMap.vue?vue&type=style&index=1&id=dc80dff0&lang=scss&scoped=true&\"\nimport style2 from \"./DisplayOnMap.vue?vue&type=style&index=2&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"dc80dff0\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * ol-geocoder - v4.3.1\\n * A geocoder extension compatible with OpenLayers v6.x, v7.x & v8.x\\n * https://github.com/Dominique92/ol-geocoder\\n * Built: 15/09/2023 16:57:43\\n */.ol-touch .ol-control.gcd-gl-control button{font-size:1.14em}.ol-touch .ol-geocoder.gcd-gl-container{font-size:1.1em}.ol-geocoder.gcd-gl-container{box-sizing:border-box;font-size:.9em;left:.5em;position:absolute;top:4.875em}.ol-geocoder.gcd-gl-container *,.ol-geocoder.gcd-gl-container :after,.ol-geocoder.gcd-gl-container :before{box-sizing:inherit}.ol-geocoder .gcd-gl-control{height:2.1875em;overflow:hidden;transition:width .2s,height .2s;width:2.1875em}.ol-geocoder .gcd-gl-expanded{height:2.1875em;width:15.625em}.ol-geocoder .gcd-gl-input{background-color:#fff;border:1px solid #ccc;color:#222;font-family:inherit;font-size:.875em;left:2.5em;padding:5px;position:absolute;top:.25em;width:14.84375em;z-index:99}.ol-geocoder .gcd-gl-input:focus{border:none;box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 5px #4d90fe;outline:none}.ol-geocoder .gcd-gl-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:1.4;outline:0;position:absolute;right:0;top:0;width:1.5625em;z-index:100}.ol-geocoder .gcd-gl-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:1.5em}.ol-geocoder .gcd-gl-btn{cursor:pointer;height:1.5625em;left:.125em;position:absolute;top:.125em;width:1.5625em}.ol-geocoder .gcd-gl-btn:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-gl-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:2em;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:2.1875em;transition:max-height .3s ease-in;white-space:normal;width:16.25em}.ol-geocoder ul.gcd-gl-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-gl-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-gl-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-gl-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-gl-result:empty{display:none}.ol-geocoder.gcd-txt-container{box-sizing:border-box;height:4.375em;left:calc(50% - 12.5em);position:absolute;top:.5em;width:25em}.ol-geocoder.gcd-txt-container *,.ol-geocoder.gcd-txt-container :after,.ol-geocoder.gcd-txt-container :before{box-sizing:inherit}.ol-geocoder .gcd-txt-control{background-color:#fff;border:1px solid #ccc;height:4.375em;overflow:hidden;position:relative;width:100%}.ol-geocoder .gcd-txt-label{display:inline-block;text-align:center;width:100%}.ol-geocoder .gcd-txt-input{background-color:transparent;border:none;font-family:inherit;font-size:.875em;height:100%;left:0;padding:5px 30px 5px 40px;position:absolute;text-indent:6px;top:0;width:100%;z-index:99}.ol-geocoder .gcd-txt-input:focus{box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 6px #4d90fe;outline:none}.ol-geocoder .gcd-txt-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:100%;outline:0;position:absolute;right:0;top:0;vertical-align:middle;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:2em}.ol-geocoder .gcd-txt-glass{display:inline-block;height:100%;left:9px;position:absolute;top:26px;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-glass:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-txt-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:0;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:4.575em;transition:max-height .3s ease-in;white-space:normal;width:25em}.ol-geocoder ul.gcd-txt-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-txt-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-txt-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-txt-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-txt-result:empty{display:none}.ol-geocoder .gcd-hidden{opacity:0;visibility:hidden}.ol-geocoder .gcd-pseudo-rotate:after{animation:spin .7s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.gcd-address,.gcd-road{color:#333;font-size:.875em;font-weight:500}.gcd-city{font-weight:400}.gcd-city,.gcd-country{color:#333;font-size:.75em}.gcd-country{font-weight:lighter}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m_displayOnMap[data-v-dc80dff0]{position:relative;width:100%;height:100%;background-color:var(--c-gris);flex:1 1 320px}.m_displayOnMap.is--small[data-v-dc80dff0]{width:600px;max-width:100%;aspect-ratio:1;border-radius:4px;overflow:hidden}.map[data-v-dc80dff0]{width:100%;height:100%}._popup[data-v-dc80dff0]{position:absolute;bottom:12px;left:-50px;min-width:280px;background:#fff;border:none;border-radius:var(--panel-radius);box-shadow:var(--panel-shadows)}._popup[data-v-dc80dff0]:after,._popup[data-v-dc80dff0]:before{top:100%;border:solid transparent;content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none}._popup[data-v-dc80dff0]:after{border-top-color:#fff;border-width:10px;left:48px;margin-left:-10px}._popupClose[data-v-dc80dff0]{position:absolute;z-index:1000;top:0;right:0;padding:calc(var(--spacing)/1)}._pinContent[data-v-dc80dff0]{position:relative;border-radius:var(--panel-radius);overflow:hidden}._popupMessage[data-v-dc80dff0]{padding:calc(var(--spacing)/4) calc(var(--spacing)/2)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".ol-geocoder .gcd-gl-btn{height:1.375em;width:1.375em}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":host,:root{--ol-background-color:#fff;--ol-accent-background-color:#f5f5f5;--ol-subtle-background-color:hsla(0,0%,50%,.25);--ol-partial-background-color:hsla(0,0%,100%,.75);--ol-foreground-color:#333;--ol-subtle-foreground-color:#666;--ol-brand-color:#0af}.ol-box{box-sizing:border-box;border-radius:2px;border:1.5px solid var(--ol-background-color);background-color:var(--ol-partial-background-color)}.ol-mouse-position{top:8px;right:8px;position:absolute}.ol-scale-line{background:var(--ol-partial-background-color);border-radius:4px;bottom:8px;left:8px;padding:2px;position:absolute}.ol-scale-line-inner{border:1px solid var(--ol-subtle-foreground-color);border-top:none;color:var(--ol-foreground-color);font-size:10px;text-align:center;margin:1px;will-change:contents,width;transition:all .25s}.ol-scale-bar{position:absolute;bottom:8px;left:8px}.ol-scale-bar-inner{display:flex}.ol-scale-step-marker{width:1px;height:15px;background-color:var(--ol-foreground-color);float:right;z-index:10}.ol-scale-step-text{bottom:-5px;font-size:10px;z-index:11}.ol-scale-step-text,.ol-scale-text{position:absolute;color:var(--ol-foreground-color);text-shadow:-1.5px 0 var(--ol-partial-background-color),0 1.5px var(--ol-partial-background-color),1.5px 0 var(--ol-partial-background-color),0 -1.5px var(--ol-partial-background-color)}.ol-scale-text{font-size:12px;text-align:center;bottom:25px}.ol-scale-singlebar{position:relative;height:10px;z-index:9;box-sizing:border-box;border:1px solid var(--ol-foreground-color)}.ol-scale-singlebar-even{background-color:var(--ol-subtle-foreground-color)}.ol-scale-singlebar-odd{background-color:var(--ol-background-color)}.ol-unsupported{display:none}.ol-unselectable,.ol-viewport{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ol-viewport canvas{all:unset;overflow:hidden}.ol-viewport{touch-action:none}.ol-selectable{-webkit-touch-callout:default;-webkit-user-select:text;-moz-user-select:text;user-select:text}.ol-grabbing{cursor:grabbing}.ol-grab{cursor:move;cursor:grab}.ol-control{position:absolute;background-color:var(--ol-subtle-background-color);border-radius:4px}.ol-zoom{top:.5em;left:.5em}.ol-rotate{top:.5em;right:.5em;transition:opacity .25s linear,visibility 0s linear}.ol-rotate.ol-hidden{opacity:0;visibility:hidden;transition:opacity .25s linear,visibility 0s linear .25s}.ol-zoom-extent{top:4.643em;left:.5em}.ol-full-screen{right:.5em;top:.5em}.ol-control button{display:block;margin:1px;padding:0;color:var(--ol-subtle-foreground-color);font-weight:700;text-decoration:none;font-size:inherit;text-align:center;height:1.375em;width:1.375em;line-height:.4em;background-color:var(--ol-background-color);border:none;border-radius:2px}.ol-control button::-moz-focus-inner{border:none;padding:0}.ol-zoom-extent button{line-height:1.4em}.ol-compass{display:block;font-weight:400;will-change:transform}.ol-touch .ol-control button{font-size:1.5em}.ol-touch .ol-zoom-extent{top:5.5em}.ol-control button:focus,.ol-control button:hover{text-decoration:none;outline:1px solid var(--ol-subtle-foreground-color);color:var(--ol-foreground-color)}.ol-zoom .ol-zoom-in{border-radius:2px 2px 0 0}.ol-zoom .ol-zoom-out{border-radius:0 0 2px 2px}.ol-attribution{text-align:right;bottom:.5em;right:.5em;max-width:calc(100% - 1.3em);display:flex;flex-flow:row-reverse;align-items:center}.ol-attribution a{color:var(--ol-subtle-foreground-color);text-decoration:none}.ol-attribution ul{margin:0;padding:1px .5em;color:var(--ol-foreground-color);text-shadow:0 0 2px var(--ol-background-color);font-size:12px}.ol-attribution li{display:inline;list-style:none}.ol-attribution li:not(:last-child):after{content:\\\" \\\"}.ol-attribution img{max-height:2em;max-width:inherit;vertical-align:middle}.ol-attribution button{flex-shrink:0}.ol-attribution.ol-collapsed ul{display:none}.ol-attribution:not(.ol-collapsed){background:var(--ol-partial-background-color)}.ol-attribution.ol-uncollapsible{bottom:0;right:0;border-radius:4px 0 0}.ol-attribution.ol-uncollapsible img{margin-top:-.2em;max-height:1.6em}.ol-attribution.ol-uncollapsible button{display:none}.ol-zoomslider{top:4.5em;left:.5em;height:200px}.ol-zoomslider button{position:relative;height:10px}.ol-touch .ol-zoomslider{top:5.5em}.ol-overviewmap{left:.5em;bottom:.5em}.ol-overviewmap.ol-uncollapsible{bottom:0;left:0;border-radius:0 4px 0 0}.ol-overviewmap .ol-overviewmap-map,.ol-overviewmap button{display:block}.ol-overviewmap .ol-overviewmap-map{border:1px solid var(--ol-subtle-foreground-color);height:150px;width:150px}.ol-overviewmap:not(.ol-collapsed) button{bottom:0;left:0;position:absolute}.ol-overviewmap.ol-collapsed .ol-overviewmap-map,.ol-overviewmap.ol-uncollapsible button{display:none}.ol-overviewmap:not(.ol-collapsed){background:var(--ol-subtle-background-color)}.ol-overviewmap-box{border:1.5px dotted var(--ol-subtle-foreground-color)}.ol-overviewmap .ol-overviewmap-box:hover{cursor:move}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as _VARS_ from './vars.json';\n\nexport const VARS = _VARS_;\n\nexport const EVENT_TYPE = {\n  ADDRESSCHOSEN: 'addresschosen',\n};\n\nexport const CONTROL_TYPE = {\n  NOMINATIM: 'nominatim',\n  REVERSE: 'reverse',\n};\n\nexport const TARGET_TYPE = {\n  GLASS: 'glass-button',\n  INPUT: 'text-input',\n};\n\nexport const FEATURE_SRC = '//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png';\n\nexport const PROVIDERS = {\n  OSM: 'osm',\n  MAPQUEST: 'mapquest',\n  PHOTON: 'photon',\n  BING: 'bing',\n  OPENCAGE: 'opencage',\n};\n\nexport const DEFAULT_OPTIONS = {\n  provider: PROVIDERS.OSM,\n  label: '',\n  placeholder: 'Search for an address',\n  featureStyle: null,\n  targetType: TARGET_TYPE.GLASS,\n  lang: 'en-US',\n  limit: 5,\n  keepOpen: false,\n  preventDefault: false,\n  preventPanning: false,\n  preventMarker: false,\n  defaultFlyResolution: 10, // Meters per pixel\n  debug: false,\n};","export function assert(condition, message = 'Assertion failed') {\n  if (!condition) {\n    if (typeof Error !== 'undefined') throw new Error(message);\n\n    throw message; // Fallback\n  }\n}\n\nexport function now() {\n  // Polyfill for window.performance.now()\n  // @license http://opensource.org/licenses/MIT\n  // copyright Paul Irish 2015\n  // https://gist.github.com/paulirish/5438650\n  if ('performance' in window === false) {\n    window.performance = {};\n  }\n\n  if ('now' in window.performance === false) {\n    let nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    window.performance.now = () => Date.now() - nowOffset;\n  }\n\n  return window.performance.now();\n}\n\nexport function randomId(prefix) {\n  const id = now().toString(36);\n\n  return prefix ? prefix + id : id;\n}\n\nexport function isNumeric(str) {\n  return /^\\d+$/u.test(str);\n}\n\nexport function isEmpty(str) {\n  return !str || str.length === 0;\n}\n\nexport function emptyArray(array) {\n  while (array.length) array.pop();\n}\n\nexport function anyMatchInArray(source, target) {\n  return source.some((each) => target.includes(each));\n}\n\nexport function everyMatchInArray(arr1, arr2) {\n  return arr2.every((each) => arr1.includes(each));\n}\n\nexport function anyItemHasValue(obj, has = false) {\n  const keys = Object.keys(obj);\n\n  keys.forEach((key) => {\n    if (!isEmpty(obj[key])) has = true;\n  });\n\n  return has;\n}","/* eslint-disable prefer-named-capture-group */\nimport {\n  isNumeric\n} from './mix';\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to remove a class.\n */\nexport function addClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => addClass(each, classname));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (!hasClass(element, array[i])) {\n      _addClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to add a class.\n */\nexport function removeClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => removeClass(each, classname, timeout));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (hasClass(element, array[i])) {\n      _removeClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element} element DOM node.\n * @param {String} classname Classname.\n * @return {Boolean}\n */\nexport function hasClass(element, c) {\n  // use native if available\n  return element.classList ? element.classList.contains(c) : classRegex(c).test(element.className);\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String} classname Classe.\n */\nexport function toggleClass(element, classname) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => toggleClass(each, classname));\n\n    return;\n  }\n\n  // use native if available\n  if (element.classList) {\n    element.classList.toggle(classname);\n  } else {\n    hasClass(element, classname) ? _removeClass(element, classname) : _addClass(element, classname);\n  }\n}\n\n/**\n * Abstraction to querySelectorAll for increased\n * performance and greater usability\n * @param {String} selector\n * @param {Element} context (optional)\n * @param {Boolean} findAll (optional)\n * @return (findAll) {Element} : {Array}\n */\nexport function $(id) {\n  id = id[0] === '#' ? id.slice(1, 1 + id.length) : id;\n\n  return document.getElementById(id);\n}\n\nexport function isElement(obj) {\n  // DOM, Level2\n  if ('HTMLElement' in window) {\n    return !!obj && obj instanceof HTMLElement;\n  }\n\n  // Older browsers\n  return !!obj && typeof obj === 'object' && obj.nodeType === 1 && !!obj.nodeName;\n}\n\nexport function getAllChildren(node, tag) {\n  return [].slice.call(node.getElementsByTagName(tag));\n}\n\nexport function removeAllChildren(node) {\n  while (node.firstChild) node.firstChild.remove();\n}\n\nexport function removeAll(collection) {\n  let node;\n\n  while ((node = collection[0])) node.remove();\n}\n\nexport function getChildren(node, tag) {\n  return [].filter.call(node.childNodes, (el) =>\n    tag ? el.nodeType === 1 && el.tagName.toLowerCase() === tag : el.nodeType === 1\n  );\n}\n\nexport function template(html, row) {\n  return html.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu, (htm, key) => {\n    const value = row[key] === undefined ? '' : row[key];\n\n    return htmlEscape(value);\n  });\n}\n\nexport function htmlEscape(str) {\n  return String(str)\n    .replaceAll('&', '&amp;')\n    .replaceAll('<', '&lt;')\n    .replaceAll('>', '&gt;')\n    .replaceAll('\"', '&quot;')\n    .replaceAll(\"'\", '&#039;');\n}\n\nexport function createElement(node, html) {\n  let elem;\n\n  if (Array.isArray(node)) {\n    elem = document.createElement(node[0]);\n\n    if (node[1].id) elem.id = node[1].id;\n\n    if (node[1].classname) elem.className = node[1].classname;\n\n    if (node[1].attr) {\n      const {\n        attr\n      } = node[1];\n\n      if (Array.isArray(attr)) {\n        let i = -1;\n\n        while (++i < attr.length) {\n          elem.setAttribute(attr[i].name, attr[i].value);\n        }\n      } else {\n        elem.setAttribute(attr.name, attr.value);\n      }\n    }\n  } else {\n    elem = document.createElement(node);\n  }\n\n  elem.innerHTML = html;\n\n  const frag = document.createDocumentFragment();\n\n  while (elem.childNodes[0]) frag.append(elem.childNodes[0]);\n\n  elem.append(frag);\n\n  return elem;\n}\n\nfunction classRegex(classname) {\n  return new RegExp(`(^|\\\\s+) ${classname} (\\\\s+|$)`, 'u');\n}\n\nfunction _addClass(el, klass, timeout) {\n  // use native if available\n  if (el.classList) {\n    el.classList.add(klass);\n  } else {\n    el.className = `${el.className} ${klass}`.trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _removeClass(el, klass), timeout);\n  }\n}\n\nfunction _removeClass(el, klass, timeout) {\n  if (el.classList) {\n    el.classList.remove(klass);\n  } else {\n    el.className = el.className.replace(classRegex(klass), ' ').trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _addClass(el, klass), timeout);\n  }\n}","import {\n  VARS,\n  TARGET_TYPE\n} from '../konstants';\n\nimport {\n  createElement\n} from './helpers/dom';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Html\n */\nexport default class Html {\n  /**\n   * @constructor\n   * @param {object} options Options.\n   */\n  constructor(options) {\n    this.options = options;\n    this.els = this.createControl();\n  }\n\n  createControl() {\n    let container;\n    let containerClass;\n    let elements;\n\n    if (this.options.targetType === TARGET_TYPE.INPUT) {\n      containerClass = `${klasses.namespace} ${klasses.inputText.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.input\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.inputText.control}`),\n        label: container.querySelector(`.${klasses.inputText.label}`),\n        input: container.querySelector(`.${klasses.inputText.input}`),\n        search: container.querySelector(`.${klasses.inputText.search}`),\n        result: container.querySelector(`.${klasses.inputText.result}`),\n      };\n      elements.label.innerHTML = this.options.label;\n    } else {\n      containerClass = `${klasses.namespace} ${klasses.glass.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.glass\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.glass.control}`),\n        button: container.querySelector(`.${klasses.glass.button}`),\n        input: container.querySelector(`.${klasses.glass.input}`),\n        search: container.querySelector(`.${klasses.glass.search}`),\n        result: container.querySelector(`.${klasses.glass.result}`),\n      };\n    }\n\n    // set placeholder from options\n    elements.input.placeholder = this.options.placeholder;\n\n    return elements;\n  }\n}\n\nHtml.glass = `\n  <div class=\"${klasses.glass.control} ${klasses.olControl}\">\n    <button type=\"button\" id=\"${VARS.buttonControlId}\" class=\"${klasses.glass.button}\"></button>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <a id=\"${VARS.inputSearchId}\" class=\"${klasses.glass.search} ${klasses.hidden}\"></a>\n  </div>\n  <ul class=\"${klasses.glass.result}\"></ul>\n`;\n\nHtml.input = `\n  <div class=\"${klasses.inputText.control}\">\n    <label type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.label}\"></label>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <span class=\"${klasses.inputText.icon}\"></span>\n    <button type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.search} ${klasses.hidden}\"></button>\n  </div>\n  <ul class=\"${klasses.inputText.result}\"></ul>\n`;","export function json(obj) {\n  return new Promise((resolve, reject) => {\n    const url = encodeUrlXhr(obj.url, obj.data);\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'same-origin',\n    };\n\n    if (obj.jsonp) {\n      jsonp(url, obj.callbackName, resolve);\n    } else {\n      fetch(url, config)\n        .then((r) => r.json())\n        .then(resolve)\n        .catch(reject);\n    }\n  });\n}\n\nfunction toQueryString(obj) {\n  return Object.keys(obj)\n    .reduce((acc, k) => {\n      acc.push(\n        typeof obj[k] === 'object' ?\n        toQueryString(obj[k]) :\n        `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n      );\n\n      return acc;\n    }, [])\n    .join('&');\n}\n\nfunction encodeUrlXhr(url, data) {\n  if (data && typeof data === 'object') {\n    url += (/\\?/u.test(url) ? '&' : '?') + toQueryString(data);\n  }\n\n  return url;\n}\n\nfunction jsonp(url, key, callback) {\n  // https://github.com/Fresheyeball/micro-jsonp/blob/master/src/jsonp.js\n  const {\n    head\n  } = document;\n  const script = document.createElement('script');\n  // generate minimally unique name for callback function\n  const callbackName = `f${Math.round(Math.random() * Date.now())}`;\n\n  // set request url\n  script.setAttribute(\n    'src',\n    // add callback parameter to the url\n    //    where key is the parameter key supplied\n    //    and callbackName is the parameter value\n    `${url + (url.indexOf('?') > 0 ? '&' : '?') + key}=${callbackName}`\n  );\n\n  // place jsonp callback on window,\n  //  the script sent by the server should call this\n  //  function as it was passed as a url parameter\n  window[callbackName] = (data) => {\n    window[callbackName] = undefined;\n\n    // clean up script tag created for request\n    setTimeout(() => head.removeChild(script), 0);\n\n    // hand data back to the user\n    callback(data);\n  };\n\n  // actually make the request\n  head.append(script);\n}","/**\n * @class Photon\n */\nexport default class Photon {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://photon.komoot.io/api/',\n\n      params: {\n        q: '',\n        limit: 10,\n        lang: 'en',\n      },\n\n      langs: ['de', 'it', 'fr', 'en'],\n    };\n  }\n\n  getParameters(options) {\n    options.lang = options.lang.toLowerCase();\n\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        limit: options.limit || this.settings.params.limit,\n\n        lang: this.settings.langs.includes(options.lang) ? options.lang : this.settings.params.lang,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.features.length === 0) return [];\n\n    return results.features.map((result) => ({\n      lon: result.geometry.coordinates[0],\n      lat: result.geometry.coordinates[1],\n\n      address: {\n        name: result.properties.name,\n        postcode: result.properties.postcode,\n        city: result.properties.city,\n        state: result.properties.state,\n        country: result.properties.country,\n      },\n\n      original: {\n        formatted: result.properties.name,\n        details: result.properties,\n      },\n    }));\n  }\n}","/**\n * @class OpenStreet\n */\nexport default class OpenStreet {\n  /**\n   * @constructor\n   */\n  constructor(options) {\n    this.settings = {\n      url: 'https://nominatim.openstreetmap.org/search',\n      ...options, // Allow custom URL for osm provider https://github.com/Dominique92/ol-geocoder/issues/266\n\n      params: {\n        q: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        viewbox: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(opt) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: opt.query,\n        format: this.settings.params.format,\n        addressdetails: this.settings.params.addressdetails,\n        limit: opt.limit || this.settings.params.limit,\n        countrycodes: opt.countrycodes || this.settings.params.countrycodes,\n        viewbox: opt.viewbox || this.settings.params.viewbox,\n        'accept-language': opt.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n      bbox: result.boundingbox,\n\n      address: {\n        name: result.display_name,\n        road: result.address.road || '',\n        houseNumber: result.address.house_number || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class MapQuest\n */\nexport default class MapQuest {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://open.mapquestapi.com/nominatim/v1/search.php',\n\n      params: {\n        q: '',\n        key: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        format: 'json',\n        addressdetails: 1,\n        limit: options.limit || this.settings.params.limit,\n        countrycodes: options.countrycodes || this.settings.params.countrycodes,\n\n        'accept-language': options.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n\n      address: {\n        name: result.address.neighbourhood || '',\n        road: result.address.road || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class Bing\n */\nexport default class Bing {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://dev.virtualearth.net/REST/v1/Locations',\n      callbackName: 'jsonp',\n\n      params: {\n        query: '',\n        key: '',\n        includeNeighborhood: 0,\n        maxResults: 10,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n      callbackName: this.settings.callbackName,\n\n      params: {\n        query: options.query,\n        key: options.key,\n\n        includeNeighborhood: options.includeNeighborhood || this.settings.params.includeNeighborhood,\n\n        maxResults: options.maxResults || this.settings.params.maxResults,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    const {\n      resources\n    } = results.resourceSets[0];\n\n    if (resources.length === 0) return [];\n\n    return resources.map((result) => ({\n      lon: result.point.coordinates[1],\n      lat: result.point.coordinates[0],\n\n      address: {\n        name: result.name,\n      },\n\n      original: {\n        formatted: result.address.formattedAddress,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class OpenCage\n */\nexport default class OpenCage {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://api.opencagedata.com/geocode/v1/json?',\n\n      params: {\n        q: '',\n        key: '',\n        limit: 10,\n        countrycode: '',\n        pretty: 1,\n        no_annotations: 1,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        limit: options.limit || this.settings.params.limit,\n        countrycode: options.countrycodes || this.settings.params.countrycodes,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.results.length === 0) return [];\n\n    return results.results.map((result) => ({\n      lon: result.geometry.lng,\n      lat: result.geometry.lat,\n\n      address: {\n        name: result.components.house_number || '',\n        road: result.components.road || '',\n        postcode: result.components.postcode,\n        city: result.components.city || result.components.town,\n        state: result.components.state,\n        country: result.components.country,\n      },\n\n      original: {\n        formatted: result.formatted,\n        details: result.components,\n      },\n    }));\n  }\n}","import LayerVector from 'ol/layer/Vector';\nimport SourceVector from 'ol/source/Vector';\nimport Point from 'ol/geom/Point';\nimport Feature from 'ol/Feature';\nimport * as proj from 'ol/proj';\n\nimport {\n  VARS,\n  TARGET_TYPE,\n  PROVIDERS,\n  EVENT_TYPE\n} from '../konstants';\nimport {\n  hasClass,\n  addClass,\n  removeClass,\n  createElement,\n  template,\n  removeAllChildren,\n} from './helpers/dom';\nimport {\n  randomId\n} from './helpers/mix';\nimport {\n  json\n} from './helpers/ajax';\n\nimport Photon from './providers/photon';\nimport OpenStreet from './providers/osm';\nimport MapQuest from './providers/mapquest';\nimport Bing from './providers/bing';\nimport OpenCage from './providers/opencage';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Nominatim\n */\nexport default class Nominatim {\n  /**\n   * @constructor\n   * @param {Function} base Base class.\n   */\n  constructor(base, els) {\n    this.Base = base;\n\n    this.layerName = randomId('geocoder-layer-');\n    this.layer = new LayerVector({\n      name: this.layerName,\n      source: new SourceVector(),\n      displayInLayerSwitcher: false, // Remove search layer from legend https://github.com/Dominique92/ol-geocoder/issues/256\n    });\n\n    this.options = base.options;\n    // provider is either the name of a built-in provider as a string or an\n    // object that implements the provider API\n    this.options.provider =\n      typeof this.options.provider === 'string' ?\n      this.options.provider.toLowerCase() :\n      this.options.provider;\n    this.provider = this.newProvider();\n\n    this.els = els;\n    this.lastQuery = '';\n    this.container = this.els.container;\n    this.registeredListeners = {\n      mapClick: false,\n    };\n    this.setListeners();\n  }\n\n  setListeners() {\n    const openSearch = (evt) => {\n      evt.stopPropagation();\n      hasClass(this.els.control, klasses.glass.expanded) ? this.collapse() : this.expand();\n    };\n    const query = (evt) => {\n      const value = evt.target.value.trim();\n      const hit = evt.key ?\n        evt.key === 'Enter' :\n        evt.which ?\n        evt.which === 13 :\n        evt.keyCode ?\n        evt.keyCode === 13 :\n        false;\n\n      if (hit) {\n        evt.preventDefault();\n        this.query(value);\n      }\n    };\n    const stopBubbling = (evt) => evt.stopPropagation();\n    const search = () => {\n      this.els.input.focus();\n      this.query(this.els.input.value);\n    };\n    const handleValue = (evt) => {\n      const value = evt.target.value.trim();\n\n      value.length !== 0 ?\n        removeClass(this.els.search, klasses.hidden) :\n        addClass(this.els.search, klasses.hidden);\n    };\n\n    this.els.input.addEventListener('keypress', query, false);\n    this.els.input.addEventListener('click', stopBubbling, false);\n    this.els.input.addEventListener('input', handleValue, false);\n    this.els.search.addEventListener('click', search, false);\n\n    if (this.options.targetType === TARGET_TYPE.GLASS) {\n      this.els.button.addEventListener('click', openSearch, false);\n    }\n  }\n\n  query(q) {\n    // lazy provider\n    if (!this.provider) {\n      this.provider = this.newProvider();\n    }\n\n    const parameters = this.provider.getParameters({\n      query: q,\n      key: this.options.key,\n      lang: this.options.lang,\n      countrycodes: this.options.countrycodes,\n      viewbox: this.options.viewbox,\n      limit: this.options.limit,\n    });\n\n    if (this.lastQuery === q && this.els.result.firstChild) return;\n\n    this.lastQuery = q;\n    this.clearResults();\n    addClass(this.els.search, klasses.spin);\n\n    const ajax = {\n      url: parameters.url,\n      data: parameters.params,\n    };\n\n    if (parameters.callbackName) {\n      ajax.jsonp = true;\n      ajax.callbackName = parameters.callbackName;\n    }\n\n    json(ajax)\n      .then((res) => {\n        // eslint-disable-next-line no-console\n        this.options.debug && console.info(res);\n\n        removeClass(this.els.search, klasses.spin);\n\n        // will be fullfiled according to provider\n        const res_ = this.provider.handleResponse(res);\n\n        if (res_) {\n          this.createList(res_);\n          this.listenMapClick();\n        }\n      })\n      .catch(() => {\n        removeClass(this.els.search, klasses.spin);\n\n        const li = createElement('li', '<h5>Error! No internet connection?</h5>');\n\n        this.els.result.append(li);\n      });\n  }\n\n  createList(response) {\n    const ul = this.els.result;\n\n    response.forEach((row) => {\n      let addressHtml;\n\n      switch (this.options.provider) {\n        case PROVIDERS.OSM:\n          addressHtml = `<span class=\"${klasses.road}\">${row.address.name}</span>`;\n          break;\n\n        default:\n          addressHtml = this.addressTemplate(row.address);\n      }\n\n      if (response.length == 1) {\n        this.chosen(row, addressHtml, row.address, row.original);\n      } else {\n        const li = createElement('li', `<a href=\"#\">${addressHtml}</a>`);\n\n        li.addEventListener(\n          'click',\n          (evt) => {\n            evt.preventDefault();\n            this.chosen(row, addressHtml, row.address, row.original);\n          },\n          false\n        );\n\n        ul.append(li);\n      }\n    });\n  }\n\n  chosen(place, addressHtml, addressObj, addressOriginal) {\n    const map = this.Base.getMap();\n    const coord_ = [Number.parseFloat(place.lon), Number.parseFloat(place.lat)];\n    const projection = map.getView().getProjection();\n    const coord = proj.transform(coord_, 'EPSG:4326', projection);\n\n    let {\n      bbox\n    } = place;\n\n    if (bbox) {\n      bbox = proj.transformExtent(\n        // https://nominatim.org/release-docs/latest/api/Output/#boundingbox\n        // Requires parseFloat on negative bbox entries\n        [parseFloat(bbox[2]), parseFloat(bbox[0]), parseFloat(bbox[3]), parseFloat(bbox[1])], // SNWE -> WSEN\n        'EPSG:4326',\n        projection\n      );\n    }\n\n    const address = {\n      formatted: addressHtml,\n      details: addressObj,\n      original: addressOriginal,\n    };\n\n    this.options.keepOpen === false && this.clearResults(true);\n\n    if (this.options.preventDefault === true || this.options.preventMarker === true) {\n      // No display change\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    } else {\n      // Display a marker\n      const feature = this.createFeature(coord, address);\n\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        feature,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    }\n\n    if (this.options.preventDefault !== true && this.options.preventPanning !== true) {\n      // Move & zoom to the position\n      if (bbox) {\n        map.getView().fit(bbox, {\n          duration: 500,\n        });\n      } else {\n        map.getView().animate({\n          center: coord,\n          // ol-geocoder results are too much zoomed -in Dominique92/ol-geocoder#235\n          resolution: this.options.defaultFlyResolution,\n          duration: 500,\n        });\n      }\n    }\n  }\n\n  createFeature(coord) {\n    const feature = new Feature(new Point(coord));\n\n    this.addLayer();\n    feature.setStyle(this.options.featureStyle);\n    feature.setId(randomId('geocoder-ft-'));\n    this.getSource().addFeature(feature);\n\n    return feature;\n  }\n\n  addressTemplate(address) {\n    const html = [];\n\n    if (address.name) {\n      html.push(['<span class=\"', klasses.road, '\">{name}</span>'].join(''));\n    }\n\n    if (address.road || address.building || address.house_number) {\n      html.push(\n        ['<span class=\"', klasses.road, '\">{building} {road} {house_number}</span>'].join('')\n      );\n    }\n\n    if (address.city || address.town || address.village) {\n      html.push(\n        ['<span class=\"', klasses.city, '\">{postcode} {city} {town} {village}</span>'].join('')\n      );\n    }\n\n    if (address.state || address.country) {\n      html.push(['<span class=\"', klasses.country, '\">{state} {country}</span>'].join(''));\n    }\n\n    return template(html.join('<br>'), address);\n  }\n\n  newProvider() {\n    switch (this.options.provider) {\n      case PROVIDERS.OSM:\n        return new OpenStreet(this.options);\n      case PROVIDERS.MAPQUEST:\n        return new MapQuest();\n      case PROVIDERS.PHOTON:\n        return new Photon();\n      case PROVIDERS.BING:\n        return new Bing();\n      case PROVIDERS.OPENCAGE:\n        return new OpenCage();\n\n      default:\n        return this.options.provider;\n    }\n  }\n\n  expand() {\n    removeClass(this.els.input, klasses.spin);\n    addClass(this.els.control, klasses.glass.expanded);\n    window.setTimeout(() => this.els.input.focus(), 100);\n    this.listenMapClick();\n  }\n\n  collapse() {\n    this.els.input.value = '';\n    this.els.input.blur();\n    addClass(this.els.search, klasses.hidden);\n    removeClass(this.els.control, klasses.glass.expanded);\n    this.clearResults();\n  }\n\n  listenMapClick() {\n    // already registered\n    if (this.registeredListeners.mapClick) return;\n\n    const that = this;\n    const mapElement = this.Base.getMap().getTargetElement();\n\n    this.registeredListeners.mapClick = true;\n\n    // one-time fire click\n    mapElement.addEventListener(\n      'click', {\n        handleEvent(evt) {\n          that.clearResults(true);\n          mapElement.removeEventListener(evt.type, this, false);\n          that.registeredListeners.mapClick = false;\n        },\n      },\n      false\n    );\n  }\n\n  clearResults(collapse) {\n    collapse && this.options.targetType === TARGET_TYPE.GLASS ?\n      this.collapse() :\n      removeAllChildren(this.els.result);\n  }\n\n  getSource() {\n    return this.layer.getSource();\n  }\n\n  addLayer() {\n    let found = false;\n\n    const map = this.Base.getMap();\n\n    map.getLayers().forEach((layer) => {\n      if (layer === this.layer) found = true;\n    });\n\n    if (!found) map.addLayer(this.layer);\n  }\n}","import Control from 'ol/control/Control';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\n\nimport {\n  CONTROL_TYPE,\n  DEFAULT_OPTIONS,\n  FEATURE_SRC\n} from '../konstants';\n\nimport Html from './html';\nimport Nominatim from './nominatim';\nimport {\n  assert,\n} from './helpers/mix';\n\n/**\n * @class Base\n * @extends {ol.control.Control}\n */\nexport default class Base extends Control {\n  /**\n   * @constructor\n   * @param {string} type nominatim|reverse.\n   * @param {object} options Options.\n   */\n  constructor(type = CONTROL_TYPE.NOMINATIM, opt) {\n    assert(typeof type === 'string', '@param `type` should be string!');\n    assert(\n      type === CONTROL_TYPE.NOMINATIM || type === CONTROL_TYPE.REVERSE,\n      `@param 'type' should be '${CONTROL_TYPE.NOMINATIM}'\n      or '${CONTROL_TYPE.REVERSE}'!`\n    );\n    const options = {\n      ...DEFAULT_OPTIONS,\n      featureStyle: [\n        new Style({\n          image: new Icon({\n            scale: 0.7,\n            src: FEATURE_SRC\n          })\n        }),\n      ],\n      ...opt,\n    };\n\n    let container;\n    let $nominatim;\n    const $html = new Html(options);\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      container = $html.els.container;\n    }\n\n    super({\n      element: container,\n      ...options, // Allows to add ol.control.Control options (as target:)\n    });\n\n    if (!(this instanceof Base)) return new Base();\n\n    this.options = options;\n    this.container = container;\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      $nominatim = new Nominatim(this, $html.els);\n      this.layer = $nominatim.layer;\n    }\n  }\n\n  /**\n   * @return {ol.layer.Vector} Returns the layer created by this control\n   */\n  getLayer() {\n    return this.layer;\n  }\n\n  /**\n   * @return {ol.source.Vector} Returns the source created by this control\n   */\n  getSource() {\n    return this.getLayer().getSource();\n  }\n\n  /**\n   * Set a new provider\n   * @param {String} provider\n   */\n  setProvider(provider) {\n    this.options.provider = provider;\n  }\n\n  /**\n   * Set provider key\n   * @param {String} key\n   */\n  setProviderKey(key) {\n    this.options.key = key;\n  }\n}","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[1]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[2]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[3]!./ol-geocoder.min.css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2a480e2a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=style&index=1&id=dc80dff0&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"00125ad4\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=style&index=2&lang=scss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a65ddb3a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[3]!./ol.css?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7dd8b254\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","is_small","ref","key","clicked_location","latitude","longitude","attrs","on","closePopup","domProps","_s","popup_message","_e","file","$path","$slots","hasOwnProperty","_t","staticRenderFns","IDLE","LOADING","LOADED","ERROR","EMPTY","Tile","EventTarget","constructor","tileCoord","state","options","super","interimTile","transition_","undefined","transition","transitionStarts_","interpolate","changed","dispatchEvent","EventType","release","TileState","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","Error","load","abstract","getAlpha","id","time","start","delta","easeIn","inTransition","endTransition","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","element","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","listenImage","bind","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","getTransform","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","canWrapX","getExtent","getWidth","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","getTopLeft","destinationTopRight","getTopRight","destinationBottomRight","getBottomRight","destinationBottomLeft","getBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","Math","max","ceil","log2","getArea","addQuad_","leftBound","Infinity","forEach","triangle","i","arr","min","source","newTriangle","minX","maxX","addTriangle_","a","b","aSrc","bSrc","cSrc","push","target","d","dSrc","sourceQuadExtent","boundingExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","isFinite","intersects","isNotFinite","center","centerSrc","dx","centerSrcEstimX","modulo","dy","centerSrcErrorSquared","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","extent","createEmpty","extendCoordinate","getTriangles","brokenDiagonalRendering_","canvasPool","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","verifyBrokenDiagonalRendering","data","offset","isBrokenDiagonalRendering","globalCompositeOperation","getImageData","releaseCanvas","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","transform","sourceResolution","getPointResolution","targetMetersPerUnit","getMetersPerUnit","sourceMetersPerUnit","sourceExtent","containsCoordinate","compensationFactor","calculateSourceExtentResolution","getCenter","forEachCorner","corner","width","height","pixelRatio","triangulation","sources","gutter","renderEdges","context","round","imageSmoothingEnabled","length","pixelRound","value","scale","sourceDataExtent","extend","canvasWidthInUnits","canvasHeightInUnits","getHeight","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","x0","y0","x1","y1","x2","y2","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","getIntersection","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","clamp","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","minY","maxY","reproject_","z","size","getTileSize","renderReprojected","leftToLoad","sourceListenKey","listen","e","unlistenByKey","unlistenSources_","setTimeout","getContext","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","f","entry","value_","key_","newer","get","assert","older","remove","getKeys","keys","Array","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","set","setSize","createOrUpdate","x","y","getKeyZXY","fromKey","split","map","Number","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","TileCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileRange","contains","containsTileRange","equals","getSize","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","minZoom","resolutions_","resolutions","isSorted","origins","ii","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","DEFAULT_TILE_SIZE","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","callback","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","floor","createOrUpdateTileRange","getOrigin","getResolutions","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","pow","getTileCoordForXYAndZ_","getTileCoordCenter","resolution","toSize","getTileCoordForCoordAndResolution","coordinate","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","linearFindNearest","tileCoordIntersectsViewport","viewport","intersectsLinearRing","fullTileRanges","getForProjection","projection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","getProjection","gridOptions","maxResolution","DEFAULT_MAX_ZOOM","half","METERS_PER_UNIT","TileSource","Source","attributions","attributionsCollapsible","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","getWrapX","refresh","updateCacheSize","tileCount","useTile","TileSourceEvent","Event","type","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","tileCoordHash","index","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","String","fromCharCode","stop","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","prototype","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","getUrls","handleTileChange","event","uid","getUid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","addEventListener","getTileInternal","cache","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","appendParams","uri","params","keyParams","k","encodeURIComponent","qs","includes","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","slice","updateDimensions","assign","m","p","toLowerCase","localContext","getMatrixId","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","rotation","makeInverse","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","call","translatedCoordinate","offsets","layerStates","layerStatesArray","numLayers","matches","tmpCoord","layerState","hasRenderer","inView","layerRenderer","getRenderer","getSource","coordinates","order","distanceSq","sort","some","hasFeatureAtCoordinate","hasFeature","TRUE","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","position","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","RenderEvent","disposeInternal","parentNode","removeChild","display","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","replaceChildren","layers","renderDeclutter","GroupEvent","Property","LAYERS","LayerGroup","BaseLayer","baseOptions","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","isArray","Collection","unique","getArray","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","minResolution","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","TileQueue","tilePriorityFunction","tileChangeCallback","apply","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","appendChild","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","setZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","BaseObject","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","setMap","pan","currentCenter","getCenterInternal","animateInternal","linear","getConstrainedCenter","zoomByDelta","anchor","newResolution","getResolutionForZoom","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","pointerEvents","all","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","endInteraction","DragRotate","lastAngle_","getConstraints","disable","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","setCoordinates","Polygon","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","clone","fitInternal","LEFT","UP","RIGHT","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Date","now","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","View","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getOverlayContainerStopEvent","ownerDocument","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","cont","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","MapEventType","resolveConstraints","dispose","removeNode","unobserve","ShadowRoot","host","getElementById","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","moveStart","equalsExtent","createOrUpdateEmpty","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","interpolatePoint","flatCoordinates","stride","fraction","dimension","o","t","cumulativeLengths","binarySearch","NaN","lerp","lineStringCoordinateAtM","extrapolate","lo","hi","mid","m0","m1","LineString","SimpleGeometry","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getRevision","maxSquaredDelta","assignClosestPoint","forEachSegment","getCoordinateAtM","getCoordinates","inflateCoordinates","getCoordinateAt","getLength","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","getType","intersectsExtent","intersectsLineString","setLayout","deflateCoordinates","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","getData","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","layerExtent","getRenderSource","tileOrigin","col","row","loadedTileCallback","tiles","prepareFrame","viewResolution","viewCenter","sourceRevision","fromUserExtent","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","getRotatedViewport","childTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","preRender","clips","clipZs","currentClip","zs","ascending","reverse","currentZ","currentTilePixelSize","currentResolution","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","contextSaved","drawTileImage","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","tileCallback","TileLayer","createRenderer","WMTSTileGrid","matrixIds_","matrixIds","getMatrixIds","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","CLASS_SELECTABLE","autoPan","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","outerWidth","outerHeight","myMargin","margin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","animation","box","offsetX","pageXOffset","offsetY","pageYOffset","setVisible","mapSize","updateRenderedPosition","posX","posY","getOptions","name","props","pins","lines","start_coords","start_zoom","default","map_baselayer","validator","can_add_media_to_point","components","pin_infos","pin_coord","pin_features","mouse_feature","current_zoom","current_view","min_zoom","max_zoom","mouse_coords","i18n","messages","fr","mouse_position","search_for_a_place","created","mounted","beforeDestroy","watch","handler","deep","computed","methods","startMap","olProj","fill_color","provider","lang","placeholder","limit","keepOpen","geocoder","feature_selected","createSource","noWrap","createPointFeaturesFromPins","feature_cont","createLineFeaturesFromLines","color","makePointStyle","italic","weight","family","fill","font","_fs","text","textAlign","radius","makeLineStyle","navigateTo","openPin","openFeature","component","___CSS_LOADER_EXPORT___","module","VARS","EVENT_TYPE","CONTROL_TYPE","TARGET_TYPE","PROVIDERS","DEFAULT_OPTIONS","featureStyle","targetType","preventPanning","preventMarker","defaultFlyResolution","debug","message","randomId","prefix","performance","nowOffset","timing","navigationStart","isNumeric","str","test","addClass","classname","each","hasClass","_addClass","removeClass","_removeClass","classRegex","html","htm","replaceAll","node","elem","attr","frag","createDocumentFragment","append","RegExp","el","klass","trim","klasses","Html","els","createControl","containerClass","namespace","inputText","containerId","input","querySelector","search","glass","json","obj","Promise","resolve","reject","toQueryString","config","method","mode","credentials","jsonp","head","script","callbackName","random","indexOf","fetch","r","catch","reduce","acc","olControl","buttonControlId","inputQueryId","inputSearchId","hidden","icon","Photon","settings","q","langs","getParameters","query","handleResponse","results","lon","lat","address","properties","postcode","city","country","original","formatted","details","OpenStreet","addressdetails","countrycodes","viewbox","opt","bbox","boundingbox","display_name","road","houseNumber","house_number","town","MapQuest","neighbourhood","Bing","includeNeighborhood","maxResults","resources","resourceSets","point","formattedAddress","OpenCage","countrycode","pretty","no_annotations","lng","Nominatim","base","Base","layerName","LayerVector","SourceVector","displayInLayerSwitcher","newProvider","lastQuery","registeredListeners","mapClick","setListeners","openSearch","evt","expanded","collapse","expand","which","keyCode","parameters","clearResults","spin","ajax","console","info","res_","createList","listenMapClick","li","response","ul","addressHtml","addressTemplate","chosen","place","addressObj","addressOriginal","coord_","coord","transformExtent","createFeature","fit","Feature","Point","setStyle","setId","addFeature","building","village","blur","that","mapElement","found","Style","Icon","$nominatim","$html","setProvider","setProviderKey","exports","s","l","exp","u","_maxEntries","_minEntries","children","leaf","_all","toBBox","collides","insert","_build","_splitRoot","_insert","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","content","__esModule","locals","LENGTH","CollectionEvent","unique_","array_","assertUnique_","updateLength_","item","insertAt","removeAt","setAt","except","ADD","REMOVE","disposed","geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","setGeometry","hasProperties","getProperties","setGeometryName","getGeometryName","getStyleFunction","handleGeometryChange_","createStyleFunction","removeChangeListener","styles","getZIndex","loadHandler","errorHandler","img","listening","decoding","listenOnce","IMAGE_DECODE","decode","error","handleLoad","unlisten","handleError","decodeFallback","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","ObjectEvent","oldValue","Observable","values_","getPropertiesInternal","notify","listener","silent","unset","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","ol_key","unByKey","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","complete","inAndOut","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","geometryOrExtent","polygonFromExtent","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","VOID","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","coordinatesEqual","ANIMATING","INTERACTING","haystack","needle","comparator","cmp","low","high","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","func","strict","compare","every","currentVal","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","body","rgb","fromString","MAX_CACHE_SIZE","fromStringInternal_","asArray","g","hasAlpha","substr","startsWith","normalize","asColorLike","levels","level","target_","coordinate1","coordinate2","getWorldsAway","sourceExtentWidth","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","variant","families","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","lastChild","oldChildren","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","dispatching","pendingRemovals","propagate","pr","getListeners","_boundingExtentXYs","xs","ys","buffer","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","extendXY","val","area","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","wrapAndSliceX","UNKNOWN","INTERSECTING","ABOVE","BELOW","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","squaredDistance","squaredDx","computeExtent","deflateCoordinate","linearRing","twiceArea","linearRings","ends","LinearRing","linearRingArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingsContainsXY","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRingsArea","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","simplifyTransformed","getClosestPoint","intersectsCoordinate","sx","sy","simplify","destination","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","squaredDelta","isRing","tmpPoint","linearRingContainsExtent","outside","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","coordinatesExtent","point1","point2","ret","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","ua","navigator","userAgent","SAFARI","devicePixelRatio","WorkerGlobalScope","self","background_","background","LayerProperty","className_","state_","getClassName","getOpacity","getVisible","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","isVisible","getMapInternal","find","renderEvent","arrayLayerState","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","parse","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","expression","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","atan","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","setFill","setStroke","setText","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","Text","setBackgroundFill","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","setDisplacement","setAnchor","pointsName","points","requireNumber","radius1","radius2","shape","RegularShape","evaluateRadius","circle","Circle","setRadius","requireColorLike","requireNumberArray","requireSizeLike","property","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","createDefaultStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p1","p2","p3","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","getPixelIndexArray","imageData","idx","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transformRotation_","toFixed","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","imageState","getImageState","ImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","hasRenderListeners","clipped","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","Projection","code_","code","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","output","toEPSG4326","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","getter","projUnits","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","destProj","fromLonLat","toLonLat","lonLat","equalUnits","transformFunc","destinationProjection","getTransformFunc","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","transformed","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","retries","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","loadImage","pixelContext","createPixelContext","pixelContext_","err","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","featureChangeKeys","removed","setLoader","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","cacheKey","iconImage","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","getIconImage","offset_","offsetOrigin_","initialOptions_","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","colorString","shared","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","ee","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","create","setFromArray","transform1","transform2","compose","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid"],"sourceRoot":""}