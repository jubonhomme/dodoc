{"version":3,"file":"js/310.js","mappings":"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","sources":["webpack://app/./src/adc-core/fields/DisplayOnMap.vue?ee8f","webpack://app/./node_modules/ol/TileState.js","webpack://app/./node_modules/ol/Tile.js","webpack://app/./node_modules/ol/ImageTile.js","webpack://app/./node_modules/ol/reproj/common.js","webpack://app/./node_modules/ol/reproj/Triangulation.js","webpack://app/./node_modules/ol/reproj.js","webpack://app/./node_modules/ol/reproj/Tile.js","webpack://app/./node_modules/ol/structs/LRUCache.js","webpack://app/./node_modules/ol/tilecoord.js","webpack://app/./node_modules/ol/TileCache.js","webpack://app/./node_modules/ol/source/TileEventType.js","webpack://app/./node_modules/ol/TileRange.js","webpack://app/./node_modules/ol/tilegrid/TileGrid.js","webpack://app/./node_modules/ol/tilegrid.js","webpack://app/./node_modules/ol/source/Tile.js","webpack://app/./node_modules/ol/tileurlfunction.js","webpack://app/./node_modules/ol/source/UrlTile.js","webpack://app/./node_modules/ol/source/TileImage.js","webpack://app/./node_modules/ol/source/XYZ.js","webpack://app/./node_modules/ol/source/OSM.js","webpack://app/./node_modules/ol/uri.js","webpack://app/./node_modules/ol/source/WMTS.js","webpack://app/./node_modules/ol/renderer/Map.js","webpack://app/./node_modules/ol/renderer/Composite.js","webpack://app/./node_modules/ol/layer/Group.js","webpack://app/./node_modules/ol/MapEvent.js","webpack://app/./node_modules/ol/MapBrowserEvent.js","webpack://app/./node_modules/ol/MapBrowserEventType.js","webpack://app/./node_modules/ol/pointer/EventType.js","webpack://app/./node_modules/ol/MapBrowserEventHandler.js","webpack://app/./node_modules/ol/MapProperty.js","webpack://app/./node_modules/ol/structs/PriorityQueue.js","webpack://app/./node_modules/ol/TileQueue.js","webpack://app/./node_modules/ol/control/Attribution.js","webpack://app/./node_modules/ol/control/Rotate.js","webpack://app/./node_modules/ol/control/Zoom.js","webpack://app/./node_modules/ol/control/defaults.js","webpack://app/./node_modules/ol/interaction/Property.js","webpack://app/./node_modules/ol/interaction/Interaction.js","webpack://app/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://app/./node_modules/ol/interaction/Pointer.js","webpack://app/./node_modules/ol/events/condition.js","webpack://app/./node_modules/ol/interaction/DragPan.js","webpack://app/./node_modules/ol/interaction/DragRotate.js","webpack://app/./node_modules/ol/render/Box.js","webpack://app/./node_modules/ol/interaction/DragBox.js","webpack://app/./node_modules/ol/interaction/DragZoom.js","webpack://app/./node_modules/ol/events/Key.js","webpack://app/./node_modules/ol/interaction/KeyboardPan.js","webpack://app/./node_modules/ol/interaction/KeyboardZoom.js","webpack://app/./node_modules/ol/Kinetic.js","webpack://app/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://app/./node_modules/ol/interaction/PinchRotate.js","webpack://app/./node_modules/ol/interaction/PinchZoom.js","webpack://app/./node_modules/ol/interaction/defaults.js","webpack://app/./node_modules/ol/Map.js","webpack://app/./node_modules/ol/geom/flat/interpolate.js","webpack://app/./node_modules/ol/geom/LineString.js","webpack://app/./node_modules/ol/layer/TileProperty.js","webpack://app/./node_modules/ol/layer/BaseTile.js","webpack://app/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://app/./node_modules/ol/layer/Tile.js","webpack://app/./node_modules/ol/tilegrid/WMTS.js","webpack://app/./node_modules/ol/Overlay.js","webpack://app/./node_modules/ol/control/FullScreen.js","webpack://app/./node_modules/ol/control/ScaleLine.js","webpack://app/src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?2e37","webpack://app/./src/adc-core/fields/DisplayOnMap.vue","webpack://app/./src/components/publications/MediaPicker.vue?cf9b","webpack://app/src/components/publications/MediaPicker.vue","webpack://app/./src/components/publications/MediaPicker.vue?e7bb","webpack://app/./src/components/publications/MediaPicker.vue","webpack://app/./src/components/publications/cartography/MapForPrint.vue?5eb9","webpack://app/src/components/publications/cartography/MapForPrint.vue","webpack://app/./src/components/publications/cartography/MapForPrint.vue?be50","webpack://app/./src/components/publications/cartography/MapForPrint.vue","webpack://app/./src/components/publications/cartography/MapView.vue?b3f0","webpack://app/./src/components/publications/cartography/LayersPane.vue?f821","webpack://app/./src/components/publications/cartography/LayerContent.vue?c156","webpack://app/./src/components/publications/cartography/MapModule.vue?bbdc","webpack://app/src/components/publications/cartography/MapModule.vue","webpack://app/./src/components/publications/cartography/MapModule.vue?2385","webpack://app/./src/components/publications/cartography/MapModule.vue","webpack://app/src/components/publications/cartography/LayerContent.vue","webpack://app/./src/components/publications/cartography/LayerContent.vue?7e71","webpack://app/./src/components/publications/cartography/LayerContent.vue","webpack://app/src/components/publications/cartography/LayersPane.vue","webpack://app/./src/components/publications/cartography/LayersPane.vue?8e79","webpack://app/./src/components/publications/cartography/LayersPane.vue","webpack://app/./src/components/publications/cartography/ViewPane.vue?fa43","webpack://app/./src/components/publications/cartography/ViewContent.vue?c54a","webpack://app/src/components/publications/cartography/ViewContent.vue","webpack://app/./src/components/publications/cartography/ViewContent.vue?7416","webpack://app/./src/components/publications/cartography/ViewContent.vue","webpack://app/src/components/publications/cartography/ViewPane.vue","webpack://app/./src/components/publications/cartography/ViewPane.vue?9cde","webpack://app/./src/components/publications/cartography/ViewPane.vue","webpack://app/src/components/publications/cartography/MapView.vue","webpack://app/./src/components/publications/cartography/MapView.vue?2b9a","webpack://app/./src/components/publications/cartography/MapView.vue","webpack://app/./src/components/publications/modules/ModuleCreator.vue?ff84","webpack://app/./src/adc-core/modals/LinkPicker.vue?da80","webpack://app/src/adc-core/modals/LinkPicker.vue","webpack://app/./src/adc-core/modals/LinkPicker.vue?f647","webpack://app/./src/adc-core/modals/LinkPicker.vue","webpack://app/src/components/publications/modules/ModuleCreator.vue","webpack://app/./src/components/publications/modules/ModuleCreator.vue?a765","webpack://app/./src/components/publications/modules/ModuleCreator.vue","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?4e0d","webpack://app/./src/adc-core/modals/LinkPicker.vue?1f1a","webpack://app/./src/components/publications/cartography/LayerContent.vue?263d","webpack://app/./src/components/publications/cartography/LayersPane.vue?2db7","webpack://app/./src/components/publications/cartography/LayersPane.vue?3d16","webpack://app/./src/components/publications/cartography/MapModule.vue?6b75","webpack://app/./src/components/publications/cartography/MapView.vue?9561","webpack://app/./src/components/publications/cartography/ViewContent.vue?a017","webpack://app/./src/components/publications/cartography/ViewPane.vue?5355","webpack://app/./src/components/publications/modules/ModuleCreator.vue?9971","webpack://app/./node_modules/ol/ol.css","webpack://app/../konstants/index.js","webpack://app/../src/helpers/mix.js","webpack://app/../src/helpers/dom.js","webpack://app/../src/html.js","webpack://app/../src/helpers/ajax.js","webpack://app/../src/providers/photon.js","webpack://app/../src/providers/osm.js","webpack://app/../src/providers/mapquest.js","webpack://app/../src/providers/bing.js","webpack://app/../src/providers/opencage.js","webpack://app/../src/nominatim.js","webpack://app/../src/base.js","webpack://app/./node_modules/rbush/rbush.min.js","webpack://app/./node_modules/ol-geocoder/dist/ol-geocoder.min.css?5e9d","webpack://app/./src/adc-core/fields/DisplayOnMap.vue?1c66","webpack://app/./src/adc-core/modals/LinkPicker.vue?29fd","webpack://app/./src/components/publications/cartography/LayerContent.vue?617d","webpack://app/./src/components/publications/cartography/LayersPane.vue?628d","webpack://app/./src/components/publications/cartography/LayersPane.vue?5867","webpack://app/./src/components/publications/cartography/MapModule.vue?dca2","webpack://app/./src/components/publications/cartography/MapView.vue?b0f1","webpack://app/./src/components/publications/cartography/ViewContent.vue?3e0e","webpack://app/./src/components/publications/cartography/ViewPane.vue?4e7a","webpack://app/./src/components/publications/modules/ModuleCreator.vue?a4c7","webpack://app/./node_modules/ol/ol.css?8d4f","webpack://app/./node_modules/ol/Collection.js","webpack://app/./node_modules/ol/CollectionEventType.js","webpack://app/./node_modules/ol/Disposable.js","webpack://app/./node_modules/ol/Feature.js","webpack://app/./node_modules/ol/Image.js","webpack://app/./node_modules/ol/ImageState.js","webpack://app/./node_modules/ol/MapEventType.js","webpack://app/./node_modules/ol/Object.js","webpack://app/./node_modules/ol/ObjectEventType.js","webpack://app/./node_modules/ol/Observable.js","webpack://app/./node_modules/ol/ViewProperty.js","webpack://app/./node_modules/ol/centerconstraint.js","webpack://app/./node_modules/ol/resolutionconstraint.js","webpack://app/./node_modules/ol/View.js","webpack://app/./node_modules/ol/ViewHint.js","webpack://app/./node_modules/ol/array.js","webpack://app/./node_modules/ol/asserts.js","webpack://app/./node_modules/ol/color.js","webpack://app/./node_modules/ol/colorlike.js","webpack://app/./node_modules/ol/console.js","webpack://app/./node_modules/ol/control/Control.js","webpack://app/./node_modules/ol/coordinate.js","webpack://app/./node_modules/ol/css.js","webpack://app/./node_modules/ol/dom.js","webpack://app/./node_modules/ol/easing.js","webpack://app/./node_modules/ol/events.js","webpack://app/./node_modules/ol/events/Event.js","webpack://app/./node_modules/ol/events/EventType.js","webpack://app/./node_modules/ol/events/Target.js","webpack://app/./node_modules/ol/extent.js","webpack://app/./node_modules/ol/extent/Relationship.js","webpack://app/./node_modules/ol/functions.js","webpack://app/./node_modules/ol/geom/Point.js","webpack://app/./node_modules/ol/geom/flat/area.js","webpack://app/./node_modules/ol/geom/LinearRing.js","webpack://app/./node_modules/ol/geom/flat/interiorpoint.js","webpack://app/./node_modules/ol/geom/flat/reverse.js","webpack://app/./node_modules/ol/geom/flat/orient.js","webpack://app/./node_modules/ol/geom/Polygon.js","webpack://app/./node_modules/ol/geom/Geometry.js","webpack://app/./node_modules/ol/geom/SimpleGeometry.js","webpack://app/./node_modules/ol/geom/flat/closest.js","webpack://app/./node_modules/ol/geom/flat/contains.js","webpack://app/./node_modules/ol/geom/flat/deflate.js","webpack://app/./node_modules/ol/geom/flat/inflate.js","webpack://app/./node_modules/ol/geom/flat/intersectsextent.js","webpack://app/./node_modules/ol/geom/flat/length.js","webpack://app/./node_modules/ol/geom/flat/segments.js","webpack://app/./node_modules/ol/geom/flat/simplify.js","webpack://app/./node_modules/ol/geom/flat/transform.js","webpack://app/./node_modules/ol/has.js","webpack://app/./node_modules/ol/layer/Base.js","webpack://app/./node_modules/ol/layer/Layer.js","webpack://app/./node_modules/ol/layer/Property.js","webpack://app/./node_modules/ol/expr/expression.js","webpack://app/./node_modules/ol/expr/cpu.js","webpack://app/./node_modules/ol/render/canvas/style.js","webpack://app/./node_modules/ol/layer/BaseVector.js","webpack://app/./node_modules/ol/render/canvas/Instruction.js","webpack://app/./node_modules/ol/render/VectorContext.js","webpack://app/./node_modules/ol/render/canvas/Builder.js","webpack://app/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://app/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://app/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://app/./node_modules/ol/geom/flat/linechunk.js","webpack://app/./node_modules/ol/geom/flat/straightchunk.js","webpack://app/./node_modules/ol/render/canvas/TextBuilder.js","webpack://app/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://app/./node_modules/ol/geom/flat/textpath.js","webpack://app/./node_modules/ol/render/canvas/Executor.js","webpack://app/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://app/./node_modules/ol/render/canvas/Immediate.js","webpack://app/./node_modules/ol/render/canvas/hitdetect.js","webpack://app/./node_modules/ol/renderer/vector.js","webpack://app/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://app/./node_modules/ol/layer/Vector.js","webpack://app/./node_modules/ol/math.js","webpack://app/./node_modules/ol/obj.js","webpack://app/./node_modules/ol/proj/Units.js","webpack://app/./node_modules/ol/proj/Projection.js","webpack://app/./node_modules/ol/proj/epsg3857.js","webpack://app/./node_modules/ol/proj/epsg4326.js","webpack://app/./node_modules/ol/proj/projections.js","webpack://app/./node_modules/ol/proj/transforms.js","webpack://app/./node_modules/ol/sphere.js","webpack://app/./node_modules/ol/proj.js","webpack://app/./node_modules/ol/render/Event.js","webpack://app/./node_modules/ol/render/EventType.js","webpack://app/./node_modules/ol/render/canvas.js","webpack://app/./node_modules/ol/renderer/Layer.js","webpack://app/./node_modules/ol/renderer/canvas/Layer.js","webpack://app/./node_modules/ol/rotationconstraint.js","webpack://app/./node_modules/ol/size.js","webpack://app/./node_modules/ol/source/Source.js","webpack://app/./node_modules/ol/structs/RBush.js","webpack://app/./node_modules/ol/source/VectorEventType.js","webpack://app/./node_modules/ol/loadingstrategy.js","webpack://app/./node_modules/ol/featureloader.js","webpack://app/./node_modules/ol/source/Vector.js","webpack://app/./node_modules/ol/style/Circle.js","webpack://app/./node_modules/ol/style/Fill.js","webpack://app/./node_modules/ol/style/IconImage.js","webpack://app/./node_modules/ol/style/Icon.js","webpack://app/./node_modules/ol/style/IconImageCache.js","webpack://app/./node_modules/ol/style/Image.js","webpack://app/./node_modules/ol/style/RegularShape.js","webpack://app/./node_modules/ol/style/Stroke.js","webpack://app/./node_modules/ol/style/Style.js","webpack://app/./node_modules/ol/style/Text.js","webpack://app/./node_modules/ol/tilegrid/common.js","webpack://app/./node_modules/ol/transform.js","webpack://app/./node_modules/ol/util.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"m_displayOnMap\",class:{\n    'is--small': _vm.is_small,\n  }},[_c('div',{ref:\"map\",staticClass:\"_map\"}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.clicked_location.file || _vm.$slots.hasOwnProperty('popup_message')),expression:\"clicked_location.file || $slots.hasOwnProperty('popup_message')\"}],ref:\"popUp\",staticClass:\"_popup\"},[_c('div',{key:_vm.clicked_location.latitude + '-' + _vm.clicked_location.longitude},[_c('button',{ref:\"closePopup\",staticClass:\"u-button u-button_icon _popupClose\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closePopup}},[_c('b-icon',{attrs:{\"icon\":\"x-circle\"}})],1),(_vm.clicked_location.file)?_c('div',{key:_vm.clicked_location.file.$path,staticClass:\"_pinContent\"},[_c('MediaContent',{attrs:{\"file\":_vm.clicked_location.file,\"is_draggable\":false,\"resolution\":1600,\"context\":'full',\"show_fs_button\":true}})],1):_vm._e(),(_vm.popup_message)?_c('div',{staticClass:\"_popupMessage\",domProps:{\"innerHTML\":_vm._s(_vm.popup_message)}}):_vm._e(),(\n          !_vm.clicked_location.file && _vm.$slots.hasOwnProperty('popup_message')\n        )?_c('div',{staticClass:\"_popupMessage\"},[_vm._t(\"popup_message\")],2):_vm._e()])]),_c('div',{attrs:{\"id\":\"mouse-position\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","<template>\n  <div\n    class=\"m_displayOnMap\"\n    :class=\"{\n      'is--small': is_small,\n    }\"\n  >\n    <div class=\"_map\" ref=\"map\" />\n\n    <div\n      ref=\"popUp\"\n      class=\"_popup\"\n      v-show=\"clicked_location.file || $slots.hasOwnProperty('popup_message')\"\n    >\n      <div :key=\"clicked_location.latitude + '-' + clicked_location.longitude\">\n        <button\n          type=\"button\"\n          class=\"u-button u-button_icon _popupClose\"\n          ref=\"closePopup\"\n          @click=\"closePopup\"\n        >\n          <b-icon icon=\"x-circle\" />\n        </button>\n\n        <div\n          v-if=\"clicked_location.file\"\n          :key=\"clicked_location.file.$path\"\n          class=\"_pinContent\"\n        >\n          <MediaContent\n            :file=\"clicked_location.file\"\n            :is_draggable=\"false\"\n            :resolution=\"1600\"\n            :context=\"'full'\"\n            :show_fs_button=\"true\"\n          />\n        </div>\n\n        <!-- <div class=\"u-instructions\">\n          <small>\n            <span class=\"complementaryText\"> {{ $t(\"latitude\") }} = </span>\n            {{ clicked_location.latitude }}°\n            <br />\n            <span class=\"complementaryText\"> {{ $t(\"longitude\") }} = </span>\n            {{ clicked_location.longitude }}°\n          </small>\n        </div> -->\n        <div\n          v-if=\"popup_message\"\n          class=\"_popupMessage\"\n          v-html=\"popup_message\"\n        />\n        <div\n          class=\"_popupMessage\"\n          v-if=\"\n            !clicked_location.file && $slots.hasOwnProperty('popup_message')\n          \"\n        >\n          <slot name=\"popup_message\" />\n        </div>\n      </div>\n    </div>\n    <div id=\"mouse-position\" />\n  </div>\n</template>\n<script>\nimport olSourceOSM from \"ol/source/OSM\";\nimport olSourceWMTS from \"ol/source/WMTS\";\nimport olMap from \"ol/Map\";\nimport olView from \"ol/View\";\nimport olFeature from \"ol/Feature\";\nimport olPoint from \"ol/geom/Point\";\nimport olLineString from \"ol/geom/LineString\";\nimport olTileLayer from \"ol/layer/Tile\";\nimport olTileGridWMTS from \"ol/tilegrid/WMTS\";\nimport olVectorLayer from \"ol/layer/Vector\";\nimport olSourceVector from \"ol/source/Vector\";\nimport * as olProj from \"ol/proj\";\nimport olOverlay from \"ol/Overlay\";\n\nimport Geocoder from \"ol-geocoder\";\nimport \"ol-geocoder/dist/ol-geocoder.min.css\";\n\nimport olStyle from \"ol/style/Style\";\nimport olCircleStyle from \"ol/style/Circle\";\nimport olFill from \"ol/style/Fill\";\nimport olStroke from \"ol/style/Stroke\";\nimport olText from \"ol/style/Text\";\nimport { ScaleLine, FullScreen } from \"ol/control\";\n\nexport default {\n  name: \"DisplayOnMap\",\n  props: {\n    pins: [Boolean, Array],\n    lines: [Boolean, Object],\n    start_coords: {\n      type: [Boolean, Object],\n    },\n    start_zoom: {\n      type: [Boolean, Number],\n      default: 9,\n    },\n    map_baselayer: {\n      type: String,\n      default: \"OSM\",\n      validator(value) {\n        // The value must match one of these strings\n        return [\"OSM\", \"IGN_MAP\", \"IGN_SAT\"].includes(value);\n      },\n    },\n    is_small: {\n      type: Boolean,\n      default: true,\n    },\n    show_scale: {\n      type: Boolean,\n      default: true,\n    },\n    opened_pin_path: String,\n    can_add_media_to_point: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  components: {},\n  data() {\n    return {\n      pin_infos: false,\n      pin_coord: false,\n      overlay: undefined,\n\n      popup_message: undefined,\n      clicked_location: {\n        latitude: undefined,\n        longitude: undefined,\n        file: undefined,\n      },\n\n      pin_features: undefined,\n      mouse_feature: undefined,\n\n      current_zoom: undefined,\n      current_view: undefined,\n\n      min_zoom: 3,\n      max_zoom: 22,\n\n      mouse_coords: false,\n\n      map: undefined,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        mouse_position: \"Position de la balise\",\n        search_for_a_place: \"Rechercher un lieu\",\n      },\n    },\n  },\n  created() {\n    this.$eventHub.$on(\"publication.map.navigateTo\", this.navigateTo);\n  },\n  mounted() {\n    setTimeout(() => {\n      this.startMap();\n    }, 500);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"publication.map.navigateTo\", this.navigateTo);\n  },\n  watch: {\n    pins: {\n      handler() {\n        this.startMap({ keep_loc_and_zoom: true });\n      },\n      deep: true,\n    },\n    lines: {\n      handler() {\n        this.startMap({ keep_loc_and_zoom: true });\n      },\n      deep: true,\n    },\n    map_baselayer() {\n      this.startMap({ keep_loc_and_zoom: true });\n    },\n    start_coords() {\n      this.startMap();\n    },\n    start_zoom() {\n      this.startMap();\n    },\n    opened_pin_path() {\n      this.openFeature(this.opened_pin_path);\n    },\n  },\n  computed: {},\n  methods: {\n    startMap({ keep_loc_and_zoom = false } = {}) {\n      let zoom =\n        this.constrainVal(this.start_zoom, this.min_zoom, this.max_zoom) || 9;\n      let center = [5.39057449011251, 43.310173305629576];\n\n      if (this.start_coords?.longitude && this.start_coords?.latitude)\n        center = [this.start_coords.longitude, this.start_coords.latitude];\n      else if (\n        this.pins &&\n        this.pins.length > 0 &&\n        this.pins[0] &&\n        this.pins[0].longitude &&\n        this.pins[0].latitude\n      ) {\n        center = [this.pins[0].longitude, this.pins[0].latitude];\n      }\n\n      // destroy map if exist\n      if (this.map) {\n        if (keep_loc_and_zoom) {\n          zoom = this.map.getView().getZoom();\n          center = this.map.getView().getCenter();\n        }\n\n        this.map.setTarget(null);\n        this.map = null;\n      }\n\n      olProj.useGeographic();\n\n      this.view = new olView({\n        center,\n        zoom,\n        minZoom: this.min_zoom,\n        maxZoom: this.max_zoom,\n      });\n\n      const source = this.createSource(this.map_baselayer);\n\n      this.map = new olMap({\n        target: this.$refs.map,\n        layers: [\n          new olTileLayer({\n            source,\n          }),\n        ],\n        view: this.view,\n      });\n\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: this.createLineFeaturesFromLines(),\n            wrapX: false,\n          }),\n          style: (feature) => this.makeLineStyle(feature),\n        })\n      );\n\n      this.pin_features = this.createPointFeaturesFromPins();\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: this.pin_features,\n            wrapX: false,\n          }),\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n            }),\n        })\n      );\n\n      /////////////////////////////////////////////////////////////// MOUSE\n      this.mouse_feature = new olFeature({\n        geometry: new olPoint([undefined, undefined]),\n      });\n      this.map.addLayer(\n        new olVectorLayer({\n          source: new olSourceVector({\n            features: [this.mouse_feature],\n            wrapX: false,\n          }),\n          style: (feature, resolution) =>\n            this.makePointStyle({\n              feature,\n              resolution,\n              fill_color: \"hsla(207, 78%, 53%, .7)\",\n            }),\n        })\n      );\n\n      const fs_option = new FullScreen();\n      this.map.addControl(fs_option);\n\n      //////////////////////////////////////////////////// SCALELINE\n      if (this.show_scale) {\n        const scale_line = new ScaleLine({\n          units: \"metric\",\n        });\n        this.map.addControl(scale_line);\n      }\n\n      //////////////////////////////////////////////////// SEARCH FIELD\n\n      let lang = \"fr-FR\";\n      if (this.$i18n.locale === \"en\") lang = \"en-US\";\n\n      const geocoder = new Geocoder(\"nominatim\", {\n        provider: \"osm\",\n        //key: '__some_key__',\n        lang,\n        placeholder: this.$t(\"search_for_a_place\"),\n        // targetType: \"text-input\",\n        limit: 5,\n        keepOpen: false,\n        preventDefault: true,\n      });\n      this.map.addControl(geocoder);\n      geocoder.on(\"addresschosen\", (evt) => {\n        this.closePopup();\n\n        if (evt.place?.lon && evt.place?.lat) {\n          this.clicked_location.latitude = +evt.place.lat;\n          this.clicked_location.longitude = +evt.place.lon;\n          const coordinate = [\n            this.clicked_location.longitude,\n            this.clicked_location.latitude,\n          ];\n\n          this.popup_message = evt.address.formatted;\n\n          this.overlay.setPosition(coordinate);\n\n          this.navigateTo({\n            center: [+evt.place.lon, +evt.place.lat],\n          });\n          // this.map.getView().fit(evt.place.bbox);\n        }\n      });\n\n      //////////////////////////////////////////////////// OVERLAYS\n\n      this.overlay = new olOverlay({\n        element: this.$refs.popUp,\n        autoPan: false,\n      });\n      this.map.addOverlay(this.overlay);\n\n      //////////////////////////////////////////////////// SEARCH FIELD\n\n      let feature_selected = null;\n      this.map.on(\"pointermove\", (event) => {\n        if (feature_selected !== null) {\n          feature_selected.setStyle(undefined);\n          feature_selected = null;\n        }\n\n        this.map.forEachFeatureAtPixel(event.pixel, (f) => {\n          feature_selected = f;\n          // const selectStyle = this.makePointStyle({});\n          // selectStyle.getFill().setColor(f.get(\"COLOR\") || \"#eeeeee\");\n          // f.setStyle(selectStyle);\n          // return true;\n        });\n      });\n\n      this.current_zoom = zoom;\n      this.current_view = center;\n      this.map.on(\"moveend\", () => {\n        this.current_zoom = this.roundToDec(this.map.getView().getZoom());\n        this.current_view = this.map.getView().getCenter();\n      });\n\n      this.map.on(\"singleclick\", (event) => {\n        this.closePopup();\n\n        const feature = this.map.getFeaturesAtPixel(event.pixel)[0];\n        let [longitude, latitude] = event.coordinate;\n        longitude = this.roundToDec(longitude, 6);\n        latitude = this.roundToDec(latitude, 6);\n\n        if (!feature) {\n          this.$emit(\"newPositionClicked\", {\n            longitude,\n            latitude,\n            zoom: this.current_zoom,\n          });\n          this.$eventHub.$emit(\"publication.map.click\", {\n            longitude,\n            latitude,\n          });\n          this.mouse_feature\n            .getGeometry()\n            .setCoordinates([longitude, latitude]);\n\n          this.overlay.setPosition([longitude, latitude]);\n          this.clicked_location.longitude = longitude;\n          this.clicked_location.latitude = latitude;\n        } else {\n          const path = feature.get(\"path\");\n          this.openPin(path);\n        }\n      });\n\n      // function addInteraction() {\n      //   draw = new Draw({\n      //     source: source,\n      //     type: \"Point\",\n      //   });\n      //   this.map.addInteraction(draw);\n      // }\n      // addInteraction();\n    },\n    createSource(type) {\n      if (type === \"OSM\") {\n        return new olSourceOSM({\n          wrapX: false,\n          noWrap: true,\n        });\n      } else if ([\"IGN_SAT\", \"IGN_MAP\"].includes(type)) {\n        const resolutions = [\n          156543.03392804103, 78271.5169640205, 39135.75848201024,\n          19567.879241005125, 9783.939620502562, 4891.969810251281,\n          2445.9849051256406, 1222.9924525628203, 611.4962262814101,\n          305.74811314070485, 152.87405657035254, 76.43702828517625,\n          38.218514142588134, 19.109257071294063, 9.554628535647034,\n          4.777314267823517, 2.3886571339117584, 1.1943285669558792,\n          0.5971642834779396, 0.29858214173896974, 0.14929107086948493,\n          0.07464553543474241,\n        ];\n\n        let layer, format;\n        if (type === \"IGN_MAP\") {\n          layer = \"GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2\";\n          format = \"image/png\";\n        } else if (type === \"IGN_SAT\") {\n          layer = \"ORTHOIMAGERY.ORTHOPHOTOS\";\n          format = \"image/jpeg\";\n        }\n\n        return new olSourceWMTS({\n          url: \"https://wxs.ign.fr/decouverte/geoportail/wmts\",\n          layer,\n          matrixSet: \"PM\",\n          format,\n          style: \"normal\",\n          tileGrid: new olTileGridWMTS({\n            origin: [-20037508, 20037508], // topLeftCorner\n            resolutions, // résolutions\n            matrixIds: [\n              \"0\",\n              \"1\",\n              \"2\",\n              \"3\",\n              \"4\",\n              \"5\",\n              \"6\",\n              \"7\",\n              \"8\",\n              \"9\",\n              \"10\",\n              \"11\",\n              \"12\",\n              \"13\",\n              \"14\",\n              \"15\",\n              \"16\",\n              \"17\",\n              \"18\",\n              \"19\",\n            ], // ids des TileMatrix\n          }),\n          wrapX: false,\n          noWrap: true,\n        });\n      }\n    },\n    createPointFeaturesFromPins() {\n      let features = [];\n      if (this.pins && this.pins.length > 0) {\n        this.pins.map((pin) => {\n          if (!pin || !pin.longitude || !pin.latitude) return;\n\n          let feature_cont = {\n            geometry: new olPoint([pin.longitude, pin.latitude]),\n          };\n          feature_cont.path = pin.path;\n          if (pin.color) feature_cont.fill_color = pin.color;\n          if (pin.file) feature_cont.file = pin.file;\n          features.push(new olFeature(feature_cont));\n        });\n      }\n      return features;\n    },\n    createLineFeaturesFromLines() {\n      let features = [];\n      if (this.lines && Object.keys(this.lines).length > 0) {\n        // const lines = this.pins.reduce((acc, pin) => {\n        //   if (pin.belongs_to_layer) {\n        //   }\n        //   if (pin?.longitude && pin?.latitude)\n        //     acc.push([pin.longitude, pin.latitude]);\n        //   return acc;\n        // }, {});\n        Object.values(this.lines).map(({ color, coordinates }) => {\n          const feature_cont = {\n            geometry: new olLineString(coordinates),\n            name: \"Path\",\n          };\n          feature_cont.stroke_color = color;\n          features.push(new olFeature(feature_cont));\n        });\n      }\n      return features;\n    },\n    makePointStyle({\n      feature,\n      resolution,\n      fill_color = \"hsla(36, 96%, 50%, .7)\",\n    }) {\n      // see https://openlayers.org/en/latest/examples/vector-labels.html\n      resolution;\n      let style = {};\n      if (feature?.get(\"label\")) {\n        const _fs = {\n          italic: \"normal\",\n          weight: \"600\",\n          size: \"14px\",\n          height: 1.2,\n          family: \"IBM Plex Mono\",\n        };\n\n        style.text = new olText({\n          fill: new olFill({ color: \"#000\" }),\n          stroke: new olStroke({ color: \"#fff\" }),\n          // font: \"bold 48px serif\",\n          font:\n            _fs.italic +\n            \" \" +\n            _fs.weight +\n            \" \" +\n            _fs.size +\n            \"/\" +\n            _fs.height +\n            \" \" +\n            _fs.family,\n          text: \"\" + feature.get(\"label\"),\n          textAlign: \"start\",\n          offsetX: 15,\n        });\n      }\n      if (feature?.get(\"fill_color\")) {\n        fill_color = feature.get(\"fill_color\");\n      }\n\n      style.image = new olCircleStyle({\n        radius: 8,\n        fill: new olFill({ color: fill_color }),\n        stroke: new olStroke({ color: \"#232e4a\", width: 2 }),\n      });\n\n      return new olStyle(style);\n    },\n    makeLineStyle(feature) {\n      const style = {\n        stroke: new olStroke({\n          color: feature.get(\"stroke_color\"),\n          width: 3,\n        }),\n      };\n      return new olStyle(style);\n    },\n    resetClickedLocation() {\n      this.mouse_feature.getGeometry().setCoordinates([undefined, undefined]);\n      this.clicked_location.latitude = undefined;\n      this.clicked_location.longitude = undefined;\n      this.clicked_location.file = undefined;\n      this.popup_message = undefined;\n    },\n    navigateTo({ center, zoom = this.current_zoom }) {\n      // used to stop current animation if there are any\n      // see https://github.com/openlayers/openlayers/issues/3714#issuecomment-263266468\n      this.view.setRotation(0);\n      this.view.animate({\n        center,\n        zoom,\n      });\n    },\n    openPin(path) {\n      this.$emit(\"update:opened_pin_path\", path);\n    },\n    openFeature(path) {\n      const feature = this.pin_features.find((f) => f.get(\"path\") === path);\n      if (!feature) return \"no_feature_found\";\n\n      this.resetClickedLocation();\n\n      const coordinates = feature.getGeometry().getCoordinates();\n      const f = feature.get(\"file\");\n      this.clicked_location.file = f || undefined;\n      this.overlay.setPosition(coordinates);\n      this.clicked_location.longitude = coordinates[0];\n      this.clicked_location.latitude = coordinates[1];\n      this.navigateTo({\n        center: [\n          this.clicked_location.longitude,\n          this.clicked_location.latitude,\n        ],\n      });\n    },\n    closePopup() {\n      this.resetClickedLocation();\n      this.$emit(\"update:opened_pin_path\", undefined);\n\n      this.overlay.setPosition(undefined);\n      if (this.$refs.closePopup) this.$refs.closePopup.blur();\n\n      return false;\n    },\n  },\n};\n</script>\n<style src=\"../../../node_modules/ol/ol.css\"></style>\n<style lang=\"scss\" scoped>\n.m_displayOnMap {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background-color: var(--c-gris);\n  font-size: 150%;\n\n  flex: 1 1 320px;\n\n  &.is--small {\n    width: 600px;\n    max-width: 100%;\n    aspect-ratio: 1;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n}\n._map {\n  width: 100%;\n  height: 100%;\n\n  ::v-deep {\n    .ol-geocoder {\n      .gcd-gl-btn {\n        height: 1.375em;\n        width: 1.375em;\n      }\n      .gcd-gl-input {\n      }\n    }\n    .gcd-road {\n      font-weight: normal;\n      font-style: italic;\n      font-size: var(--sl-font-size-small);\n      color: inherit;\n    }\n  }\n}\n._popup {\n  position: absolute;\n  bottom: 12px;\n  left: -48px;\n  min-width: 280px;\n\n  font-size: var(--sl-font-size-normal);\n\n  background: white;\n\n  border: none;\n  border-radius: var(--panel-radius);\n\n  box-shadow: var(--panel-shadows);\n\n  pointer-events: none;\n\n  &:after,\n  &:before {\n    top: 100%;\n    border: solid transparent;\n    content: \" \";\n    height: 0;\n    width: 0;\n    position: absolute;\n    pointer-events: none;\n  }\n  &:after {\n    border-top-color: white;\n    border-width: 10px;\n    left: 48px;\n    margin-left: -10px;\n  }\n  // &:before {\n  //   border-top-color: #cccccc;\n  //   border-width: 11px;\n  //   left: 48px;\n  //   margin-left: -11px;\n  // }\n\n  ._pinContent,\n  ._popupClose {\n    pointer-events: auto;\n  }\n}\n._popupClose {\n  position: absolute;\n  z-index: 1000;\n  top: calc(var(--spacing) / -2);\n  right: calc(var(--spacing) / -2);\n  padding: calc(var(--spacing) / 1);\n}\n\n._pinContent {\n  position: relative;\n  border-radius: var(--panel-radius);\n  overflow: hidden;\n}\n\n._popupMessage {\n  padding: calc(var(--spacing) / 2) calc(var(--spacing) / 1);\n}\n</style>\n<style lang=\"scss\"></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DisplayOnMap.vue?vue&type=template&id=637ba9a7&scoped=true&\"\nimport script from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nexport * from \"./DisplayOnMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"../../../node_modules/ol/ol.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./DisplayOnMap.vue?vue&type=style&index=1&id=637ba9a7&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"637ba9a7\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_mediaPicker\"},[_c('PickMediaFromProjects',{attrs:{\"path\":_vm.current_project_path,\"select_mode\":_vm.select_mode},on:{\"addMedias\":function($event){return _vm.$emit('addMedias', $event)},\"close\":function($event){return _vm.$emit('close')}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"_mediaPicker\">\n    <!-- OPTIONS -->\n    <!-- create a text -->\n    <!-- <button type=\"button\" @click=\"createText\">\n        {{ $t(\"create_text\") }}\n      </button> -->\n    <!-- select from this or another project library -->\n    <PickMediaFromProjects\n      :path=\"current_project_path\"\n      :select_mode=\"select_mode\"\n      @addMedias=\"$emit('addMedias', $event)\"\n      @close=\"$emit('close')\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    publication_path: String,\n    select_mode: {\n      type: String,\n      default: \"multiple\",\n    },\n  },\n  components: {},\n  data() {\n    return {};\n  },\n  async created() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    current_project_path() {\n      const all_publications_path = this.getParent(this.publication_path);\n      return this.getParent(all_publications_path);\n    },\n  },\n  methods: {},\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MediaPicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MediaPicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MediaPicker.vue?vue&type=template&id=18247ea0&scoped=true&\"\nimport script from \"./MediaPicker.vue?vue&type=script&lang=js&\"\nexport * from \"./MediaPicker.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"18247ea0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('MapView',{attrs:{\"publication\":_vm.publication,\"opened_view_path\":_vm.opened_view_path,\"can_edit\":_vm.can_edit},on:{\"toggleView\":_vm.toggleView}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <MapView\n    :publication=\"publication\"\n    :opened_view_path=\"opened_view_path\"\n    :can_edit=\"can_edit\"\n    @toggleView=\"toggleView\"\n  />\n</template>\n<script>\nimport MapView from \"@/components/publications/cartography/MapView.vue\";\n\nexport default {\n  props: {\n    publication: Object,\n  },\n  components: {\n    MapView,\n  },\n  data() {\n    return {\n      page_opened_id: false,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {},\n    },\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    opened_view_path() {\n      return this.$route.query?.view || false;\n    },\n  },\n  methods: {\n    toggleView(view_meta) {\n      this.updatePageQuery({ prop: \"view\", val: view_meta });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapForPrint.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapForPrint.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapForPrint.vue?vue&type=template&id=c04bf540&scoped=true&\"\nimport script from \"./MapForPrint.vue?vue&type=script&lang=js&\"\nexport * from \"./MapForPrint.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c04bf540\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_mapView\"},[_c('LayersPane',{attrs:{\"publication\":_vm.publication,\"layers\":_vm.layers,\"opened_layer_path\":_vm.opened_layer_path,\"opened_pin_path\":_vm.opened_pin_path,\"can_edit\":_vm.can_edit},on:{\"update:opened_layer_path\":function($event){_vm.opened_layer_path=$event},\"update:opened_pin_path\":function($event){_vm.opened_pin_path=$event}}}),_c('DisplayOnMap',{staticClass:\"_mapContainer\",attrs:{\"start_coords\":_vm.start_coords,\"start_zoom\":_vm.start_zoom,\"map_baselayer\":_vm.publication.map_baselayer,\"pins\":_vm.pins,\"lines\":_vm.lines,\"is_small\":false,\"opened_pin_path\":_vm.opened_pin_path,\"can_add_media_to_point\":!!_vm.opened_layer_path},on:{\"update:opened_pin_path\":function($event){_vm.opened_pin_path=$event},\"newPositionClicked\":_vm.newPositionClicked}},[(_vm.can_edit)?_c('div',{attrs:{\"slot\":\"popup_message\"},slot:\"popup_message\"},[(!_vm.opened_layer_path)?_c('div',[_vm._v(\" \"+_vm._s(_vm.$t(\"to_add_media_here_open_matching_layer\"))+\" \")]):_c('div',[_c('ModuleCreator',{attrs:{\"publication_path\":_vm.publication.$path,\"is_collapsed\":false,\"context\":'cartography',\"select_mode\":'single',\"show_labels\":true,\"types_available\":['medias'],\"post_addtl_meta\":_vm.new_module_meta},on:{\"addModules\":_vm.addModules}})],1)]):_vm._e()]),_c('ViewPane',{attrs:{\"publication\":_vm.publication,\"views\":_vm.views,\"opened_view_path\":_vm.opened_view_path,\"can_edit\":_vm.can_edit},on:{\"toggleView\":function($event){return _vm.$emit('toggleView', $event)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_layersPane\"},[_c('DetailsPane',{ref:\"details\",attrs:{\"header\":_vm.$t('layers'),\"icon\":'card-list',\"has_items\":_vm.layers.length > 0 ? _vm.layers.length : false,\"is_open_initially\":true,\"can_be_toggled\":false}},[_c('ReorderedList',{attrs:{\"field_name\":'layers_list',\"items\":_vm.layers,\"path\":_vm.publication.$path,\"active_item_path\":_vm.opened_layer_path,\"can_edit\":_vm.can_edit},on:{\"openItem\":_vm.openLayer},scopedSlots:_vm._u([{key:\"default\",fn:function(slotProps){return [_c('span',{staticClass:\"_colorInd\",style:('background-color: ' +\n          (slotProps.item.section_color || _vm.default_layer_color))}),(slotProps.item.section_title)?_c('span',[_vm._v(\" \"+_vm._s(slotProps.item.section_title)+\" \")]):_c('span',{domProps:{\"innerHTML\":_vm._s((\"<i>\" + (_vm.$t('untitled')) + \"</i>\"))}}),_c('span',{staticClass:\"u-nut\"},[_vm._v(\" \"+_vm._s(Array.isArray(slotProps.item.modules_list) ? slotProps.item.modules_list.length : \"\")+\" \")])]}}])}),(_vm.can_edit)?[(_vm.layers.length > 0)?[_c('hr')]:_vm._e(),(_vm.can_edit)?_c('button',{staticClass:\"u-button u-button_bleuvert u-button_small\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.createLayer}},[_vm._v(\" \"+_vm._s(_vm.$t(\"create_layer\"))+\" \")]):_vm._e()]:_vm._e()],2),(_vm.opened_layer_path)?_c('LayerContent',{attrs:{\"layer\":_vm.opened_layer,\"default_layer_color\":_vm.default_layer_color,\"publication\":_vm.publication,\"opened_pin_path\":_vm.opened_pin_path,\"can_edit\":_vm.can_edit},on:{\"repickLocation\":_vm.repickLocation,\"openPin\":function($event){return _vm.$emit('update:opened_pin_path', $event)},\"close\":_vm.closeLayer}}):_vm._e(),(_vm.is_repicking_location_for)?_c('div',{staticClass:\"_repickNotice\"},[_c('div',{staticClass:\"_repickNotice--content\"},[_c('div',[_vm._v(\" \"+_vm._s(_vm.$t(\"click_on_map_to_repick_location_for_media\"))+\" \")]),_c('button',{staticClass:\"u-buttonLink\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.is_repicking_location_for = false}}},[_vm._v(\" \"+_vm._s(_vm.$t(\"cancel\"))+\" \")])])]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_openedLayer\"},[_c('div',{staticClass:\"_closeLayerBtn\"},[_c('sl-button',{attrs:{\"variant\":\"default\",\"size\":\"medium\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('sl-icon',{attrs:{\"name\":\"x-lg\",\"label\":_vm.$t('close')}})],1)],1),(_vm.layer)?_c('div',{staticClass:\"_openedLayer--content\"},[_c('div',{staticClass:\"_title\"},[(!_vm.can_edit)?_c('span',{staticClass:\"_colorInd\",style:('background-color: ' + (_vm.layer.section_color || _vm.default_layer_color))}):_vm._e(),_c('TitleField',{attrs:{\"field_name\":'section_title',\"label\":_vm.can_edit ? _vm.$t('layer_title') : '',\"content\":_vm.layer.section_title || _vm.$t('untitled'),\"path\":_vm.layer.$path,\"maxlength\":120,\"tag\":'h3',\"can_edit\":_vm.can_edit}})],1),(_vm.can_edit)?_c('div',{staticClass:\"u-spacingBottom _color\"},[_c('ColorInput',{attrs:{\"label\":_vm.$t('pins_color'),\"can_toggle\":false,\"default_value\":_vm.default_layer_color,\"value\":_vm.layer.section_color},on:{\"save\":function($event){return _vm.updateOpenedLayer({ field: 'section_color', value: $event })}}})],1):_vm._e(),(_vm.can_edit)?_c('div',{staticClass:\"u-spacingBottom\"},[_c('ToggleInput',{attrs:{\"label\":_vm.$t('link_pins'),\"content\":_vm.layer.link_pins},on:{\"update:content\":function($event){return _vm.updateOpenedLayer({ field: 'link_pins', value: $event })}}})],1):_vm._e(),_c('div',{},[_c('DLabel',{attrs:{\"str\":_vm.$t('pins')}}),(_vm.layer_modules_list.length === 0)?_c('small',[_vm._v(\" \"+_vm._s(_vm.$t(\"nothing_to_show\"))+\" \")]):[_c('ReorderedList',{attrs:{\"field_name\":'modules_list',\"store_type\":'plain_array',\"items\":_vm.layer_modules_list,\"active_item_path\":_vm.opened_pin_path,\"path\":_vm.layer.$path,\"can_edit\":_vm.can_edit},scopedSlots:_vm._u([{key:\"default\",fn:function(slotProps){return [_c('MapModule',{key:slotProps.item.$path,attrs:{\"publication\":_vm.publication,\"layer\":_vm.layer,\"mapmodule\":slotProps.item,\"can_edit\":_vm.can_edit},on:{\"repickLocation\":function($event){return _vm.$emit('repickLocation', slotProps.item.$path)},\"open\":function($event){return _vm.$emit('openPin', slotProps.item.$path)}}})]}}],null,false,2605535859)})]],2),(_vm.can_edit)?_c('div',{staticClass:\"_bottomBar\"},[_c('ModuleCreator',{attrs:{\"publication_path\":_vm.publication.$path,\"is_collapsed\":false,\"context\":'cartography',\"show_labels\":true,\"types_available\":['medias']},on:{\"addModules\":_vm.addModules}})],1):_vm._e(),_c('hr'),_c('RemoveMenu',{attrs:{\"remove_text\":_vm.$t('remove_layer')},on:{\"remove\":_vm.removeLayer}})],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_mapModule\"},[_c('div',{staticClass:\"_topRow\",on:{\"click\":_vm.openPin}},[(_vm.firstMedia(_vm.mapmodule))?_c('MediaContent',{staticClass:\"_preview\",attrs:{\"file\":_vm.firstMedia(_vm.mapmodule),\"resolution\":220,\"context\":'preview'}}):_vm._e()],1),(!_vm.has_coordinates)?_c('sl-alert',{attrs:{\"type\":\"warning\",\"open\":\"\"}},[_c('sl-icon',{attrs:{\"slot\":\"icon\",\"name\":\"exclamation-triangle\"},slot:\"icon\"}),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.$t('no_coordinates'))}})],1):_vm._e(),_c('DetailsPane',{attrs:{\"header\":_vm.$t('position_on_map'),\"icon\":'map'}},[_c('div',{staticClass:\"_text\"},[(_vm.has_coordinates)?[_vm._v(\" \"+_vm._s(_vm.mapmodule.location.latitude)+\" / \"+_vm._s(_vm.mapmodule.location.longitude)+\" \")]:[_vm._v(\" \"+_vm._s(_vm.$t(\"no_coordinates\"))+\" \")]],2),(_vm.can_edit)?_c('button',{staticClass:\"u-button u-button_red u-button_icon\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.$emit('repickLocation')}}},[_c('b-icon',{attrs:{\"icon\":\"pin-map-fill\"}}),(!_vm.has_coordinates)?[_vm._v(\" \"+_vm._s(_vm.$t(\"place_on_map\"))+\" \")]:[_vm._v(\" \"+_vm._s(_vm.$t(\"change_location\"))+\" \")]],2):_vm._e(),_c('RemoveMenu',{attrs:{\"remove_text\":_vm.$t('remove_pin'),\"show_button_text\":true},on:{\"remove\":_vm.removeModule}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"_mapModule\">\n    <!-- <label>\n      <b>\n        {{ index + 1 }}\n      </b>\n    </label> -->\n    <div class=\"_topRow\" @click=\"openPin\">\n      <MediaContent\n        class=\"_preview\"\n        v-if=\"firstMedia(mapmodule)\"\n        :file=\"firstMedia(mapmodule)\"\n        :resolution=\"220\"\n        :context=\"'preview'\"\n      />\n    </div>\n\n    <sl-alert v-if=\"!has_coordinates\" type=\"warning\" open>\n      <sl-icon slot=\"icon\" name=\"exclamation-triangle\" />\n      <span v-html=\"$t('no_coordinates')\" />\n    </sl-alert>\n\n    <DetailsPane :header=\"$t('position_on_map')\" :icon=\"'map'\">\n      <div class=\"_text\">\n        <template v-if=\"has_coordinates\">\n          {{ mapmodule.location.latitude }} /\n          {{ mapmodule.location.longitude }}\n        </template>\n        <template v-else>\n          {{ $t(\"no_coordinates\") }}\n        </template>\n      </div>\n\n      <button\n        v-if=\"can_edit\"\n        type=\"button\"\n        class=\"u-button u-button_red u-button_icon\"\n        @click.stop=\"$emit('repickLocation')\"\n      >\n        <b-icon icon=\"pin-map-fill\" />\n        <template v-if=\"!has_coordinates\">\n          {{ $t(\"place_on_map\") }}\n        </template>\n        <template v-else>\n          {{ $t(\"change_location\") }}\n        </template>\n      </button>\n\n      <RemoveMenu\n        :remove_text=\"$t('remove_pin')\"\n        :show_button_text=\"true\"\n        @remove=\"removeModule\"\n      />\n    </DetailsPane>\n\n    <!-- </DetailsPane> -->\n    <!-- <MediaContent\n      class=\"_preview\"\n      v-if=\"first_media\"\n      :file=\"first_media\"\n      :resolution=\"50\"\n      :context=\"'preview'\"\n    /> -->\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    publication: Object,\n    layer: Object,\n    mapmodule: Object,\n    can_edit: Boolean,\n  },\n  components: {},\n  data() {\n    return {};\n  },\n  i18n: {\n    messages: {\n      fr: {\n        no_coordinates: \"Aucunes coordonnées disponibles\",\n        position_on_map: \"Position sur la carte\",\n        place_on_map: \"Positionner sur la carte\",\n        change_location: \"Changer la position\",\n        remove_pin: \"Supprimer cette épingle\",\n      },\n    },\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    has_coordinates() {\n      return (\n        this.mapmodule.location &&\n        this.mapmodule.location.latitude &&\n        this.mapmodule.location.longitude\n      );\n    },\n    first_media() {\n      try {\n        const source_media = this.mapmodule.source_medias[0];\n        const publication_path = this.getParent(this.mapmodule.$path);\n        return this.getSourceMedia({\n          source_media,\n          folder_path: publication_path,\n        });\n      } catch (err) {\n        return false;\n      }\n    },\n  },\n  methods: {\n    openPin() {\n      if (\n        !this.mapmodule.location?.latitude ||\n        !this.mapmodule.location?.longitude\n      ) {\n        this.$alertify\n          .closeLogOnClick(true)\n          .delay(4000)\n          .error(this.$t(\"no_coordinates\"));\n      }\n      this.$emit(\"open\");\n    },\n    async removeModule() {\n      await this.removeModule2({\n        publication: this.publication,\n        section: this.layer,\n        path: this.mapmodule.$path,\n      });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._mapModule {\n  // background: var(--c-gris);\n  // border-radius: 2px;\n  padding: 0;\n  // margin-left: var(--spacing);\n  // margin-bottom: var(--spacing);\n  margin-right: 0;\n  border-bottom: 2px solid var(--c-gris);\n\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background: transparent;\n  }\n}\n\n._text {\n  margin: calc(var(--spacing) / 4) 0;\n}\n\n._topRow {\n  display: flex;\n  align-items: center;\n  gap: calc(var(--spacing) / 2);\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapModule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapModule.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapModule.vue?vue&type=template&id=e37bfba4&scoped=true&\"\nimport script from \"./MapModule.vue?vue&type=script&lang=js&\"\nexport * from \"./MapModule.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapModule.vue?vue&type=style&index=0&id=e37bfba4&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e37bfba4\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"_openedLayer\">\n    <div class=\"_closeLayerBtn\">\n      <sl-button variant=\"default\" size=\"medium\" circle @click=\"$emit('close')\">\n        <sl-icon name=\"x-lg\" :label=\"$t('close')\"></sl-icon>\n      </sl-button>\n    </div>\n\n    <div class=\"_openedLayer--content\" v-if=\"layer\">\n      <div class=\"_title\">\n        <span\n          v-if=\"!can_edit\"\n          class=\"_colorInd\"\n          :style=\"\n            'background-color: ' + (layer.section_color || default_layer_color)\n          \"\n        />\n        <TitleField\n          :field_name=\"'section_title'\"\n          :label=\"can_edit ? $t('layer_title') : ''\"\n          :content=\"layer.section_title || $t('untitled')\"\n          :path=\"layer.$path\"\n          :maxlength=\"120\"\n          :tag=\"'h3'\"\n          :can_edit=\"can_edit\"\n        />\n        <!-- ({{ layer_modules_list.length }}) -->\n      </div>\n\n      <div class=\"u-spacingBottom _color\" v-if=\"can_edit\">\n        <ColorInput\n          :label=\"$t('pins_color')\"\n          :can_toggle=\"false\"\n          :default_value=\"default_layer_color\"\n          :value=\"layer.section_color\"\n          @save=\"updateOpenedLayer({ field: 'section_color', value: $event })\"\n        />\n      </div>\n      <div class=\"u-spacingBottom\" v-if=\"can_edit\">\n        <ToggleInput\n          :label=\"$t('link_pins')\"\n          :content=\"layer.link_pins\"\n          @update:content=\"\n            updateOpenedLayer({ field: 'link_pins', value: $event })\n          \"\n        />\n      </div>\n\n      <div class=\"\">\n        <DLabel :str=\"$t('pins')\" />\n\n        <small v-if=\"layer_modules_list.length === 0\">\n          {{ $t(\"nothing_to_show\") }}\n        </small>\n        <template v-else>\n          <ReorderedList\n            :field_name=\"'modules_list'\"\n            :store_type=\"'plain_array'\"\n            :items=\"layer_modules_list\"\n            :active_item_path=\"opened_pin_path\"\n            :path=\"layer.$path\"\n            :can_edit=\"can_edit\"\n            v-slot=\"slotProps\"\n          >\n            <MapModule\n              :key=\"slotProps.item.$path\"\n              :publication=\"publication\"\n              :layer=\"layer\"\n              :mapmodule=\"slotProps.item\"\n              :can_edit=\"can_edit\"\n              @repickLocation=\"$emit('repickLocation', slotProps.item.$path)\"\n              @open=\"$emit('openPin', slotProps.item.$path)\"\n            />\n            <!-- <span v-if=\"slotProps.item.section_title\">\n              {{ slotProps.item.section_title }}\n            </span>\n            <span v-else v-html=\"`<i>${$t('untitled')}</i>`\" /> -->\n          </ReorderedList>\n        </template>\n      </div>\n\n      <div v-if=\"can_edit\" class=\"_bottomBar\">\n        <ModuleCreator\n          :publication_path=\"publication.$path\"\n          :is_collapsed=\"false\"\n          :context=\"'cartography'\"\n          :show_labels=\"true\"\n          :types_available=\"['medias']\"\n          @addModules=\"addModules\"\n        />\n      </div>\n\n      <hr />\n\n      <RemoveMenu :remove_text=\"$t('remove_layer')\" @remove=\"removeLayer\" />\n    </div>\n  </div>\n</template>\n<script>\nimport ModuleCreator from \"@/components/publications/modules/ModuleCreator.vue\";\nimport MapModule from \"@/components/publications/cartography/MapModule.vue\";\n\nexport default {\n  props: {\n    layer: Object,\n    publication: Object,\n    opened_pin_path: String,\n    default_layer_color: String,\n    can_edit: Boolean,\n  },\n  components: {\n    ModuleCreator,\n    MapModule,\n  },\n  data() {\n    return {};\n  },\n  i18n: {\n    messages: {\n      fr: {\n        pins_color: \"Couleur des épingles\",\n        link_pins: \"Relier les épingles\",\n        remove_layer: \"Supprimer ce calque et son contenu\",\n      },\n    },\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    layer_modules_list() {\n      return this.getModulesForSection({\n        publication: this.publication,\n        section: this.layer,\n      }).map(({ _module }) => _module);\n    },\n  },\n  methods: {\n    async updateOpenedLayer({ field, value }) {\n      await this.$api.updateMeta({\n        path: this.layer.$path,\n        new_meta: {\n          [field]: value,\n        },\n      });\n    },\n    async removeLayer() {\n      await this.removeSection2({\n        publication: this.publication,\n        group: \"layers_list\",\n        path: this.layer.$path,\n      });\n      this.$emit(\"close\");\n    },\n    async addModules({ meta_filenames }) {\n      await this.insertModuleMetaFilenamesToList2({\n        publication: this.publication,\n        section: this.layer,\n        meta_filenames,\n      });\n      // todo scroll to last meta_filename\n      const meta_filename = meta_filenames.at(-1);\n      const pin_path = this.publication.$path + \"/\" + meta_filename;\n      setTimeout(() => {\n        this.$emit(\"openPin\", pin_path);\n      }, 150);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._openedLayer {\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: auto;\n\n  backdrop-filter: blur(5px);\n  background: rgba(231, 231, 231, 0.7);\n\n  padding: calc(var(--spacing) * 1);\n}\n\n._openedLayer--content {\n  padding: calc(var(--spacing) / 2) calc(var(--spacing) * 1) 0;\n  height: 100%;\n  overflow: auto;\n  background: white;\n\n  ._title {\n    margin-bottom: calc(var(--spacing) * 1);\n    display: flex;\n    flex-flow: row wrap;\n    align-items: baseline;\n    gap: calc(var(--spacing) / 2);\n  }\n}\n._closeLayerBtn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n._bottomBar {\n  position: sticky;\n  z-index: 10;\n  bottom: 0;\n  width: 100%;\n  background: white;\n  padding: calc(var(--spacing) * 2);\n  border-top: 2px solid var(--c-bleumarine);\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayerContent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayerContent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LayerContent.vue?vue&type=template&id=8778e5e8&scoped=true&\"\nimport script from \"./LayerContent.vue?vue&type=script&lang=js&\"\nexport * from \"./LayerContent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LayerContent.vue?vue&type=style&index=0&id=8778e5e8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8778e5e8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"_layersPane\">\n    <DetailsPane\n      ref=\"details\"\n      :header=\"$t('layers')\"\n      :icon=\"'card-list'\"\n      :has_items=\"layers.length > 0 ? layers.length : false\"\n      :is_open_initially=\"true\"\n      :can_be_toggled=\"false\"\n    >\n      <ReorderedList\n        :field_name=\"'layers_list'\"\n        :items=\"layers\"\n        :path=\"publication.$path\"\n        :active_item_path=\"opened_layer_path\"\n        :can_edit=\"can_edit\"\n        @openItem=\"openLayer\"\n        v-slot=\"slotProps\"\n      >\n        <span\n          class=\"_colorInd\"\n          :style=\"\n            'background-color: ' +\n            (slotProps.item.section_color || default_layer_color)\n          \"\n        />\n        <span v-if=\"slotProps.item.section_title\">\n          {{ slotProps.item.section_title }}\n        </span>\n        <span v-else v-html=\"`<i>${$t('untitled')}</i>`\" />\n        <span class=\"u-nut\">\n          {{\n            Array.isArray(slotProps.item.modules_list)\n              ? slotProps.item.modules_list.length\n              : \"\"\n          }}\n        </span>\n      </ReorderedList>\n\n      <template v-if=\"can_edit\">\n        <template v-if=\"layers.length > 0\">\n          <hr />\n        </template>\n        <button\n          type=\"button\"\n          class=\"u-button u-button_bleuvert u-button_small\"\n          v-if=\"can_edit\"\n          @click=\"createLayer\"\n        >\n          {{ $t(\"create_layer\") }}\n        </button>\n      </template>\n    </DetailsPane>\n\n    <LayerContent\n      v-if=\"opened_layer_path\"\n      :layer=\"opened_layer\"\n      :default_layer_color=\"default_layer_color\"\n      :publication=\"publication\"\n      :opened_pin_path=\"opened_pin_path\"\n      :can_edit=\"can_edit\"\n      @repickLocation=\"repickLocation\"\n      @openPin=\"$emit('update:opened_pin_path', $event)\"\n      @close=\"closeLayer\"\n    />\n    <div class=\"_repickNotice\" v-if=\"is_repicking_location_for\">\n      <div class=\"_repickNotice--content\">\n        <div>\n          {{ $t(\"click_on_map_to_repick_location_for_media\") }}\n        </div>\n        <button\n          type=\"button\"\n          class=\"u-buttonLink\"\n          @click=\"is_repicking_location_for = false\"\n        >\n          {{ $t(\"cancel\") }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport LayerContent from \"@/components/publications/cartography/LayerContent.vue\";\n\nexport default {\n  props: {\n    publication: Object,\n    layers: Array,\n    opened_layer_path: String,\n    opened_pin_path: String,\n    can_edit: Boolean,\n  },\n  components: {\n    LayerContent,\n  },\n  provide() {\n    return {\n      $getMetaFilenamesAlreadyPresent: () =>\n        this.meta_filenames_already_present,\n    };\n  },\n  data() {\n    return {\n      is_repicking_location_for: false,\n      default_layer_color: \"#333\",\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        click_on_map_to_repick_location_for_media:\n          \"Cliquez sur la carte pour sélectionner une nouvelle position pour le média\",\n        on_this_layer: \"Sur ce calque\",\n        on_another_layer: \"Autre calque\",\n      },\n    },\n  },\n  created() {},\n  mounted() {\n    this.$eventHub.$on(\"publication.map.click\", this.setRepickLocation);\n  },\n  beforeDestroy() {\n    this.$eventHub.$off(\"publication.map.click\", this.setRepickLocation);\n  },\n  watch: {},\n  computed: {\n    opened_layer() {\n      return this.layers.find((l) => l.$path === this.opened_layer_path);\n    },\n    new_layer_title() {\n      let idx = this.layers.length + 1;\n      let new_layer_title = this.$t(\"layer\") + \" \" + idx;\n      while (this.layers.some((l) => l.section_title === new_layer_title)) {\n        idx++;\n        new_layer_title = this.$t(\"layer\") + \" \" + idx;\n      }\n      return new_layer_title;\n    },\n    meta_filenames_already_present() {\n      const { current, other } = this.getMediasAlreadyPresentInPublication({\n        publication: this.publication,\n        sections: this.layers,\n        opened_section_meta_filename: this.getFilename(this.opened_layer_path),\n      });\n\n      return [\n        {\n          label: this.$t(\"on_this_layer\"),\n          medias: current,\n          color: \"var(--c-orange)\",\n          // todo later ?\n          // color: this.opened_layer.section_color || this.default_layer_color,\n        },\n        {\n          label: this.$t(\"on_another_layer\"),\n          medias: other,\n          color: \"var(--c-bleuvert)\",\n        },\n      ];\n    },\n  },\n  methods: {\n    openLayer(path) {\n      this.$emit(\"update:opened_layer_path\", path);\n    },\n    closeLayer() {\n      this.$emit(\"update:opened_layer_path\", undefined);\n    },\n    async createLayer() {\n      await this.createSection2({\n        publication: this.publication,\n        type: \"layer\",\n        group: \"layers_list\",\n        title: this.new_layer_title,\n      });\n    },\n    updateOrder(items) {\n      const layers_list = items.map((i) => {\n        return {\n          meta_filename: this.getFilename(i.$path),\n        };\n      });\n      // if (JSON.stringify(sections_list) === JSON.stringify(this.sections_list))\n      //   return \"no_update_necessary\";\n      this.$api.updateMeta({\n        path: this.publication.$path,\n        new_meta: {\n          layers_list,\n        },\n      });\n    },\n\n    isActive(path) {\n      return path === this.opened_layer_path;\n    },\n    repickLocation(path) {\n      this.is_repicking_location_for = path;\n    },\n    async setRepickLocation({ longitude, latitude }) {\n      if (!this.is_repicking_location_for) return;\n\n      await this.$api\n        .updateMeta({\n          path: this.is_repicking_location_for,\n          new_meta: {\n            location: {\n              longitude,\n              latitude,\n            },\n          },\n        })\n        .catch((err) => {\n          this.$alertify.delay(4000).error(err);\n          throw err;\n        });\n      this.is_repicking_location_for = false;\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._layersPane {\n  position: relative;\n  width: 320px;\n}\n\n._list {\n  color: black;\n}\n\n._repickNotice {\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  backdrop-filter: blur(5px);\n  background: rgba(231, 231, 231, 0.7);\n\n  padding: calc(var(--spacing) / 2);\n\n  display: flex;\n  flex-flow: column nowrap;\n}\n._repickNotice--content {\n  background: white;\n  padding: calc(var(--spacing) / 2);\n}\n</style>\n<style lang=\"scss\">\n// slickitem\n\n._colorInd {\n  display: inline-block;\n  width: 1em;\n  height: 1em;\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayersPane.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayersPane.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LayersPane.vue?vue&type=template&id=4452beca&scoped=true&\"\nimport script from \"./LayersPane.vue?vue&type=script&lang=js&\"\nexport * from \"./LayersPane.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LayersPane.vue?vue&type=style&index=0&id=4452beca&lang=scss&scoped=true&\"\nimport style1 from \"./LayersPane.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4452beca\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_viewPane\"},[_c('div',{staticClass:\"_views\"},[_c('DLabel',{attrs:{\"str\":_vm.$t('views_list')}}),_c('ReorderedList',{attrs:{\"field_name\":'views_list',\"items\":_vm.views,\"path\":_vm.publication.$path,\"active_item_path\":_vm.opened_view_path,\"can_edit\":_vm.can_edit},on:{\"openItem\":_vm.openView},scopedSlots:_vm._u([{key:\"default\",fn:function(slotProps){return [(slotProps.item.section_title)?_c('span',[_vm._v(\" \"+_vm._s(slotProps.item.section_title)+\" \")]):_c('span',{domProps:{\"innerHTML\":_vm._s((\"<i>\" + (_vm.$t('untitled')) + \"</i>\"))}})]}}])}),(_vm.can_edit)?_c('button',{staticClass:\"u-button u-button_bleuvert u-button_small\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.createView}},[_vm._v(\" \"+_vm._s(_vm.$t(\"create_view\"))+\" \")]):_vm._e()],1),(_vm.opened_view)?_c('ViewContent',{attrs:{\"view\":_vm.opened_view,\"publication\":_vm.publication,\"can_edit\":_vm.can_edit},on:{\"close\":_vm.closeView}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_viewContent\"},[_c('div',{staticClass:\"_closeLayerBtn\"},[_c('sl-button',{attrs:{\"variant\":\"default\",\"size\":\"medium\",\"circle\":\"\"},on:{\"click\":function($event){return _vm.$emit('close')}}},[_c('sl-icon',{attrs:{\"name\":\"x-lg\",\"label\":_vm.$t('close')}})],1)],1),_vm._v(\" View = \"+_vm._s(_vm.view)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"_viewContent\">\n    <div class=\"_closeLayerBtn\">\n      <sl-button variant=\"default\" size=\"medium\" circle @click=\"$emit('close')\">\n        <sl-icon name=\"x-lg\" :label=\"$t('close')\"></sl-icon>\n      </sl-button>\n    </div>\n    View = {{ view }}\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    view: Object,\n    publication: Object,\n    can_edit: Boolean,\n  },\n  components: {},\n  data() {\n    return {};\n  },\n  i18n: {\n    messages: {\n      fr: {},\n    },\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {},\n  methods: {},\n};\n</script>\n<style lang=\"scss\" scoped>\n._viewContent {\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: auto;\n\n  background: white;\n\n  padding: calc(var(--spacing) * 1);\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewContent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewContent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewContent.vue?vue&type=template&id=1660811c&scoped=true&\"\nimport script from \"./ViewContent.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewContent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ViewContent.vue?vue&type=style&index=0&id=1660811c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1660811c\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"_viewPane\">\n    <div class=\"_views\">\n      <DLabel :str=\"$t('views_list')\" />\n\n      <ReorderedList\n        :field_name=\"'views_list'\"\n        :items=\"views\"\n        :path=\"publication.$path\"\n        :active_item_path=\"opened_view_path\"\n        :can_edit=\"can_edit\"\n        @openItem=\"openView\"\n        v-slot=\"slotProps\"\n      >\n        <span v-if=\"slotProps.item.section_title\">\n          {{ slotProps.item.section_title }}\n        </span>\n        <span v-else v-html=\"`<i>${$t('untitled')}</i>`\" />\n      </ReorderedList>\n\n      <button\n        type=\"button\"\n        class=\"u-button u-button_bleuvert u-button_small\"\n        v-if=\"can_edit\"\n        @click=\"createView\"\n      >\n        {{ $t(\"create_view\") }}\n      </button>\n    </div>\n\n    <ViewContent\n      v-if=\"opened_view\"\n      :view=\"opened_view\"\n      :publication=\"publication\"\n      :can_edit=\"can_edit\"\n      @close=\"closeView\"\n    />\n\n    <!-- \n        <CollaborativeEditor2\n          ref=\"textBloc\"\n          :path=\"''\"\n          :content=\"opened_view.text\"\n          :can_edit=\"false\"\n        /> -->\n  </div>\n</template>\n<script>\nimport ViewContent from \"@/components/publications/cartography/ViewContent.vue\";\n\nexport default {\n  props: {\n    publication: Object,\n    opened_view_path: String,\n    views: Array,\n    can_edit: Boolean,\n  },\n  components: {\n    ViewContent,\n  },\n  data() {\n    return {};\n  },\n  i18n: {\n    messages: {\n      fr: {\n        views_list: \"Liste des vues\",\n      },\n    },\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    opened_view() {\n      return this.views.find(\n        (v) => this.getFilename(v.$path) === this.opened_view_path\n      );\n    },\n    new_view_title() {\n      let idx = this.views.length + 1;\n      let new_view_title = this.$t(\"view\") + \" \" + idx;\n      while (this.views.section_title === new_view_title) {\n        idx++;\n        new_view_title = this.$t(\"view\") + \" \" + idx;\n      }\n      return new_view_title;\n    },\n  },\n  methods: {\n    async createView() {\n      await this.createSection2({\n        publication: this.publication,\n        type: \"view\",\n        group: \"views_list\",\n        title: this.new_view_title,\n      });\n    },\n    openView(path) {\n      this.$emit(\"toggleView\", this.getFilename(path));\n    },\n    closeView() {\n      this.$emit(\"toggleView\", false);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._viewPane {\n  position: relative;\n\n  height: 100%;\n  width: 420px;\n\n  padding: calc(var(--spacing) / 2);\n\n  background: var(--panel-color);\n  border: var(--panel-borders);\n  box-shadow: var(--panel-shadows);\n  text-align: left;\n}\n._viewPreview {\n  background: var(--c-gris_clair);\n  padding: calc(var(--spacing) / 2);\n  margin-bottom: calc(var(--spacing) / 2);\n\n  display: flex;\n  align-items: center;\n  gap: calc(var(--spacing) / 2);\n\n  &:hover {\n    background: var(--c-gris_fonce);\n  }\n}\n._openedView {\n  position: absolute;\n  top: calc(var(--spacing) / 4);\n  left: calc(var(--spacing) / 4);\n  width: calc(100% - calc(var(--spacing) / 2));\n  height: 100%;\n  overflow: auto;\n  background: white;\n  padding: calc(var(--spacing) / 2);\n}\n\n._closeBtn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewPane.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewPane.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewPane.vue?vue&type=template&id=219a07dc&scoped=true&\"\nimport script from \"./ViewPane.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewPane.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ViewPane.vue?vue&type=style&index=0&id=219a07dc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"219a07dc\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"_mapView\">\n    <LayersPane\n      :publication=\"publication\"\n      :layers=\"layers\"\n      :opened_layer_path.sync=\"opened_layer_path\"\n      :opened_pin_path.sync=\"opened_pin_path\"\n      :can_edit=\"can_edit\"\n    />\n    <DisplayOnMap\n      class=\"_mapContainer\"\n      :start_coords=\"start_coords\"\n      :start_zoom=\"start_zoom\"\n      :map_baselayer=\"publication.map_baselayer\"\n      :pins=\"pins\"\n      :lines=\"lines\"\n      :is_small=\"false\"\n      :opened_pin_path.sync=\"opened_pin_path\"\n      :can_add_media_to_point=\"!!opened_layer_path\"\n      @newPositionClicked=\"newPositionClicked\"\n    >\n      <div class=\"\" slot=\"popup_message\" v-if=\"can_edit\">\n        <div v-if=\"!opened_layer_path\">\n          {{ $t(\"to_add_media_here_open_matching_layer\") }}\n        </div>\n        <div v-else>\n          <!-- <div class=\"\">\n            {{ $t(\"add_media\") }}\n          </div> -->\n          <ModuleCreator\n            :publication_path=\"publication.$path\"\n            :is_collapsed=\"false\"\n            :context=\"'cartography'\"\n            :select_mode=\"'single'\"\n            :show_labels=\"true\"\n            :types_available=\"['medias']\"\n            :post_addtl_meta=\"new_module_meta\"\n            @addModules=\"addModules\"\n          />\n        </div>\n      </div>\n    </DisplayOnMap>\n    <ViewPane\n      :publication=\"publication\"\n      :views=\"views\"\n      :opened_view_path=\"opened_view_path\"\n      :can_edit=\"can_edit\"\n      @toggleView=\"$emit('toggleView', $event)\"\n    />\n  </div>\n</template>\n<script>\nimport LayersPane from \"@/components/publications/cartography/LayersPane.vue\";\nimport DisplayOnMap from \"@/adc-core/fields/DisplayOnMap.vue\";\nimport ViewPane from \"@/components/publications/cartography/ViewPane.vue\";\nimport ModuleCreator from \"@/components/publications/modules/ModuleCreator.vue\";\n\nexport default {\n  props: {\n    publication: Object,\n    opened_view_path: String,\n    can_edit: Boolean,\n  },\n  components: {\n    DisplayOnMap,\n    LayersPane,\n    ViewPane,\n    ModuleCreator,\n  },\n  data() {\n    return {\n      latest_click: {\n        latitude: undefined,\n        longitude: undefined,\n      },\n      opened_layer_path: undefined,\n      opened_pin_path: undefined,\n    };\n  },\n  i18n: {\n    messages: {\n      fr: {\n        views_list: \"Liste des vues\",\n        to_add_media_here_open_matching_layer:\n          \"Pour ajouter un média à cette position, créez ou ouvrez un calque dans le panneau correspondant.\",\n      },\n    },\n  },\n\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {\n    opened_pin_path() {\n      // open corresponding layer when clicking on pin\n      // if (this.opened_pin_path) {\n      //   const layer = this.layers.find((l) =>\n      //     l.modules_list?.includes(this.getFilename(this.opened_pin_path))\n      //   );\n      //   if (layer) return (this.opened_layer_path = layer.$path);\n      // }\n      // return (this.opened_layer_path = undefined);\n    },\n  },\n  computed: {\n    layers() {\n      return this.getSectionsWithProps({\n        publication: this.publication,\n        group: \"layers_list\",\n      });\n    },\n    views() {\n      return this.getSectionsWithProps({\n        publication: this.publication,\n        group: \"views_list\",\n      });\n    },\n    start_coords() {\n      return this.publication.map_initial_location || false;\n    },\n    start_zoom() {\n      return this.publication.map_initial_zoom || 10;\n    },\n\n    opened_view() {\n      if (this.opened_view_id === false) return false;\n      return this.views_list[this.opened_view_id];\n    },\n    pins() {\n      return this.layers.reduce((acc, l) => {\n        if (!Array.isArray(l.modules_list)) return acc;\n        l.modules_list.map((meta_filename, index) => {\n          const _module = this.findModuleFromMetaFilename({\n            files: this.publication.$files,\n            meta_filename,\n          });\n          if (\n            _module &&\n            _module.location?.longitude &&\n            _module.location?.latitude\n          ) {\n            acc.push({\n              longitude: _module.location.longitude,\n              latitude: _module.location.latitude,\n              index: index,\n              label: this.$t(\"media\") + \" \" + (index + 1),\n              color: l.section_color || `#333`,\n              path: _module.$path,\n              belongs_to_layer: l.$path,\n              link_pins: l.link_pins || false,\n              file: this.firstMedia(_module),\n            });\n          }\n        });\n        return acc;\n      }, []);\n    },\n    lines() {\n      if (this.pins.length === 0) return false;\n      return this.pins.reduce((acc, pin) => {\n        if (pin.link_pins) {\n          const layer = pin.belongs_to_layer;\n          if (!Object.prototype.hasOwnProperty.call(acc, layer))\n            acc[layer] = {\n              color: pin.color,\n              coordinates: [],\n            };\n          acc[layer].coordinates.push([pin.longitude, pin.latitude]);\n        }\n        return acc;\n      }, {});\n    },\n    new_module_meta() {\n      return {\n        // todo return location\n        location: {\n          longitude: this.latest_click.longitude,\n          latitude: this.latest_click.latitude,\n        },\n      };\n    },\n  },\n  methods: {\n    newPositionClicked({ longitude, latitude }) {\n      this.latest_click.longitude = longitude;\n      this.latest_click.latitude = latitude;\n    },\n    openView(index) {\n      this.opened_view_id = index;\n      this.$eventHub.$emit(\"publication.map.navigateTo\", {\n        center: this.opened_view.map_center,\n        zoom: this.opened_view.map_zoom,\n      });\n    },\n    closeView() {\n      this.opened_view_id = false;\n      this.$eventHub.$emit(\"publication.map.navigateTo\", {\n        zoom: this.start_zoom,\n      });\n    },\n    async addModules({ meta_filenames }) {\n      const opened_layer = this.layers.find(\n        (l) => l.$path === this.opened_layer_path\n      );\n      await this.insertModuleMetaFilenamesToList2({\n        publication: this.publication,\n        section: opened_layer,\n        meta_filenames,\n      });\n\n      const meta_filename = meta_filenames.at(-1);\n      const pin_path = this.publication.$path + \"/\" + meta_filename;\n      setTimeout(() => {\n        this.opened_pin_path = pin_path;\n      }, 150);\n\n      // todo scroll to last meta_filename\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._mapView {\n  width: 100%;\n  height: calc(100vh - 95px);\n\n  background: var(--c-gris);\n  border-radius: 4px;\n  overflow: hidden;\n\n  display: flex;\n  flex-flow: row wrap;\n}\n._mapContainer {\n  height: 100%;\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapView.vue?vue&type=template&id=6421cfb2&scoped=true&\"\nimport script from \"./MapView.vue?vue&type=script&lang=js&\"\nexport * from \"./MapView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapView.vue?vue&type=style&index=0&id=6421cfb2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6421cfb2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"_moduleCreator\"},[(_vm.show_module_selector || !_vm.is_collapsed)?_c('div',{staticClass:\"_typePicker\"},[(_vm.types_available.includes('text'))?_c('button',{staticClass:\"u-button u-button_small u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.createText}},[(_vm.show_labels)?[_vm._v(_vm._s(_vm.$t(\"add_text\")))]:_vm._e(),_c('sl-icon',{staticStyle:{\"font-size\":\"var(--icon-size)\"},attrs:{\"name\":\"fonts\",\"label\":_vm.$t('add_text')}})],2):_vm._e(),(_vm.types_available.includes('medias'))?_c('button',{staticClass:\"u-button u-button_small u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.show_media_picker = true}}},[(_vm.show_labels)?[_vm._v(_vm._s(_vm.$t(\"add_medias\")))]:_vm._e(),_c('sl-icon',{staticStyle:{\"font-size\":\"var(--icon-size)\"},attrs:{\"name\":\"image\",\"label\":_vm.$t('add_medias')}})],2):_vm._e(),(_vm.show_media_picker)?_c('MediaPicker',{attrs:{\"publication_path\":_vm.publication_path,\"select_mode\":_vm.select_mode},on:{\"addMedias\":_vm.createMosaic,\"close\":function($event){_vm.show_media_picker = false}}}):_vm._e(),(_vm.types_available.includes('files'))?_c('button',{staticClass:\"u-button u-button_small u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.show_file_picker = true}}},[(_vm.show_labels)?[_vm._v(_vm._s(_vm.$t(\"add_files\")))]:_vm._e(),_c('sl-icon',{staticStyle:{\"font-size\":\"var(--icon-size)\"},attrs:{\"name\":\"file-earmark-binary-fill\",\"label\":_vm.$t('add_files')}})],2):_vm._e(),(_vm.show_file_picker)?_c('MediaPicker',{attrs:{\"publication_path\":_vm.publication_path,\"select_mode\":_vm.select_mode},on:{\"addMedias\":_vm.createFiles,\"close\":function($event){_vm.show_file_picker = false}}}):_vm._e(),(_vm.types_available.includes('link'))?_c('button',{staticClass:\"u-button u-button_small u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.show_link_picker = true}}},[(_vm.show_labels)?[_vm._v(_vm._s(_vm.$t(\"add_link\")))]:_vm._e(),_c('sl-icon',{staticStyle:{\"font-size\":\"var(--icon-size)\"},attrs:{\"name\":\"link\",\"label\":_vm.$t('add_link')}})],2):_vm._e(),(_vm.show_link_picker)?_c('LinkPicker',{on:{\"embed\":_vm.createEmbed,\"close\":function($event){_vm.show_link_picker = false}}}):_vm._e(),(_vm.types_available.includes('shapes'))?_vm._l((_vm.shapes),function(shape){return _c('button',{key:shape.type,staticClass:\"u-button u-button_small u-button_bleumarine\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.createCustomModule({\n            module_type: shape.type,\n            addtl_meta: shape.addtl_meta,\n          })}}},[(_vm.show_labels)?[_vm._v(_vm._s(_vm.$t(shape.type)))]:_vm._e(),_c('sl-icon',{staticStyle:{\"font-size\":\"var(--icon-size)\"},attrs:{\"name\":shape.icon,\"label\":_vm.$t(shape.type)}})],2)}):_vm._e()],2):_vm._e(),(_vm.is_collapsed)?_c('button',{staticClass:\"u-button u-button_transparent u-addBtn\",style:(_vm.show_module_selector ? 'transform: rotate(45deg);' : ''),attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.show_module_selector = !_vm.show_module_selector}}},[_c('sl-icon',{attrs:{\"name\":\"plus-circle\"}})],1):_vm._e(),_c('DropZone',{on:{\"mediaDropped\":_vm.createMosaic}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('BaseModal2',{on:{\"close\":function($event){return _vm.$emit('close')}}},[_c('div',{staticClass:\"_linkPicker\"},[_c('div',{staticClass:\"_urlBox\"},[_c('DLabel',{attrs:{\"str\":_vm.$t('input_url'),\"instructions\":_vm.$t('input_url_instr')}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.full_url),expression:\"full_url\"}],attrs:{\"type\":\"url\",\"placeholder\":\"https://\"},domProps:{\"value\":(_vm.full_url)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.full_url=$event.target.value}}})],1),_c('div',{staticClass:\"u-instructions\"},[_vm._v(\" PeerTube, YouTube, Vimeo, etc. \"+_vm._s(_vm.$t(\"for_example\"))+\"  \"),_vm._l(([\n          'https://peertube.fr/w/wB6M6CHdfpWXpozVnqjbde',\n          'https://www.youtube.com/watch?v=Bn6zdyCAwJs',\n          'https://vimeo.com/447785086',\n          'https://observablehq.com/embed/@fil/bertin1953-glsl?cells=canvas' ]),function(url,index){return _c('button',{key:index,staticClass:\"u-buttonLink\",attrs:{\"type\":\"button\"},domProps:{\"innerHTML\":_vm._s(url)},on:{\"click\":function($event){_vm.full_url = url}}})})],2),_c('br'),_c('div',{key:_vm.full_url},[(_vm.url_to_site.type === 'any')?[_c('iframe',{staticClass:\"_siteIframe\",attrs:{\"src\":_vm.url_to_site.src,\"frameborder\":\"0\"}})]:_c('vue-plyr',[_c('div',{staticClass:\"plyr__video-embed\"},[_c('iframe',{attrs:{\"src\":_vm.url_to_site.src,\"allowfullscreen\":\"\",\"allowtransparency\":\"\",\"allow\":\"autoplay; fullscreen\",\"sandbox\":\"allow-same-origin allow-scripts allow-popups\",\"frameborder\":\"0\"}})])])],2),_c('br'),(_vm.full_url)?_c('div',{staticClass:\"_selectBtn\"},[_c('button',{staticClass:\"u-buttonLink\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('close')}}},[_vm._v(\" \"+_vm._s(_vm.$t(\"cancel\"))+\" \")]),_c('button',{staticClass:\"u-button u-button_bleuvert\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.$emit('embed', _vm.full_url)}}},[_vm._v(\" \"+_vm._s(_vm.$t(\"embed\"))+\" \")])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <BaseModal2 @close=\"$emit('close')\">\n    <div class=\"_linkPicker\">\n      <div class=\"_urlBox\">\n        <DLabel :str=\"$t('input_url')\" :instructions=\"$t('input_url_instr')\" />\n        <input type=\"url\" v-model=\"full_url\" placeholder=\"https://\" />\n      </div>\n\n      <div class=\"u-instructions\">\n        PeerTube, YouTube, Vimeo, etc.\n        {{ $t(\"for_example\") }}&nbsp;\n        <button\n          v-for=\"(url, index) in [\n            'https://peertube.fr/w/wB6M6CHdfpWXpozVnqjbde',\n            'https://www.youtube.com/watch?v=Bn6zdyCAwJs',\n            'https://vimeo.com/447785086',\n            'https://observablehq.com/embed/@fil/bertin1953-glsl?cells=canvas',\n          ]\"\n          type=\"button\"\n          class=\"u-buttonLink\"\n          @click=\"full_url = url\"\n          :key=\"index\"\n          v-html=\"url\"\n        />\n      </div>\n\n      <br />\n      <div class=\"\" :key=\"full_url\">\n        <template v-if=\"url_to_site.type === 'any'\">\n          <iframe class=\"_siteIframe\" :src=\"url_to_site.src\" frameborder=\"0\" />\n        </template>\n        <vue-plyr v-else>\n          <div class=\"plyr__video-embed\">\n            <iframe\n              :src=\"url_to_site.src\"\n              allowfullscreen\n              allowtransparency\n              allow=\"autoplay; fullscreen\"\n              sandbox=\"allow-same-origin allow-scripts allow-popups\"\n              frameborder=\"0\"\n            />\n          </div>\n        </vue-plyr>\n      </div>\n\n      <br />\n\n      <div class=\"_selectBtn\" v-if=\"full_url\">\n        <button type=\"button\" class=\"u-buttonLink\" @click=\"$emit('close')\">\n          {{ $t(\"cancel\") }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"u-button u-button_bleuvert\"\n          @click=\"$emit('embed', full_url)\"\n        >\n          {{ $t(\"embed\") }}\n        </button>\n      </div>\n    </div>\n  </BaseModal2>\n</template>\n<script>\nexport default {\n  props: {},\n  components: {},\n  data() {\n    return {\n      full_url: \"https://\",\n    };\n  },\n  async created() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {\n    url_to_site() {\n      if (!this.full_url) return false;\n      return this.transformURL({ url: this.full_url, autoplay: false });\n    },\n  },\n  methods: {},\n};\n</script>\n<style lang=\"scss\" scoped>\n._linkPicker {\n  width: 100%;\n  // background: var(--c-gris_clair);\n  margin: 0 auto;\n}\n._urlBox {\n  // margin-bottom: calc(var(--spacing) * 1);\n}\n\n._addMediaBtn {\n  text-align: center;\n  padding: calc(var(--spacing) * 1);\n}\n\n._selectBtn {\n  display: flex;\n  place-items: center;\n  justify-content: center;\n  width: 100%;\n  gap: calc(var(--spacing) / 1);\n\n  background: white;\n}\n\niframe {\n  width: 100%;\n  aspect-ratio: 4/3;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LinkPicker.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LinkPicker.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LinkPicker.vue?vue&type=template&id=a5930508&scoped=true&\"\nimport script from \"./LinkPicker.vue?vue&type=script&lang=js&\"\nexport * from \"./LinkPicker.vue?vue&type=script&lang=js&\"\nimport style0 from \"./LinkPicker.vue?vue&type=style&index=0&id=a5930508&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a5930508\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"_moduleCreator\">\n    <div v-if=\"show_module_selector || !is_collapsed\" class=\"_typePicker\">\n      <button\n        type=\"button\"\n        class=\"u-button u-button_small u-button_bleumarine\"\n        v-if=\"types_available.includes('text')\"\n        @click=\"createText\"\n      >\n        <template v-if=\"show_labels\">{{ $t(\"add_text\") }}</template>\n        <sl-icon\n          name=\"fonts\"\n          style=\"font-size: var(--icon-size)\"\n          :label=\"$t('add_text')\"\n        />\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"u-button u-button_small u-button_bleumarine\"\n        v-if=\"types_available.includes('medias')\"\n        @click=\"show_media_picker = true\"\n      >\n        <template v-if=\"show_labels\">{{ $t(\"add_medias\") }}</template>\n        <sl-icon\n          name=\"image\"\n          style=\"font-size: var(--icon-size)\"\n          :label=\"$t('add_medias')\"\n        />\n      </button>\n      <MediaPicker\n        v-if=\"show_media_picker\"\n        :publication_path=\"publication_path\"\n        :select_mode=\"select_mode\"\n        @addMedias=\"createMosaic\"\n        @close=\"show_media_picker = false\"\n      />\n\n      <button\n        type=\"button\"\n        class=\"u-button u-button_small u-button_bleumarine\"\n        v-if=\"types_available.includes('files')\"\n        @click=\"show_file_picker = true\"\n      >\n        <template v-if=\"show_labels\">{{ $t(\"add_files\") }}</template>\n        <sl-icon\n          name=\"file-earmark-binary-fill\"\n          style=\"font-size: var(--icon-size)\"\n          :label=\"$t('add_files')\"\n        />\n      </button>\n      <MediaPicker\n        v-if=\"show_file_picker\"\n        :publication_path=\"publication_path\"\n        :select_mode=\"select_mode\"\n        @addMedias=\"createFiles\"\n        @close=\"show_file_picker = false\"\n      />\n\n      <button\n        type=\"button\"\n        class=\"u-button u-button_small u-button_bleumarine\"\n        v-if=\"types_available.includes('link')\"\n        @click=\"show_link_picker = true\"\n      >\n        <template v-if=\"show_labels\">{{ $t(\"add_link\") }}</template>\n        <sl-icon\n          name=\"link\"\n          style=\"font-size: var(--icon-size)\"\n          :label=\"$t('add_link')\"\n        />\n      </button>\n      <LinkPicker\n        v-if=\"show_link_picker\"\n        @embed=\"createEmbed\"\n        @close=\"show_link_picker = false\"\n      />\n\n      <template v-if=\"types_available.includes('shapes')\">\n        <button\n          type=\"button\"\n          v-for=\"shape in shapes\"\n          :key=\"shape.type\"\n          class=\"u-button u-button_small u-button_bleumarine\"\n          @click=\"\n            createCustomModule({\n              module_type: shape.type,\n              addtl_meta: shape.addtl_meta,\n            })\n          \"\n        >\n          <template v-if=\"show_labels\">{{ $t(shape.type) }}</template>\n          <sl-icon\n            :name=\"shape.icon\"\n            style=\"font-size: var(--icon-size)\"\n            :label=\"$t(shape.type)\"\n          />\n          <!-- {{ $t(\"add_medias\") }} -->\n        </button>\n      </template>\n    </div>\n\n    <button\n      type=\"button\"\n      class=\"u-button u-button_transparent u-addBtn\"\n      v-if=\"is_collapsed\"\n      :style=\"show_module_selector ? 'transform: rotate(45deg);' : ''\"\n      @click=\"show_module_selector = !show_module_selector\"\n    >\n      <sl-icon name=\"plus-circle\" />\n    </button>\n\n    <DropZone @mediaDropped=\"createMosaic\" />\n  </div>\n</template>\n<script>\nimport MediaPicker from \"@/components/publications/MediaPicker.vue\";\nimport LinkPicker from \"@/adc-core/modals/LinkPicker.vue\";\n\nexport default {\n  props: {\n    publication_path: String,\n    pre_addtl_meta: Object,\n    post_addtl_meta: Object,\n    select_mode: String,\n    show_labels: {\n      type: Boolean,\n      default: false,\n    },\n    context: String,\n    types_available: {\n      type: Array,\n      default: () => [\"text\", \"medias\", \"files\", \"link\", \"shapes\"],\n    },\n    is_collapsed: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  components: {\n    MediaPicker,\n    LinkPicker,\n  },\n  data() {\n    return {\n      show_module_selector: false,\n      show_media_picker: false,\n      show_file_picker: false,\n      show_link_picker: false,\n\n      shapes: [\n        {\n          type: \"ellipsis\",\n          icon: \"circle-fill\",\n          addtl_meta: {\n            background_color: \"#1d327f\",\n          },\n        },\n        {\n          type: \"rectangle\",\n          icon: \"square-fill\",\n          addtl_meta: {\n            background_color: \"#ffbe32\",\n          },\n        },\n        {\n          type: \"line\",\n          icon: \"dash-lg\",\n          addtl_meta: {\n            outline_width: 1,\n            outline_color: \"#000000\",\n          },\n        },\n        {\n          type: \"arrow\",\n          icon: \"arrow-right-square\",\n          addtl_meta: {\n            outline_width: 1,\n            outline_color: \"#000000\",\n          },\n        },\n      ],\n\n      // options: [\n      //   {\n      //     key: \"mosaic\",\n      //     label: \"module.label.mosaic\",\n      //     instructions: \"module.instructions.mosaic\",\n      //   },\n      //   {\n      //     key: \"carousel\",\n      //     label: \"module.label.carousel\",\n      //     instructions: \"module.instructions.carousel\",\n      //   },\n      // ],\n\n      is_saving: false,\n    };\n  },\n  created() {},\n  mounted() {},\n  beforeDestroy() {},\n  watch: {},\n  computed: {},\n  methods: {\n    async createMosaic({ meta_filename, path_to_source_media_metas }) {\n      // if meta_filename, file is stored in publication\n      // if path_to_source_media, we get metafilename\n      let source_medias = [];\n\n      // each meta gets it own mosaic\n      if (meta_filename) {\n        source_medias.push({\n          meta_filename,\n        });\n      } else if (path_to_source_media_metas) {\n        path_to_source_media_metas.map((path_to_source_media_meta) => {\n          const meta_filename_in_project = this.getFilename(\n            path_to_source_media_meta\n          );\n          source_medias.push({\n            meta_filename_in_project,\n          });\n        });\n      }\n      if (this.context === \"page_by_page\") {\n        source_medias = source_medias.map((sm) => {\n          sm.objectFit = \"contain\";\n          return sm;\n        });\n      }\n\n      if (this.context === \"page_by_page\" || this.context === \"cartography\") {\n        await this.createMultipleModules({\n          module_type: \"mosaic\",\n          source_medias,\n        });\n      } else {\n        await this.createModule({\n          module_type: \"mosaic\",\n          source_medias,\n        });\n      }\n\n      this.show_media_picker = false;\n    },\n    async createEmbed(full_url) {\n      const filename = \"url-\" + +new Date() + \".txt\";\n\n      const text_meta_filename = await this.$api.uploadText({\n        path: this.publication_path,\n        filename,\n        content: full_url,\n        additional_meta: {\n          module_type: this.module_type,\n          $type: \"url\",\n        },\n      });\n      this.createMosaic({ meta_filename: text_meta_filename });\n    },\n    async createFiles({ path_to_source_media_metas }) {\n      let source_medias = [];\n      path_to_source_media_metas.map((path_to_source_media_meta) => {\n        const meta_filename_in_project = this.getFilename(\n          path_to_source_media_meta\n        );\n        source_medias.push({\n          meta_filename_in_project,\n        });\n      });\n\n      await this.createModule({\n        module_type: \"files\",\n        source_medias,\n      });\n\n      this.show_file_picker = false;\n    },\n    async createCustomModule({ module_type, addtl_meta }) {\n      await this.createModule({\n        module_type,\n        addtl_meta,\n      });\n    },\n    async createText() {\n      const filename = \"text-\" + +new Date() + \".txt\";\n      const meta_filename = await this.$api.uploadText({\n        path: this.publication_path,\n        filename,\n        content: \"\",\n        additional_meta: {\n          module_type: this.module_type,\n        },\n      });\n      const source_medias = [{ meta_filename }];\n      await this.createModule({\n        module_type: \"text\",\n        source_medias,\n      });\n    },\n\n    async createModule({ module_type, source_medias = [], addtl_meta = {} }) {\n      const meta_filename = await this.createMetaForModule({\n        module_type,\n        source_medias,\n        addtl_meta,\n      });\n      this.$emit(\"addModules\", { meta_filenames: [meta_filename] });\n      this.show_module_selector = false;\n      return meta_filename;\n    },\n    async createMultipleModules({ module_type, source_medias = [] }) {\n      let meta_filenames = [];\n      for (const source_media of source_medias) {\n        const media = this.getSourceMedia({\n          source_media,\n          folder_path: this.publication_path,\n        });\n\n        let addtl_meta = {};\n        if (this.context === \"page_by_page\")\n          if (media?.$infos?.ratio)\n            addtl_meta.height =\n              this.$root.default_new_module_width * media.$infos.ratio;\n\n        if (this.context === \"cartography\")\n          if (media?.$infos?.gps) addtl_meta.location = media.$infos.gps;\n\n        const meta_filename = await this.createMetaForModule({\n          module_type,\n          source_medias: [source_media],\n          addtl_meta,\n        });\n        meta_filenames.push(meta_filename);\n      }\n\n      this.show_module_selector = false;\n      this.$emit(\"addModules\", { meta_filenames });\n    },\n    async createMetaForModule({ module_type, source_medias, addtl_meta }) {\n      let additional_meta = {\n        module_type,\n        source_medias,\n        requested_slug: \"module\",\n      };\n\n      if (this.pre_addtl_meta)\n        Object.assign(additional_meta, this.pre_addtl_meta);\n      if (addtl_meta) Object.assign(additional_meta, addtl_meta);\n      if (this.post_addtl_meta)\n        Object.assign(additional_meta, this.post_addtl_meta);\n\n      return await this.$api\n        .uploadFile({\n          path: this.publication_path,\n          additional_meta,\n        })\n        .catch((err) => {\n          this.$alertify.delay(4000).error(err);\n          throw err;\n        });\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n._moduleCreator {\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  pointer-events: none;\n  // padding: 0 calc(var(--spacing) * 1);\n\n  color: var(--c-bleuvert);\n  border-radius: 1rem;\n\n  --icon-size: 1.2rem;\n\n  > * {\n    pointer-events: auto;\n  }\n}\n\n._typePicker {\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: flex-start;\n  gap: calc(var(--spacing) / 4);\n\n  > * {\n    // padding: calc(var(--spacing) / 2);\n    // background: var(--c-gris_clair);\n  }\n}\n\n._dropNotice {\n  pointer-events: none;\n}\n\nsl-icon-button::part(base) {\n  font-size: 1.5em;\n  color: var(--c-bleuvert);\n}\n\n._showModuleSelector {\n  // position: absolute;\n  // right: 100%;\n  transition: all 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n}\n</style>\n","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModuleCreator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-37[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModuleCreator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleCreator.vue?vue&type=template&id=b8fc6ff2&scoped=true&\"\nimport script from \"./ModuleCreator.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleCreator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleCreator.vue?vue&type=style&index=0&id=b8fc6ff2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b8fc6ff2\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*!\\n * ol-geocoder - v4.3.1\\n * A geocoder extension compatible with OpenLayers v6.x, v7.x & v8.x\\n * https://github.com/Dominique92/ol-geocoder\\n * Built: 15/09/2023 16:57:43\\n */.ol-touch .ol-control.gcd-gl-control button{font-size:1.14em}.ol-touch .ol-geocoder.gcd-gl-container{font-size:1.1em}.ol-geocoder.gcd-gl-container{box-sizing:border-box;font-size:.9em;left:.5em;position:absolute;top:4.875em}.ol-geocoder.gcd-gl-container *,.ol-geocoder.gcd-gl-container :after,.ol-geocoder.gcd-gl-container :before{box-sizing:inherit}.ol-geocoder .gcd-gl-control{height:2.1875em;overflow:hidden;transition:width .2s,height .2s;width:2.1875em}.ol-geocoder .gcd-gl-expanded{height:2.1875em;width:15.625em}.ol-geocoder .gcd-gl-input{background-color:#fff;border:1px solid #ccc;color:#222;font-family:inherit;font-size:.875em;left:2.5em;padding:5px;position:absolute;top:.25em;width:14.84375em;z-index:99}.ol-geocoder .gcd-gl-input:focus{border:none;box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 5px #4d90fe;outline:none}.ol-geocoder .gcd-gl-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:1.4;outline:0;position:absolute;right:0;top:0;width:1.5625em;z-index:100}.ol-geocoder .gcd-gl-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:1.5em}.ol-geocoder .gcd-gl-btn{cursor:pointer;height:1.5625em;left:.125em;position:absolute;top:.125em;width:1.5625em}.ol-geocoder .gcd-gl-btn:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-gl-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:2em;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:2.1875em;transition:max-height .3s ease-in;white-space:normal;width:16.25em}.ol-geocoder ul.gcd-gl-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-gl-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-gl-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-gl-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-gl-result:empty{display:none}.ol-geocoder.gcd-txt-container{box-sizing:border-box;height:4.375em;left:calc(50% - 12.5em);position:absolute;top:.5em;width:25em}.ol-geocoder.gcd-txt-container *,.ol-geocoder.gcd-txt-container :after,.ol-geocoder.gcd-txt-container :before{box-sizing:inherit}.ol-geocoder .gcd-txt-control{background-color:#fff;border:1px solid #ccc;height:4.375em;overflow:hidden;position:relative;width:100%}.ol-geocoder .gcd-txt-label{display:inline-block;text-align:center;width:100%}.ol-geocoder .gcd-txt-input{background-color:transparent;border:none;font-family:inherit;font-size:.875em;height:100%;left:0;padding:5px 30px 5px 40px;position:absolute;text-indent:6px;top:0;width:100%;z-index:99}.ol-geocoder .gcd-txt-input:focus{box-shadow:inset 0 0 0 1px #4d90fe,inset 0 0 6px #4d90fe;outline:none}.ol-geocoder .gcd-txt-search{background-color:transparent;border:none;cursor:pointer;display:inline-block;height:100%;line-height:100%;outline:0;position:absolute;right:0;top:0;vertical-align:middle;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-search:after{color:#333;content:\\\"\\\\2386\\\";cursor:pointer;display:inline-block;font-size:2em}.ol-geocoder .gcd-txt-glass{display:inline-block;height:100%;left:9px;position:absolute;top:26px;width:2.5em;z-index:100}.ol-geocoder .gcd-txt-glass:after{content:\\\"\\\\1F50D\\\"}.ol-geocoder ul.gcd-txt-result{background-color:#fff;border-radius:4px;border-top:none;border-top-left-radius:0;border-top-right-radius:0;box-shadow:0 1px 7px rgba(0,0,0,.8);left:0;list-style:none;margin:0;max-height:18.75em;overflow-x:hidden;overflow-y:auto;padding:0;position:absolute;top:4.575em;transition:max-height .3s ease-in;white-space:normal;width:25em}.ol-geocoder ul.gcd-txt-result>li{border-bottom:1px solid #eee;line-height:.875rem;overflow:hidden;padding:0;width:100%}.ol-geocoder ul.gcd-txt-result>li>a{display:block;padding:3px 5px;text-decoration:none}.ol-geocoder ul.gcd-txt-result>li>a:hover{background-color:#d4d4d4}.ol-geocoder ul.gcd-txt-result>li:nth-child(odd){background-color:#e0ffe0}.ol-geocoder ul.gcd-txt-result:empty{display:none}.ol-geocoder .gcd-hidden{opacity:0;visibility:hidden}.ol-geocoder .gcd-pseudo-rotate:after{animation:spin .7s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.gcd-address,.gcd-road{color:#333;font-size:.875em;font-weight:500}.gcd-city{font-weight:400}.gcd-city,.gcd-country{color:#333;font-size:.75em}.gcd-country{font-weight:lighter}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".m_displayOnMap[data-v-637ba9a7]{position:relative;width:100%;height:100%;background-color:var(--c-gris);font-size:150%;flex:1 1 320px}.m_displayOnMap.is--small[data-v-637ba9a7]{width:600px;max-width:100%;aspect-ratio:1;border-radius:4px;overflow:hidden}._map[data-v-637ba9a7]{width:100%;height:100%}._map[data-v-637ba9a7]  .ol-geocoder .gcd-gl-btn{height:1.375em;width:1.375em}._map[data-v-637ba9a7]  .gcd-road{font-weight:400;font-style:italic;font-size:var(--sl-font-size-small);color:inherit}._popup[data-v-637ba9a7]{bottom:12px;left:-48px;min-width:280px;font-size:var(--sl-font-size-normal);background:#fff;border:none;border-radius:var(--panel-radius);box-shadow:var(--panel-shadows)}._popup[data-v-637ba9a7],._popup[data-v-637ba9a7]:after,._popup[data-v-637ba9a7]:before{position:absolute;pointer-events:none}._popup[data-v-637ba9a7]:after,._popup[data-v-637ba9a7]:before{top:100%;border:solid transparent;content:\\\" \\\";height:0;width:0}._popup[data-v-637ba9a7]:after{border-top-color:#fff;border-width:10px;left:48px;margin-left:-10px}._popup ._pinContent[data-v-637ba9a7],._popup ._popupClose[data-v-637ba9a7]{pointer-events:auto}._popupClose[data-v-637ba9a7]{position:absolute;z-index:1000;top:calc(var(--spacing)/-2);right:calc(var(--spacing)/-2);padding:calc(var(--spacing)/1)}._pinContent[data-v-637ba9a7]{position:relative;border-radius:var(--panel-radius);overflow:hidden}._popupMessage[data-v-637ba9a7]{padding:calc(var(--spacing)/2) calc(var(--spacing)/1)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._linkPicker[data-v-a5930508]{width:100%;margin:0 auto}._addMediaBtn[data-v-a5930508]{text-align:center;padding:calc(var(--spacing)*1)}._selectBtn[data-v-a5930508]{display:flex;place-items:center;justify-content:center;width:100%;gap:calc(var(--spacing)/1);background:#fff}iframe[data-v-a5930508]{width:100%;aspect-ratio:4/3}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._openedLayer[data-v-8778e5e8]{position:absolute;z-index:1;top:0;left:0;right:0;bottom:0;overflow:auto;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);background:hsla(0,0%,91%,.7);padding:calc(var(--spacing)*1)}._openedLayer--content[data-v-8778e5e8]{padding:calc(var(--spacing)/2) calc(var(--spacing)*1) 0;height:100%;overflow:auto;background:#fff}._openedLayer--content ._title[data-v-8778e5e8]{margin-bottom:calc(var(--spacing)*1);display:flex;flex-flow:row wrap;align-items:baseline;gap:calc(var(--spacing)/2)}._closeLayerBtn[data-v-8778e5e8]{position:absolute;top:0;right:0}._bottomBar[data-v-8778e5e8]{position:sticky;z-index:10;bottom:0;width:100%;background:#fff;padding:calc(var(--spacing)*2);border-top:2px solid var(--c-bleumarine)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._layersPane[data-v-4452beca]{position:relative;width:320px}._list[data-v-4452beca]{color:#000}._repickNotice[data-v-4452beca]{position:absolute;z-index:1;top:0;left:0;right:0;bottom:0;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);background:hsla(0,0%,91%,.7);padding:calc(var(--spacing)/2);display:flex;flex-flow:column nowrap}._repickNotice--content[data-v-4452beca]{background:#fff;padding:calc(var(--spacing)/2)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._colorInd{display:inline-block;width:1em;height:1em}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._mapModule[data-v-e37bfba4]{padding:0;margin-right:0;border-bottom:2px solid var(--c-gris);cursor:pointer}._mapModule[data-v-e37bfba4] :focus-visible,._mapModule[data-v-e37bfba4]:hover{background:transparent}._text[data-v-e37bfba4]{margin:calc(var(--spacing)/4) 0}._topRow[data-v-e37bfba4]{display:flex;align-items:center;gap:calc(var(--spacing)/2)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._mapView[data-v-6421cfb2]{width:100%;height:calc(100vh - 95px);background:var(--c-gris);border-radius:4px;overflow:hidden;display:flex;flex-flow:row wrap}._mapContainer[data-v-6421cfb2]{height:100%}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._viewContent[data-v-1660811c]{position:absolute;z-index:1;top:0;left:0;right:0;bottom:0;overflow:auto;background:#fff;padding:calc(var(--spacing)*1)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._viewPane[data-v-219a07dc]{position:relative;height:100%;width:420px;background:var(--panel-color);border:var(--panel-borders);box-shadow:var(--panel-shadows);text-align:left}._viewPane[data-v-219a07dc],._viewPreview[data-v-219a07dc]{padding:calc(var(--spacing)/2)}._viewPreview[data-v-219a07dc]{background:var(--c-gris_clair);margin-bottom:calc(var(--spacing)/2);display:flex;align-items:center;gap:calc(var(--spacing)/2)}._viewPreview[data-v-219a07dc]:hover{background:var(--c-gris_fonce)}._openedView[data-v-219a07dc]{position:absolute;top:calc(var(--spacing)/4);left:calc(var(--spacing)/4);width:calc(100% - var(--spacing)/2);height:100%;overflow:auto;background:#fff;padding:calc(var(--spacing)/2)}._closeBtn[data-v-219a07dc]{position:absolute;top:0;right:0}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"._moduleCreator[data-v-b8fc6ff2]{position:relative;display:flex;justify-content:center;align-items:center;width:100%;pointer-events:none;color:var(--c-bleuvert);border-radius:1rem;--icon-size:1.2rem}._moduleCreator>*[data-v-b8fc6ff2]{pointer-events:auto}._typePicker[data-v-b8fc6ff2]{display:flex;flex-flow:row wrap;justify-content:flex-start;gap:calc(var(--spacing)/4)}._dropNotice[data-v-b8fc6ff2]{pointer-events:none}sl-icon-button[data-v-b8fc6ff2]::part(base){font-size:1.5em;color:var(--c-bleuvert)}._showModuleSelector[data-v-b8fc6ff2]{transition:all .4s cubic-bezier(.19,1,.22,1)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \":host,:root{--ol-background-color:#fff;--ol-accent-background-color:#f5f5f5;--ol-subtle-background-color:hsla(0,0%,50%,.25);--ol-partial-background-color:hsla(0,0%,100%,.75);--ol-foreground-color:#333;--ol-subtle-foreground-color:#666;--ol-brand-color:#0af}.ol-box{box-sizing:border-box;border-radius:2px;border:1.5px solid var(--ol-background-color);background-color:var(--ol-partial-background-color)}.ol-mouse-position{top:8px;right:8px;position:absolute}.ol-scale-line{background:var(--ol-partial-background-color);border-radius:4px;bottom:8px;left:8px;padding:2px;position:absolute}.ol-scale-line-inner{border:1px solid var(--ol-subtle-foreground-color);border-top:none;color:var(--ol-foreground-color);font-size:10px;text-align:center;margin:1px;will-change:contents,width;transition:all .25s}.ol-scale-bar{position:absolute;bottom:8px;left:8px}.ol-scale-bar-inner{display:flex}.ol-scale-step-marker{width:1px;height:15px;background-color:var(--ol-foreground-color);float:right;z-index:10}.ol-scale-step-text{bottom:-5px;font-size:10px;z-index:11}.ol-scale-step-text,.ol-scale-text{position:absolute;color:var(--ol-foreground-color);text-shadow:-1.5px 0 var(--ol-partial-background-color),0 1.5px var(--ol-partial-background-color),1.5px 0 var(--ol-partial-background-color),0 -1.5px var(--ol-partial-background-color)}.ol-scale-text{font-size:12px;text-align:center;bottom:25px}.ol-scale-singlebar{position:relative;height:10px;z-index:9;box-sizing:border-box;border:1px solid var(--ol-foreground-color)}.ol-scale-singlebar-even{background-color:var(--ol-subtle-foreground-color)}.ol-scale-singlebar-odd{background-color:var(--ol-background-color)}.ol-unsupported{display:none}.ol-unselectable,.ol-viewport{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.ol-viewport canvas{all:unset;overflow:hidden}.ol-viewport{touch-action:none}.ol-selectable{-webkit-touch-callout:default;-webkit-user-select:text;-moz-user-select:text;user-select:text}.ol-grabbing{cursor:grabbing}.ol-grab{cursor:move;cursor:grab}.ol-control{position:absolute;background-color:var(--ol-subtle-background-color);border-radius:4px}.ol-zoom{top:.5em;left:.5em}.ol-rotate{top:.5em;right:.5em;transition:opacity .25s linear,visibility 0s linear}.ol-rotate.ol-hidden{opacity:0;visibility:hidden;transition:opacity .25s linear,visibility 0s linear .25s}.ol-zoom-extent{top:4.643em;left:.5em}.ol-full-screen{right:.5em;top:.5em}.ol-control button{display:block;margin:1px;padding:0;color:var(--ol-subtle-foreground-color);font-weight:700;text-decoration:none;font-size:inherit;text-align:center;height:1.375em;width:1.375em;line-height:.4em;background-color:var(--ol-background-color);border:none;border-radius:2px}.ol-control button::-moz-focus-inner{border:none;padding:0}.ol-zoom-extent button{line-height:1.4em}.ol-compass{display:block;font-weight:400;will-change:transform}.ol-touch .ol-control button{font-size:1.5em}.ol-touch .ol-zoom-extent{top:5.5em}.ol-control button:focus,.ol-control button:hover{text-decoration:none;outline:1px solid var(--ol-subtle-foreground-color);color:var(--ol-foreground-color)}.ol-zoom .ol-zoom-in{border-radius:2px 2px 0 0}.ol-zoom .ol-zoom-out{border-radius:0 0 2px 2px}.ol-attribution{text-align:right;bottom:.5em;right:.5em;max-width:calc(100% - 1.3em);display:flex;flex-flow:row-reverse;align-items:center}.ol-attribution a{color:var(--ol-subtle-foreground-color);text-decoration:none}.ol-attribution ul{margin:0;padding:1px .5em;color:var(--ol-foreground-color);text-shadow:0 0 2px var(--ol-background-color);font-size:12px}.ol-attribution li{display:inline;list-style:none}.ol-attribution li:not(:last-child):after{content:\\\" \\\"}.ol-attribution img{max-height:2em;max-width:inherit;vertical-align:middle}.ol-attribution button{flex-shrink:0}.ol-attribution.ol-collapsed ul{display:none}.ol-attribution:not(.ol-collapsed){background:var(--ol-partial-background-color)}.ol-attribution.ol-uncollapsible{bottom:0;right:0;border-radius:4px 0 0}.ol-attribution.ol-uncollapsible img{margin-top:-.2em;max-height:1.6em}.ol-attribution.ol-uncollapsible button{display:none}.ol-zoomslider{top:4.5em;left:.5em;height:200px}.ol-zoomslider button{position:relative;height:10px}.ol-touch .ol-zoomslider{top:5.5em}.ol-overviewmap{left:.5em;bottom:.5em}.ol-overviewmap.ol-uncollapsible{bottom:0;left:0;border-radius:0 4px 0 0}.ol-overviewmap .ol-overviewmap-map,.ol-overviewmap button{display:block}.ol-overviewmap .ol-overviewmap-map{border:1px solid var(--ol-subtle-foreground-color);height:150px;width:150px}.ol-overviewmap:not(.ol-collapsed) button{bottom:0;left:0;position:absolute}.ol-overviewmap.ol-collapsed .ol-overviewmap-map,.ol-overviewmap.ol-uncollapsible button{display:none}.ol-overviewmap:not(.ol-collapsed){background:var(--ol-subtle-background-color)}.ol-overviewmap-box{border:1.5px dotted var(--ol-subtle-foreground-color)}.ol-overviewmap .ol-overviewmap-box:hover{cursor:move}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import * as _VARS_ from './vars.json';\n\nexport const VARS = _VARS_;\n\nexport const EVENT_TYPE = {\n  ADDRESSCHOSEN: 'addresschosen',\n};\n\nexport const CONTROL_TYPE = {\n  NOMINATIM: 'nominatim',\n  REVERSE: 'reverse',\n};\n\nexport const TARGET_TYPE = {\n  GLASS: 'glass-button',\n  INPUT: 'text-input',\n};\n\nexport const FEATURE_SRC = '//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png';\n\nexport const PROVIDERS = {\n  OSM: 'osm',\n  MAPQUEST: 'mapquest',\n  PHOTON: 'photon',\n  BING: 'bing',\n  OPENCAGE: 'opencage',\n};\n\nexport const DEFAULT_OPTIONS = {\n  provider: PROVIDERS.OSM,\n  label: '',\n  placeholder: 'Search for an address',\n  featureStyle: null,\n  targetType: TARGET_TYPE.GLASS,\n  lang: 'en-US',\n  limit: 5,\n  keepOpen: false,\n  preventDefault: false,\n  preventPanning: false,\n  preventMarker: false,\n  defaultFlyResolution: 10, // Meters per pixel\n  debug: false,\n};","export function assert(condition, message = 'Assertion failed') {\n  if (!condition) {\n    if (typeof Error !== 'undefined') throw new Error(message);\n\n    throw message; // Fallback\n  }\n}\n\nexport function now() {\n  // Polyfill for window.performance.now()\n  // @license http://opensource.org/licenses/MIT\n  // copyright Paul Irish 2015\n  // https://gist.github.com/paulirish/5438650\n  if ('performance' in window === false) {\n    window.performance = {};\n  }\n\n  if ('now' in window.performance === false) {\n    let nowOffset = Date.now();\n\n    if (performance.timing && performance.timing.navigationStart) {\n      nowOffset = performance.timing.navigationStart;\n    }\n\n    window.performance.now = () => Date.now() - nowOffset;\n  }\n\n  return window.performance.now();\n}\n\nexport function randomId(prefix) {\n  const id = now().toString(36);\n\n  return prefix ? prefix + id : id;\n}\n\nexport function isNumeric(str) {\n  return /^\\d+$/u.test(str);\n}\n\nexport function isEmpty(str) {\n  return !str || str.length === 0;\n}\n\nexport function emptyArray(array) {\n  while (array.length) array.pop();\n}\n\nexport function anyMatchInArray(source, target) {\n  return source.some((each) => target.includes(each));\n}\n\nexport function everyMatchInArray(arr1, arr2) {\n  return arr2.every((each) => arr1.includes(each));\n}\n\nexport function anyItemHasValue(obj, has = false) {\n  const keys = Object.keys(obj);\n\n  keys.forEach((key) => {\n    if (!isEmpty(obj[key])) has = true;\n  });\n\n  return has;\n}","/* eslint-disable prefer-named-capture-group */\nimport {\n  isNumeric\n} from './mix';\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to remove a class.\n */\nexport function addClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => addClass(each, classname));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (!hasClass(element, array[i])) {\n      _addClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String|Array<String>} classname Class or array of classes.\n * For example: 'class1 class2' or ['class1', 'class2']\n * @param {Number|undefined} timeout Timeout to add a class.\n */\nexport function removeClass(element, classname, timeout) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => removeClass(each, classname, timeout));\n\n    return;\n  }\n\n  const array = Array.isArray(classname) ? classname : classname.split(/\\s+/u);\n\n  let i = array.length;\n\n  while (i--) {\n    if (hasClass(element, array[i])) {\n      _removeClass(element, array[i], timeout);\n    }\n  }\n}\n\n/**\n * @param {Element} element DOM node.\n * @param {String} classname Classname.\n * @return {Boolean}\n */\nexport function hasClass(element, c) {\n  // use native if available\n  return element.classList ? element.classList.contains(c) : classRegex(c).test(element.className);\n}\n\n/**\n * @param {Element|Array<Element>} element DOM node or array of nodes.\n * @param {String} classname Classe.\n */\nexport function toggleClass(element, classname) {\n  if (Array.isArray(element)) {\n    element.forEach((each) => toggleClass(each, classname));\n\n    return;\n  }\n\n  // use native if available\n  if (element.classList) {\n    element.classList.toggle(classname);\n  } else {\n    hasClass(element, classname) ? _removeClass(element, classname) : _addClass(element, classname);\n  }\n}\n\n/**\n * Abstraction to querySelectorAll for increased\n * performance and greater usability\n * @param {String} selector\n * @param {Element} context (optional)\n * @param {Boolean} findAll (optional)\n * @return (findAll) {Element} : {Array}\n */\nexport function $(id) {\n  id = id[0] === '#' ? id.slice(1, 1 + id.length) : id;\n\n  return document.getElementById(id);\n}\n\nexport function isElement(obj) {\n  // DOM, Level2\n  if ('HTMLElement' in window) {\n    return !!obj && obj instanceof HTMLElement;\n  }\n\n  // Older browsers\n  return !!obj && typeof obj === 'object' && obj.nodeType === 1 && !!obj.nodeName;\n}\n\nexport function getAllChildren(node, tag) {\n  return [].slice.call(node.getElementsByTagName(tag));\n}\n\nexport function removeAllChildren(node) {\n  while (node.firstChild) node.firstChild.remove();\n}\n\nexport function removeAll(collection) {\n  let node;\n\n  while ((node = collection[0])) node.remove();\n}\n\nexport function getChildren(node, tag) {\n  return [].filter.call(node.childNodes, (el) =>\n    tag ? el.nodeType === 1 && el.tagName.toLowerCase() === tag : el.nodeType === 1\n  );\n}\n\nexport function template(html, row) {\n  return html.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu, (htm, key) => {\n    const value = row[key] === undefined ? '' : row[key];\n\n    return htmlEscape(value);\n  });\n}\n\nexport function htmlEscape(str) {\n  return String(str)\n    .replaceAll('&', '&amp;')\n    .replaceAll('<', '&lt;')\n    .replaceAll('>', '&gt;')\n    .replaceAll('\"', '&quot;')\n    .replaceAll(\"'\", '&#039;');\n}\n\nexport function createElement(node, html) {\n  let elem;\n\n  if (Array.isArray(node)) {\n    elem = document.createElement(node[0]);\n\n    if (node[1].id) elem.id = node[1].id;\n\n    if (node[1].classname) elem.className = node[1].classname;\n\n    if (node[1].attr) {\n      const {\n        attr\n      } = node[1];\n\n      if (Array.isArray(attr)) {\n        let i = -1;\n\n        while (++i < attr.length) {\n          elem.setAttribute(attr[i].name, attr[i].value);\n        }\n      } else {\n        elem.setAttribute(attr.name, attr.value);\n      }\n    }\n  } else {\n    elem = document.createElement(node);\n  }\n\n  elem.innerHTML = html;\n\n  const frag = document.createDocumentFragment();\n\n  while (elem.childNodes[0]) frag.append(elem.childNodes[0]);\n\n  elem.append(frag);\n\n  return elem;\n}\n\nfunction classRegex(classname) {\n  return new RegExp(`(^|\\\\s+) ${classname} (\\\\s+|$)`, 'u');\n}\n\nfunction _addClass(el, klass, timeout) {\n  // use native if available\n  if (el.classList) {\n    el.classList.add(klass);\n  } else {\n    el.className = `${el.className} ${klass}`.trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _removeClass(el, klass), timeout);\n  }\n}\n\nfunction _removeClass(el, klass, timeout) {\n  if (el.classList) {\n    el.classList.remove(klass);\n  } else {\n    el.className = el.className.replace(classRegex(klass), ' ').trim();\n  }\n\n  if (timeout && isNumeric(timeout)) {\n    window.setTimeout(() => _addClass(el, klass), timeout);\n  }\n}","import {\n  VARS,\n  TARGET_TYPE\n} from '../konstants';\n\nimport {\n  createElement\n} from './helpers/dom';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Html\n */\nexport default class Html {\n  /**\n   * @constructor\n   * @param {object} options Options.\n   */\n  constructor(options) {\n    this.options = options;\n    this.els = this.createControl();\n  }\n\n  createControl() {\n    let container;\n    let containerClass;\n    let elements;\n\n    if (this.options.targetType === TARGET_TYPE.INPUT) {\n      containerClass = `${klasses.namespace} ${klasses.inputText.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.input\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.inputText.control}`),\n        label: container.querySelector(`.${klasses.inputText.label}`),\n        input: container.querySelector(`.${klasses.inputText.input}`),\n        search: container.querySelector(`.${klasses.inputText.search}`),\n        result: container.querySelector(`.${klasses.inputText.result}`),\n      };\n      elements.label.innerHTML = this.options.label;\n    } else {\n      containerClass = `${klasses.namespace} ${klasses.glass.container}`;\n      container = createElement(\n        ['div', {\n          id: VARS.containerId,\n          classname: containerClass\n        }],\n        Html.glass\n      );\n      elements = {\n        container,\n        control: container.querySelector(`.${klasses.glass.control}`),\n        button: container.querySelector(`.${klasses.glass.button}`),\n        input: container.querySelector(`.${klasses.glass.input}`),\n        search: container.querySelector(`.${klasses.glass.search}`),\n        result: container.querySelector(`.${klasses.glass.result}`),\n      };\n    }\n\n    // set placeholder from options\n    elements.input.placeholder = this.options.placeholder;\n\n    return elements;\n  }\n}\n\nHtml.glass = `\n  <div class=\"${klasses.glass.control} ${klasses.olControl}\">\n    <button type=\"button\" id=\"${VARS.buttonControlId}\" class=\"${klasses.glass.button}\"></button>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <a id=\"${VARS.inputSearchId}\" class=\"${klasses.glass.search} ${klasses.hidden}\"></a>\n  </div>\n  <ul class=\"${klasses.glass.result}\"></ul>\n`;\n\nHtml.input = `\n  <div class=\"${klasses.inputText.control}\">\n    <label type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.label}\"></label>\n    <input type=\"text\" id=\"${VARS.inputQueryId}\" class=\"${klasses.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\n    <span class=\"${klasses.inputText.icon}\"></span>\n    <button type=\"button\" id=\"${VARS.inputSearchId}\" class=\"${klasses.inputText.search} ${klasses.hidden}\"></button>\n  </div>\n  <ul class=\"${klasses.inputText.result}\"></ul>\n`;","export function json(obj) {\n  return new Promise((resolve, reject) => {\n    const url = encodeUrlXhr(obj.url, obj.data);\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'same-origin',\n    };\n\n    if (obj.jsonp) {\n      jsonp(url, obj.callbackName, resolve);\n    } else {\n      fetch(url, config)\n        .then((r) => r.json())\n        .then(resolve)\n        .catch(reject);\n    }\n  });\n}\n\nfunction toQueryString(obj) {\n  return Object.keys(obj)\n    .reduce((acc, k) => {\n      acc.push(\n        typeof obj[k] === 'object' ?\n        toQueryString(obj[k]) :\n        `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`\n      );\n\n      return acc;\n    }, [])\n    .join('&');\n}\n\nfunction encodeUrlXhr(url, data) {\n  if (data && typeof data === 'object') {\n    url += (/\\?/u.test(url) ? '&' : '?') + toQueryString(data);\n  }\n\n  return url;\n}\n\nfunction jsonp(url, key, callback) {\n  // https://github.com/Fresheyeball/micro-jsonp/blob/master/src/jsonp.js\n  const {\n    head\n  } = document;\n  const script = document.createElement('script');\n  // generate minimally unique name for callback function\n  const callbackName = `f${Math.round(Math.random() * Date.now())}`;\n\n  // set request url\n  script.setAttribute(\n    'src',\n    // add callback parameter to the url\n    //    where key is the parameter key supplied\n    //    and callbackName is the parameter value\n    `${url + (url.indexOf('?') > 0 ? '&' : '?') + key}=${callbackName}`\n  );\n\n  // place jsonp callback on window,\n  //  the script sent by the server should call this\n  //  function as it was passed as a url parameter\n  window[callbackName] = (data) => {\n    window[callbackName] = undefined;\n\n    // clean up script tag created for request\n    setTimeout(() => head.removeChild(script), 0);\n\n    // hand data back to the user\n    callback(data);\n  };\n\n  // actually make the request\n  head.append(script);\n}","/**\n * @class Photon\n */\nexport default class Photon {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://photon.komoot.io/api/',\n\n      params: {\n        q: '',\n        limit: 10,\n        lang: 'en',\n      },\n\n      langs: ['de', 'it', 'fr', 'en'],\n    };\n  }\n\n  getParameters(options) {\n    options.lang = options.lang.toLowerCase();\n\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        limit: options.limit || this.settings.params.limit,\n\n        lang: this.settings.langs.includes(options.lang) ? options.lang : this.settings.params.lang,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.features.length === 0) return [];\n\n    return results.features.map((result) => ({\n      lon: result.geometry.coordinates[0],\n      lat: result.geometry.coordinates[1],\n\n      address: {\n        name: result.properties.name,\n        postcode: result.properties.postcode,\n        city: result.properties.city,\n        state: result.properties.state,\n        country: result.properties.country,\n      },\n\n      original: {\n        formatted: result.properties.name,\n        details: result.properties,\n      },\n    }));\n  }\n}","/**\n * @class OpenStreet\n */\nexport default class OpenStreet {\n  /**\n   * @constructor\n   */\n  constructor(options) {\n    this.settings = {\n      url: 'https://nominatim.openstreetmap.org/search',\n      ...options, // Allow custom URL for osm provider https://github.com/Dominique92/ol-geocoder/issues/266\n\n      params: {\n        q: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        viewbox: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(opt) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: opt.query,\n        format: this.settings.params.format,\n        addressdetails: this.settings.params.addressdetails,\n        limit: opt.limit || this.settings.params.limit,\n        countrycodes: opt.countrycodes || this.settings.params.countrycodes,\n        viewbox: opt.viewbox || this.settings.params.viewbox,\n        'accept-language': opt.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n      bbox: result.boundingbox,\n\n      address: {\n        name: result.display_name,\n        road: result.address.road || '',\n        houseNumber: result.address.house_number || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class MapQuest\n */\nexport default class MapQuest {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://open.mapquestapi.com/nominatim/v1/search.php',\n\n      params: {\n        q: '',\n        key: '',\n        format: 'json',\n        addressdetails: 1,\n        limit: 10,\n        countrycodes: '',\n        'accept-language': 'en-US',\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        format: 'json',\n        addressdetails: 1,\n        limit: options.limit || this.settings.params.limit,\n        countrycodes: options.countrycodes || this.settings.params.countrycodes,\n\n        'accept-language': options.lang || this.settings.params['accept-language'],\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.length === 0) return [];\n\n    return results.map((result) => ({\n      lon: result.lon,\n      lat: result.lat,\n\n      address: {\n        name: result.address.neighbourhood || '',\n        road: result.address.road || '',\n        postcode: result.address.postcode,\n        city: result.address.city || result.address.town,\n        state: result.address.state,\n        country: result.address.country,\n      },\n\n      original: {\n        formatted: result.display_name,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class Bing\n */\nexport default class Bing {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://dev.virtualearth.net/REST/v1/Locations',\n      callbackName: 'jsonp',\n\n      params: {\n        query: '',\n        key: '',\n        includeNeighborhood: 0,\n        maxResults: 10,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n      callbackName: this.settings.callbackName,\n\n      params: {\n        query: options.query,\n        key: options.key,\n\n        includeNeighborhood: options.includeNeighborhood || this.settings.params.includeNeighborhood,\n\n        maxResults: options.maxResults || this.settings.params.maxResults,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    const {\n      resources\n    } = results.resourceSets[0];\n\n    if (resources.length === 0) return [];\n\n    return resources.map((result) => ({\n      lon: result.point.coordinates[1],\n      lat: result.point.coordinates[0],\n\n      address: {\n        name: result.name,\n      },\n\n      original: {\n        formatted: result.address.formattedAddress,\n        details: result.address,\n      },\n    }));\n  }\n}","/**\n * @class OpenCage\n */\nexport default class OpenCage {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.settings = {\n      url: 'https://api.opencagedata.com/geocode/v1/json?',\n\n      params: {\n        q: '',\n        key: '',\n        limit: 10,\n        countrycode: '',\n        pretty: 1,\n        no_annotations: 1,\n      },\n    };\n  }\n\n  getParameters(options) {\n    return {\n      url: this.settings.url,\n\n      params: {\n        q: options.query,\n        key: options.key,\n        limit: options.limit || this.settings.params.limit,\n        countrycode: options.countrycodes || this.settings.params.countrycodes,\n      },\n    };\n  }\n\n  handleResponse(results) {\n    if (results.results.length === 0) return [];\n\n    return results.results.map((result) => ({\n      lon: result.geometry.lng,\n      lat: result.geometry.lat,\n\n      address: {\n        name: result.components.house_number || '',\n        road: result.components.road || '',\n        postcode: result.components.postcode,\n        city: result.components.city || result.components.town,\n        state: result.components.state,\n        country: result.components.country,\n      },\n\n      original: {\n        formatted: result.formatted,\n        details: result.components,\n      },\n    }));\n  }\n}","import LayerVector from 'ol/layer/Vector';\nimport SourceVector from 'ol/source/Vector';\nimport Point from 'ol/geom/Point';\nimport Feature from 'ol/Feature';\nimport * as proj from 'ol/proj';\n\nimport {\n  VARS,\n  TARGET_TYPE,\n  PROVIDERS,\n  EVENT_TYPE\n} from '../konstants';\nimport {\n  hasClass,\n  addClass,\n  removeClass,\n  createElement,\n  template,\n  removeAllChildren,\n} from './helpers/dom';\nimport {\n  randomId\n} from './helpers/mix';\nimport {\n  json\n} from './helpers/ajax';\n\nimport Photon from './providers/photon';\nimport OpenStreet from './providers/osm';\nimport MapQuest from './providers/mapquest';\nimport Bing from './providers/bing';\nimport OpenCage from './providers/opencage';\n\nconst klasses = VARS.cssClasses;\n\n/**\n * @class Nominatim\n */\nexport default class Nominatim {\n  /**\n   * @constructor\n   * @param {Function} base Base class.\n   */\n  constructor(base, els) {\n    this.Base = base;\n\n    this.layerName = randomId('geocoder-layer-');\n    this.layer = new LayerVector({\n      name: this.layerName,\n      source: new SourceVector(),\n      displayInLayerSwitcher: false, // Remove search layer from legend https://github.com/Dominique92/ol-geocoder/issues/256\n    });\n\n    this.options = base.options;\n    // provider is either the name of a built-in provider as a string or an\n    // object that implements the provider API\n    this.options.provider =\n      typeof this.options.provider === 'string' ?\n      this.options.provider.toLowerCase() :\n      this.options.provider;\n    this.provider = this.newProvider();\n\n    this.els = els;\n    this.lastQuery = '';\n    this.container = this.els.container;\n    this.registeredListeners = {\n      mapClick: false,\n    };\n    this.setListeners();\n  }\n\n  setListeners() {\n    const openSearch = (evt) => {\n      evt.stopPropagation();\n      hasClass(this.els.control, klasses.glass.expanded) ? this.collapse() : this.expand();\n    };\n    const query = (evt) => {\n      const value = evt.target.value.trim();\n      const hit = evt.key ?\n        evt.key === 'Enter' :\n        evt.which ?\n        evt.which === 13 :\n        evt.keyCode ?\n        evt.keyCode === 13 :\n        false;\n\n      if (hit) {\n        evt.preventDefault();\n        this.query(value);\n      }\n    };\n    const stopBubbling = (evt) => evt.stopPropagation();\n    const search = () => {\n      this.els.input.focus();\n      this.query(this.els.input.value);\n    };\n    const handleValue = (evt) => {\n      const value = evt.target.value.trim();\n\n      value.length !== 0 ?\n        removeClass(this.els.search, klasses.hidden) :\n        addClass(this.els.search, klasses.hidden);\n    };\n\n    this.els.input.addEventListener('keypress', query, false);\n    this.els.input.addEventListener('click', stopBubbling, false);\n    this.els.input.addEventListener('input', handleValue, false);\n    this.els.search.addEventListener('click', search, false);\n\n    if (this.options.targetType === TARGET_TYPE.GLASS) {\n      this.els.button.addEventListener('click', openSearch, false);\n    }\n  }\n\n  query(q) {\n    // lazy provider\n    if (!this.provider) {\n      this.provider = this.newProvider();\n    }\n\n    const parameters = this.provider.getParameters({\n      query: q,\n      key: this.options.key,\n      lang: this.options.lang,\n      countrycodes: this.options.countrycodes,\n      viewbox: this.options.viewbox,\n      limit: this.options.limit,\n    });\n\n    if (this.lastQuery === q && this.els.result.firstChild) return;\n\n    this.lastQuery = q;\n    this.clearResults();\n    addClass(this.els.search, klasses.spin);\n\n    const ajax = {\n      url: parameters.url,\n      data: parameters.params,\n    };\n\n    if (parameters.callbackName) {\n      ajax.jsonp = true;\n      ajax.callbackName = parameters.callbackName;\n    }\n\n    json(ajax)\n      .then((res) => {\n        // eslint-disable-next-line no-console\n        this.options.debug && console.info(res);\n\n        removeClass(this.els.search, klasses.spin);\n\n        // will be fullfiled according to provider\n        const res_ = this.provider.handleResponse(res);\n\n        if (res_) {\n          this.createList(res_);\n          this.listenMapClick();\n        }\n      })\n      .catch(() => {\n        removeClass(this.els.search, klasses.spin);\n\n        const li = createElement('li', '<h5>Error! No internet connection?</h5>');\n\n        this.els.result.append(li);\n      });\n  }\n\n  createList(response) {\n    const ul = this.els.result;\n\n    response.forEach((row) => {\n      let addressHtml;\n\n      switch (this.options.provider) {\n        case PROVIDERS.OSM:\n          addressHtml = `<span class=\"${klasses.road}\">${row.address.name}</span>`;\n          break;\n\n        default:\n          addressHtml = this.addressTemplate(row.address);\n      }\n\n      if (response.length == 1) {\n        this.chosen(row, addressHtml, row.address, row.original);\n      } else {\n        const li = createElement('li', `<a href=\"#\">${addressHtml}</a>`);\n\n        li.addEventListener(\n          'click',\n          (evt) => {\n            evt.preventDefault();\n            this.chosen(row, addressHtml, row.address, row.original);\n          },\n          false\n        );\n\n        ul.append(li);\n      }\n    });\n  }\n\n  chosen(place, addressHtml, addressObj, addressOriginal) {\n    const map = this.Base.getMap();\n    const coord_ = [Number.parseFloat(place.lon), Number.parseFloat(place.lat)];\n    const projection = map.getView().getProjection();\n    const coord = proj.transform(coord_, 'EPSG:4326', projection);\n\n    let {\n      bbox\n    } = place;\n\n    if (bbox) {\n      bbox = proj.transformExtent(\n        // https://nominatim.org/release-docs/latest/api/Output/#boundingbox\n        // Requires parseFloat on negative bbox entries\n        [parseFloat(bbox[2]), parseFloat(bbox[0]), parseFloat(bbox[3]), parseFloat(bbox[1])], // SNWE -> WSEN\n        'EPSG:4326',\n        projection\n      );\n    }\n\n    const address = {\n      formatted: addressHtml,\n      details: addressObj,\n      original: addressOriginal,\n    };\n\n    this.options.keepOpen === false && this.clearResults(true);\n\n    if (this.options.preventDefault === true || this.options.preventMarker === true) {\n      // No display change\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    } else {\n      // Display a marker\n      const feature = this.createFeature(coord, address);\n\n      this.Base.dispatchEvent({\n        type: EVENT_TYPE.ADDRESSCHOSEN,\n        address,\n        feature,\n        coordinate: coord,\n        bbox,\n        place,\n      });\n    }\n\n    if (this.options.preventDefault !== true && this.options.preventPanning !== true) {\n      // Move & zoom to the position\n      if (bbox) {\n        map.getView().fit(bbox, {\n          duration: 500,\n        });\n      } else {\n        map.getView().animate({\n          center: coord,\n          // ol-geocoder results are too much zoomed -in Dominique92/ol-geocoder#235\n          resolution: this.options.defaultFlyResolution,\n          duration: 500,\n        });\n      }\n    }\n  }\n\n  createFeature(coord) {\n    const feature = new Feature(new Point(coord));\n\n    this.addLayer();\n    feature.setStyle(this.options.featureStyle);\n    feature.setId(randomId('geocoder-ft-'));\n    this.getSource().addFeature(feature);\n\n    return feature;\n  }\n\n  addressTemplate(address) {\n    const html = [];\n\n    if (address.name) {\n      html.push(['<span class=\"', klasses.road, '\">{name}</span>'].join(''));\n    }\n\n    if (address.road || address.building || address.house_number) {\n      html.push(\n        ['<span class=\"', klasses.road, '\">{building} {road} {house_number}</span>'].join('')\n      );\n    }\n\n    if (address.city || address.town || address.village) {\n      html.push(\n        ['<span class=\"', klasses.city, '\">{postcode} {city} {town} {village}</span>'].join('')\n      );\n    }\n\n    if (address.state || address.country) {\n      html.push(['<span class=\"', klasses.country, '\">{state} {country}</span>'].join(''));\n    }\n\n    return template(html.join('<br>'), address);\n  }\n\n  newProvider() {\n    switch (this.options.provider) {\n      case PROVIDERS.OSM:\n        return new OpenStreet(this.options);\n      case PROVIDERS.MAPQUEST:\n        return new MapQuest();\n      case PROVIDERS.PHOTON:\n        return new Photon();\n      case PROVIDERS.BING:\n        return new Bing();\n      case PROVIDERS.OPENCAGE:\n        return new OpenCage();\n\n      default:\n        return this.options.provider;\n    }\n  }\n\n  expand() {\n    removeClass(this.els.input, klasses.spin);\n    addClass(this.els.control, klasses.glass.expanded);\n    window.setTimeout(() => this.els.input.focus(), 100);\n    this.listenMapClick();\n  }\n\n  collapse() {\n    this.els.input.value = '';\n    this.els.input.blur();\n    addClass(this.els.search, klasses.hidden);\n    removeClass(this.els.control, klasses.glass.expanded);\n    this.clearResults();\n  }\n\n  listenMapClick() {\n    // already registered\n    if (this.registeredListeners.mapClick) return;\n\n    const that = this;\n    const mapElement = this.Base.getMap().getTargetElement();\n\n    this.registeredListeners.mapClick = true;\n\n    // one-time fire click\n    mapElement.addEventListener(\n      'click', {\n        handleEvent(evt) {\n          that.clearResults(true);\n          mapElement.removeEventListener(evt.type, this, false);\n          that.registeredListeners.mapClick = false;\n        },\n      },\n      false\n    );\n  }\n\n  clearResults(collapse) {\n    collapse && this.options.targetType === TARGET_TYPE.GLASS ?\n      this.collapse() :\n      removeAllChildren(this.els.result);\n  }\n\n  getSource() {\n    return this.layer.getSource();\n  }\n\n  addLayer() {\n    let found = false;\n\n    const map = this.Base.getMap();\n\n    map.getLayers().forEach((layer) => {\n      if (layer === this.layer) found = true;\n    });\n\n    if (!found) map.addLayer(this.layer);\n  }\n}","import Control from 'ol/control/Control';\nimport Style from 'ol/style/Style';\nimport Icon from 'ol/style/Icon';\n\nimport {\n  CONTROL_TYPE,\n  DEFAULT_OPTIONS,\n  FEATURE_SRC\n} from '../konstants';\n\nimport Html from './html';\nimport Nominatim from './nominatim';\nimport {\n  assert,\n} from './helpers/mix';\n\n/**\n * @class Base\n * @extends {ol.control.Control}\n */\nexport default class Base extends Control {\n  /**\n   * @constructor\n   * @param {string} type nominatim|reverse.\n   * @param {object} options Options.\n   */\n  constructor(type = CONTROL_TYPE.NOMINATIM, opt) {\n    assert(typeof type === 'string', '@param `type` should be string!');\n    assert(\n      type === CONTROL_TYPE.NOMINATIM || type === CONTROL_TYPE.REVERSE,\n      `@param 'type' should be '${CONTROL_TYPE.NOMINATIM}'\n      or '${CONTROL_TYPE.REVERSE}'!`\n    );\n    const options = {\n      ...DEFAULT_OPTIONS,\n      featureStyle: [\n        new Style({\n          image: new Icon({\n            scale: 0.7,\n            src: FEATURE_SRC\n          })\n        }),\n      ],\n      ...opt,\n    };\n\n    let container;\n    let $nominatim;\n    const $html = new Html(options);\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      container = $html.els.container;\n    }\n\n    super({\n      element: container,\n      ...options, // Allows to add ol.control.Control options (as target:)\n    });\n\n    if (!(this instanceof Base)) return new Base();\n\n    this.options = options;\n    this.container = container;\n\n    if (type === CONTROL_TYPE.NOMINATIM) {\n      $nominatim = new Nominatim(this, $html.els);\n      this.layer = $nominatim.layer;\n    }\n  }\n\n  /**\n   * @return {ol.layer.Vector} Returns the layer created by this control\n   */\n  getLayer() {\n    return this.layer;\n  }\n\n  /**\n   * @return {ol.source.Vector} Returns the source created by this control\n   */\n  getSource() {\n    return this.getLayer().getSource();\n  }\n\n  /**\n   * Set a new provider\n   * @param {String} provider\n   */\n  setProvider(provider) {\n    this.options.provider = provider;\n  }\n\n  /**\n   * Set provider key\n   * @param {String} key\n   */\n  setProviderKey(key) {\n    this.options.key = key;\n  }\n}","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[1]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[2]!../../postcss-loader/dist/cjs.js??clonedRuleSet-11[0].rules[0].use[3]!./ol-geocoder.min.css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2a480e2a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DisplayOnMap.vue?vue&type=style&index=1&id=637ba9a7&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b04bb4ee\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LinkPicker.vue?vue&type=style&index=0&id=a5930508&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d9648a00\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayerContent.vue?vue&type=style&index=0&id=8778e5e8&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5b624c84\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayersPane.vue?vue&type=style&index=0&id=4452beca&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"049fe179\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LayersPane.vue?vue&type=style&index=1&lang=scss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"97ac146a\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapModule.vue?vue&type=style&index=0&id=e37bfba4&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7db7271e\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapView.vue?vue&type=style&index=0&id=6421cfb2&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1404a19b\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewContent.vue?vue&type=style&index=0&id=1660811c&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ae1ca972\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ViewPane.vue?vue&type=style&index=0&id=219a07dc&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"80de9730\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19[0].rules[0].use[4]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModuleCreator.vue?vue&type=style&index=0&id=b8fc6ff2&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"96ce1bb2\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../css-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[1]!../@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[2]!../postcss-loader/dist/cjs.js??clonedRuleSet-9[0].rules[0].use[3]!./ol.css?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7dd8b254\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    throw new Error('Invalid color');\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.1.0';\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","is_small","ref","directives","name","rawName","value","clicked_location","file","$slots","hasOwnProperty","expression","key","latitude","longitude","attrs","on","closePopup","$path","_e","domProps","_s","popup_message","_t","staticRenderFns","IDLE","LOADING","LOADED","ERROR","EMPTY","Tile","EventTarget","constructor","tileCoord","state","options","super","interimTile","transition_","undefined","transition","transitionStarts_","interpolate","changed","dispatchEvent","EventType","release","TileState","setState","getKey","getInterimTile","tile","getState","refreshInterimChain","prev","getTileCoord","Error","load","abstract","getAlpha","id","time","start","delta","easeIn","inTransition","endTransition","ImageTile","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","element","unlistenImage_","handleImageError_","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","listenImage","bind","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","getTransform","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","canWrapX","getExtent","getWidth","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","getTopLeft","destinationTopRight","getTopRight","destinationBottomRight","getBottomRight","destinationBottomLeft","getBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","Math","max","ceil","log2","getArea","addQuad_","leftBound","Infinity","forEach","triangle","i","arr","min","source","newTriangle","minX","maxX","addTriangle_","a","b","aSrc","bSrc","cSrc","push","target","d","dSrc","sourceQuadExtent","boundingExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","isFinite","intersects","isNotFinite","center","centerSrc","dx","centerSrcEstimX","modulo","dy","centerSrcErrorSquared","abs","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","extent","createEmpty","extendCoordinate","getTriangles","brokenDiagonalRendering_","canvasPool","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","verifyBrokenDiagonalRendering","data","offset","isBrokenDiagonalRendering","globalCompositeOperation","getImageData","releaseCanvas","calculateSourceResolution","targetCenter","targetResolution","sourceCenter","transform","sourceResolution","getPointResolution","targetMetersPerUnit","getMetersPerUnit","sourceMetersPerUnit","sourceExtent","containsCoordinate","compensationFactor","calculateSourceExtentResolution","getCenter","forEachCorner","corner","width","height","pixelRatio","triangulation","sources","gutter","renderEdges","context","round","imageSmoothingEnabled","length","pixelRound","scale","sourceDataExtent","extend","canvasWidthInUnits","canvasHeightInUnits","getHeight","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","x0","y0","x1","y1","x2","y2","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","pixelRatio_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","getIntersection","sourceProjExtent","getResolution","errorThresholdInPixels","triangulation_","getZForResolution","clamp","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","minY","maxY","reproject_","z","size","getTileSize","renderReprojected","leftToLoad","sourceListenKey","listen","e","unlistenByKey","unlistenSources_","setTimeout","getContext","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","f","entry","value_","key_","newer","get","assert","older","remove","getKeys","keys","Array","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","set","setSize","createOrUpdate","x","y","getKeyZXY","fromKey","split","map","Number","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","TileCache","usedTiles","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileRange","contains","containsTileRange","equals","getSize","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","minZoom","resolutions_","resolutions","isSorted","origins","ii","zoomFactor_","maxZoom","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","DEFAULT_TILE_SIZE","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","zoom","callback","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","floor","createOrUpdateTileRange","getOrigin","getResolutions","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","pow","getTileCoordForXYAndZ_","getTileCoordCenter","resolution","toSize","getTileCoordForCoordAndResolution","coordinate","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","opt_direction","linearFindNearest","tileCoordIntersectsViewport","viewport","intersectsLinearRing","fullTileRanges","getForProjection","projection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","getProjection","gridOptions","maxResolution","DEFAULT_MAX_ZOOM","half","METERS_PER_UNIT","TileSource","Source","attributions","attributionsCollapsible","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","getWrapX","refresh","updateCacheSize","tileCount","useTile","TileSourceEvent","Event","type","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","toString","range","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","tileCoordHash","index","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","String","fromCharCode","stop","parseInt","UrlTile","generateTileUrlFunction_","tileUrlFunction","prototype","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","getUrls","handleTileChange","event","uid","getUid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","addEventListener","getTileInternal","cache","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","ATTRIBUTION","OSM","appendParams","uri","params","keyParams","k","encodeURIComponent","qs","includes","WMTS","requestEncoding","version_","version","format_","format","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","style","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getFormat","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","slice","updateDimensions","assign","m","p","toLowerCase","localContext","getMatrixId","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","rotation","makeInverse","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","call","translatedCoordinate","offsets","layerStates","layerStatesArray","numLayers","matches","tmpCoord","layerState","hasRenderer","inView","layerRenderer","getRenderer","getSource","coordinates","order","distanceSq","sort","some","hasFeatureAtCoordinate","hasFeature","TRUE","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","CompositeMapRenderer","fontChangeListenerKey_","checkedFonts","ObjectEventType","redrawText","element_","document","createElement","position","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","RenderEvent","disposeInternal","parentNode","removeChild","display","RenderEventType","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","replaceChildren","layers","renderDeclutter","GroupEvent","Property","LAYERS","LayerGroup","BaseLayer","baseOptions","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","isArray","Collection","unique","getArray","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","minResolution","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","TileQueue","tilePriorityFunction","tileChangeCallback","apply","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","Attribution","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","appendChild","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","setZoom","defaults","controls","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","ACTIVE","Interaction","BaseObject","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","setMap","pan","currentCenter","getCenterInternal","animateInternal","linear","getConstrainedCenter","zoomByDelta","anchor","newResolution","getResolutionForZoom","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","pointerEvents","all","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","endInteraction","DragRotate","lastAngle_","getConstraints","disable","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","pixels","setCoordinates","Polygon","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","clone","fitInternal","LEFT","UP","RIGHT","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","Date","now","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","View","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getOverlayContainerStopEvent","ownerDocument","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","cont","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","lowOnFrameBudget","MapEventType","resolveConstraints","dispose","removeNode","unobserve","ShadowRoot","host","getElementById","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","moveStart","equalsExtent","createOrUpdateEmpty","idle","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","interpolatePoint","flatCoordinates","stride","fraction","dimension","o","t","cumulativeLengths","binarySearch","NaN","lerp","lineStringCoordinateAtM","extrapolate","lo","hi","mid","m0","m1","LineString","SimpleGeometry","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","getRevision","maxSquaredDelta","assignClosestPoint","forEachSegment","getCoordinateAtM","getCoordinates","inflateCoordinates","getCoordinateAt","getLength","lineStringLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","getType","intersectsExtent","intersectsLineString","setLayout","deflateCoordinates","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","getData","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","layerExtent","getRenderSource","tileOrigin","col","row","loadedTileCallback","tiles","prepareFrame","viewResolution","viewCenter","sourceRevision","fromUserExtent","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","getRotatedViewport","childTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getBackground","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","preRender","clips","clipZs","currentClip","zs","ascending","reverse","currentZ","currentTilePixelSize","currentResolution","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","w","contextSaved","drawTileImage","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","tileCallback","TileLayer","createRenderer","WMTSTileGrid","matrixIds_","matrixIds","getMatrixIds","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","CLASS_SELECTABLE","autoPan","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","childNodes","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","outerWidth","outerHeight","myMargin","margin","containsExtent","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","animation","box","offsetX","pageXOffset","offsetY","pageYOffset","setVisible","mapSize","updateRenderedPosition","posX","posY","getOptions","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","isFullScreenSupported","isFullScreen","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","removeChangeListener","listeners","CLASS_UNSUPPORTED","body","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","scaleBarText_","text","dpi_","dpi","getUnits","setDpi","pointResolutionUnits","pointResolution","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","html","createScaleBar","toFixed","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","scaleBarText","isLast","lengthString","inchesPerMeter","props","pins","lines","start_coords","start_zoom","default","map_baselayer","validator","show_scale","opened_pin_path","can_add_media_to_point","components","pin_infos","pin_coord","pin_features","mouse_feature","current_zoom","current_view","min_zoom","max_zoom","mouse_coords","i18n","messages","fr","mouse_position","search_for_a_place","created","mounted","beforeDestroy","watch","handler","keep_loc_and_zoom","deep","computed","methods","startMap","olProj","fill_color","provider","lang","placeholder","limit","keepOpen","geocoder","feature_selected","createSource","noWrap","createPointFeaturesFromPins","feature_cont","createLineFeaturesFromLines","color","makePointStyle","italic","weight","family","fill","font","_fs","textAlign","radius","makeLineStyle","resetClickedLocation","navigateTo","openPin","openFeature","component","current_project_path","select_mode","$event","$emit","publication_path","publication","opened_view_path","can_edit","toggleView","MapView","page_opened_id","prop","val","opened_layer_path","newPositionClicked","slot","new_module_meta","addModules","_v","$t","views","openLayer","scopedSlots","_u","fn","slotProps","item","section_color","default_layer_color","section_title","modules_list","createLayer","opened_layer","repickLocation","closeLayer","is_repicking_location_for","updateOpenedLayer","field","link_pins","layer_modules_list","firstMedia","mapmodule","has_coordinates","location","removeModule","no_coordinates","position_on_map","place_on_map","change_location","remove_pin","first_media","source_media","folder_path","closeLogOnClick","error","section","path","ModuleCreator","MapModule","pins_color","remove_layer","_module","new_meta","meta_filenames","LayerContent","provide","$getMetaFilenamesAlreadyPresent","click_on_map_to_repick_location_for_media","on_this_layer","on_another_layer","new_layer_title","idx","meta_filenames_already_present","current","other","sections","opened_section_meta_filename","medias","updateOrder","meta_filename","layers_list","isActive","updateMeta","catch","openView","createView","opened_view","closeView","ViewContent","views_list","v","new_view_title","DisplayOnMap","LayersPane","ViewPane","latest_click","to_add_media_here_open_matching_layer","l","files","acc","belongs_to_layer","show_module_selector","is_collapsed","types_available","createText","staticStyle","show_media_picker","createMosaic","show_file_picker","createFiles","show_link_picker","createEmbed","_l","shape","createCustomModule","module_type","addtl_meta","icon","composing","full_url","url_to_site","autoplay","pre_addtl_meta","post_addtl_meta","show_labels","MediaPicker","LinkPicker","shapes","background_color","outline_width","outline_color","is_saving","path_to_source_media_metas","source_medias","path_to_source_media_meta","meta_filename_in_project","sm","filename","content","additional_meta","$type","requested_slug","uploadFile","___CSS_LOADER_EXPORT___","module","VARS","EVENT_TYPE","CONTROL_TYPE","TARGET_TYPE","PROVIDERS","DEFAULT_OPTIONS","featureStyle","targetType","preventPanning","preventMarker","defaultFlyResolution","debug","message","randomId","prefix","performance","nowOffset","timing","navigationStart","isNumeric","str","test","addClass","classname","each","hasClass","_addClass","removeClass","_removeClass","classRegex","htm","replaceAll","node","elem","attr","frag","createDocumentFragment","append","RegExp","el","klass","trim","klasses","Html","els","createControl","containerClass","namespace","inputText","containerId","input","querySelector","search","glass","json","obj","Promise","resolve","reject","toQueryString","config","method","mode","credentials","jsonp","head","script","callbackName","random","indexOf","fetch","r","reduce","olControl","buttonControlId","inputQueryId","inputSearchId","hidden","Photon","settings","q","langs","getParameters","query","handleResponse","results","lon","lat","address","properties","postcode","city","country","original","formatted","details","OpenStreet","addressdetails","countrycodes","viewbox","opt","bbox","boundingbox","display_name","road","houseNumber","house_number","town","MapQuest","neighbourhood","Bing","includeNeighborhood","maxResults","resources","resourceSets","point","formattedAddress","OpenCage","countrycode","pretty","no_annotations","lng","Nominatim","base","Base","layerName","LayerVector","SourceVector","displayInLayerSwitcher","newProvider","lastQuery","registeredListeners","mapClick","setListeners","openSearch","evt","expanded","collapse","expand","which","keyCode","parameters","clearResults","spin","ajax","console","info","res_","createList","listenMapClick","li","response","ul","addressHtml","addressTemplate","chosen","place","addressObj","addressOriginal","coord_","coord","transformExtent","createFeature","fit","Feature","Point","setStyle","setId","addFeature","building","village","blur","that","mapElement","found","Style","Icon","$nominatim","$html","setProvider","setProviderKey","exports","s","exp","u","_maxEntries","_minEntries","children","leaf","_all","toBBox","collides","insert","_build","_splitRoot","_insert","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","__esModule","locals","LENGTH","CollectionEvent","unique_","array_","assertUnique_","updateLength_","insertAt","removeAt","setAt","except","ADD","REMOVE","disposed","geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","setGeometry","hasProperties","getProperties","setGeometryName","getGeometryName","getStyleFunction","handleGeometryChange_","createStyleFunction","styles","getZIndex","loadHandler","errorHandler","img","listening","decoding","listenOnce","IMAGE_DECODE","decode","handleLoad","unlisten","handleError","decodeFallback","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","ObjectEvent","oldValue","Observable","values_","getPropertiesInternal","notify","listener","silent","unset","PROPERTYCHANGE","onInternal","onceInternal","unInternal","revision_","ol_key","unByKey","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","cappedMaxRes","capped","createSnapToPower","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","complete","inAndOut","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","geometryOrExtent","polygonFromExtent","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","VOID","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","coordinatesEqual","ANIMATING","INTERACTING","haystack","needle","comparator","cmp","low","high","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","func","strict","compare","every","currentVal","assertion","errorMessage","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","rgb","fromString","MAX_CACHE_SIZE","fromStringInternal_","asArray","g","hasAlpha","substr","startsWith","normalize","asColorLike","levels","level","target_","coordinate1","coordinate2","getWorldsAway","sourceExtentWidth","fontRegEx","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","variant","families","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","marginLeft","marginRight","marginTop","marginBottom","newNode","oldNode","parent","replaceChild","lastChild","oldChildren","oldChild","newChild","originalListener","eventsKey","BaseEvent","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","eventTarget_","pendingRemovals_","dispatching_","listeners_","listenersForType","isString","dispatching","pendingRemovals","propagate","pr","getListeners","_boundingExtentXYs","xs","ys","buffer","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","extendFlatCoordinates","extendXY","area","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","wrapAndSliceX","UNKNOWN","INTERSECTING","ABOVE","BELOW","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","squaredDistance","squaredDx","computeExtent","deflateCoordinate","linearRing","twiceArea","linearRings","ends","LinearRing","linearRingArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","linearRingsContainsXY","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRingsArea","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","simplifyTransformed","getClosestPoint","intersectsCoordinate","sx","sy","simplify","destination","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","squaredDelta","isRing","tmpPoint","linearRingContainsExtent","outside","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","coordinatesExtent","point1","point2","ret","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","ua","navigator","userAgent","SAFARI","devicePixelRatio","WorkerGlobalScope","self","background_","background","LayerProperty","className_","state_","getClassName","getOpacity","getVisible","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","handleSourcePropertyChange_","setSource","handleSourceChange_","getFeatures","isVisible","getMapInternal","find","renderEvent","arrayLayerState","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","parse","encoded","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","op","atan","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","setFill","setStroke","setText","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","Text","setBackgroundFill","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","optionalColorLike","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","setDisplacement","setAnchor","pointsName","points","requireNumber","radius1","radius2","RegularShape","evaluateRadius","circle","Circle","setRadius","requireColorLike","requireNumberArray","requireSizeLike","property","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","createDefaultStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p1","p2","p3","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","getPixelIndexArray","imageData","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","imageState","getImageState","ImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","hasRenderListeners","clipped","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","Projection","code_","code","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","fromEPSG4326","output","toEPSG4326","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","hide","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","getter","projUnits","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","destProj","fromLonLat","toLonLat","lonLat","equalUnits","transformFunc","destinationProjection","getTransformFunc","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","transformed","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","measureFont","measureContext","textHeights","retries","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","loadImage","pixelContext","createPixelContext","pixelContext_","err","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","removeLoadedExtent","featureChangeKeys","removed","setLoader","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","cacheKey","iconImage","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","iconImage_","getIconImage","offset_","offsetOrigin_","initialOptions_","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","colorString","shared","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","maxr","bevelAdd","aa","bb","ee","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","create","setFromArray","transform1","transform2","compose","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid"],"sourceRoot":""}